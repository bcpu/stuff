
/********************************************************
*                                                       *
*   Package generated using UEDumper by Spuckwaffel.    *
*                                                       *
********************************************************/

#pragma once
/// dependency: BasicType
/// dependency: AdvancedSessions
/// dependency: AIModule
/// dependency: AnimGraphRuntime
/// dependency: ClientAuthoritativeCharacterSystem
/// dependency: CoreUObject
/// dependency: Engine
/// dependency: InputCore
/// dependency: NavigationSystem
/// dependency: Niagara
/// dependency: OnlineSubsystemUtils
/// dependency: Slate
/// dependency: SlateCore
/// dependency: SteamCorePro
/// dependency: UMG
/// dependency: VaRest

#pragma pack(push, 0x1)

/// Enum /Game/Blueprints/Characters/E_MovementModes.E_MovementModes
/// Size: 0x01 (1 bytes)
enum class E_MovementModes : uint8_t
{
	E_MovementModes__NewEnumerator0                                                  = 0,
	E_MovementModes__NewEnumerator1                                                  = 1,
	E_MovementModes__NewEnumerator2                                                  = 2
};

/// Enum /Game/Blueprints/Equipables/E_EquipableSprintStyles.E_EquipableSprintStyles
/// Size: 0x01 (1 bytes)
enum class E_EquipableSprintStyles : uint8_t
{
	E_EquipableSprintStyles__NewEnumerator0                                          = 0,
	E_EquipableSprintStyles__NewEnumerator1                                          = 1,
	E_EquipableSprintStyles__NewEnumerator2                                          = 2,
	E_EquipableSprintStyles__NewEnumerator3                                          = 3,
	E_EquipableSprintStyles__NewEnumerator4                                          = 4,
	E_EquipableSprintStyles__NewEnumerator5                                          = 5
};

/// Enum /Game/Blueprints/Vehicles/E_PlaneStrafingStates.E_PlaneStrafingStates
/// Size: 0x01 (1 bytes)
enum class E_PlaneStrafingStates : uint8_t
{
	E_PlaneStrafingStates__NewEnumerator0                                            = 0,
	E_PlaneStrafingStates__NewEnumerator1                                            = 1,
	E_PlaneStrafingStates__NewEnumerator2                                            = 2
};

/// Enum /Game/Blueprints/Vehicles/E_VehicleAnimationTypes.E_VehicleAnimationTypes
/// Size: 0x01 (1 bytes)
enum class E_VehicleAnimationTypes : uint8_t
{
	E_VehicleAnimationTypes__NewEnumerator1                                          = 0,
	E_VehicleAnimationTypes__NewEnumerator0                                          = 1,
	E_VehicleAnimationTypes__NewEnumerator2                                          = 2,
	E_VehicleAnimationTypes__NewEnumerator3                                          = 3
};

/// Enum /Game/Blueprints/E_VoteOptions.E_VoteOptions
/// Size: 0x01 (1 bytes)
enum class E_VoteOptions : uint8_t
{
	E_VoteOptions__NewEnumerator0                                                    = 0,
	E_VoteOptions__NewEnumerator1                                                    = 1,
	E_VoteOptions__NewEnumerator2                                                    = 2
};

/// Enum /Game/Blueprints/E_CombatZoneTypes.E_CombatZoneTypes
/// Size: 0x01 (1 bytes)
enum class E_CombatZoneTypes : uint8_t
{
	E_CombatZoneTypes__NewEnumerator0                                                = 0,
	E_CombatZoneTypes__NewEnumerator1                                                = 1,
	E_CombatZoneTypes__NewEnumerator2                                                = 2,
	E_CombatZoneTypes__NewEnumerator3                                                = 3
};

/// Enum /Game/Blueprints/Objectives/E_SpawnTypes.E_SpawnTypes
/// Size: 0x01 (1 bytes)
enum class E_SpawnTypes : uint8_t
{
	E_SpawnTypes__NewEnumerator0                                                     = 0,
	E_SpawnTypes__NewEnumerator1                                                     = 1,
	E_SpawnTypes__NewEnumerator2                                                     = 2,
	E_SpawnTypes__NewEnumerator3                                                     = 3
};

/// Enum /Game/Blueprints/CosmeticItems/E_ChestTypes.E_ChestTypes
/// Size: 0x01 (1 bytes)
enum class E_ChestTypes : uint8_t
{
	E_ChestTypes__NewEnumerator0                                                     = 0,
	E_ChestTypes__NewEnumerator1                                                     = 1
};

/// Enum /Game/Blueprints/Skills/E_SkillSlots.E_SkillSlots
/// Size: 0x01 (1 bytes)
enum class E_SkillSlots : uint8_t
{
	E_SkillSlots__NewEnumerator0                                                     = 0,
	E_SkillSlots__NewEnumerator1                                                     = 1
};

/// Enum /Game/Blueprints/Vehicles/E_AlternatePlaneWeapons.E_AlternatePlaneWeapons
/// Size: 0x01 (1 bytes)
enum class E_AlternatePlaneWeapons : uint8_t
{
	E_AlternatePlaneWeapons__NewEnumerator0                                          = 0,
	E_AlternatePlaneWeapons__NewEnumerator1                                          = 1
};

/// Enum /Game/Blueprints/Equipables/E_WeaponRange.E_WeaponRange
/// Size: 0x01 (1 bytes)
enum class E_WeaponRange : uint8_t
{
	E_WeaponRange__NewEnumerator0                                                    = 0,
	E_WeaponRange__NewEnumerator1                                                    = 1,
	E_WeaponRange__NewEnumerator3                                                    = 2,
	E_WeaponRange__NewEnumerator4                                                    = 3,
	E_WeaponRange__NewEnumerator5                                                    = 4,
	E_WeaponRange__NewEnumerator7                                                    = 5,
	E_WeaponRange__NewEnumerator8                                                    = 6,
	E_WeaponRange__NewEnumerator10                                                   = 7,
	E_WeaponRange__NewEnumerator11                                                   = 8,
	E_WeaponRange__NewEnumerator12                                                   = 9,
	E_WeaponRange__NewEnumerator13                                                   = 10,
	E_WeaponRange__NewEnumerator14                                                   = 11,
	E_WeaponRange__NewEnumerator15                                                   = 12,
	E_WeaponRange__NewEnumerator16                                                   = 13,
	E_WeaponRange__NewEnumerator17                                                   = 14
};

/// Enum /Game/Blueprints/Equipables/E_TrailLengths.E_TrailLengths
/// Size: 0x01 (1 bytes)
enum class E_TrailLengths : uint8_t
{
	E_TrailLengths__NewEnumerator0                                                   = 0,
	E_TrailLengths__NewEnumerator1                                                   = 1,
	E_TrailLengths__NewEnumerator2                                                   = 2
};

/// Enum /Game/Blueprints/Equipables/E_WeaponTypes.E_WeaponTypes
/// Size: 0x01 (1 bytes)
enum class E_WeaponTypes : uint8_t
{
	E_WeaponTypes__NewEnumerator2                                                    = 0,
	E_WeaponTypes__NewEnumerator0                                                    = 1,
	E_WeaponTypes__NewEnumerator1                                                    = 2,
	E_WeaponTypes__NewEnumerator3                                                    = 3,
	E_WeaponTypes__NewEnumerator4                                                    = 4,
	E_WeaponTypes__NewEnumerator5                                                    = 5,
	E_WeaponTypes__NewEnumerator6                                                    = 6,
	E_WeaponTypes__NewEnumerator7                                                    = 7,
	E_WeaponTypes__NewEnumerator8                                                    = 8,
	E_WeaponTypes__NewEnumerator9                                                    = 9,
	E_WeaponTypes__NewEnumerator10                                                   = 10,
	E_WeaponTypes__NewEnumerator11                                                   = 11,
	E_WeaponTypes__NewEnumerator12                                                   = 12,
	E_WeaponTypes__NewEnumerator13                                                   = 13,
	E_WeaponTypes__NewEnumerator14                                                   = 14
};

/// Enum /Game/Blueprints/Vehicles/E_VehicleSkinThemes.E_VehicleSkinThemes
/// Size: 0x01 (1 bytes)
enum class E_VehicleSkinThemes : uint8_t
{
	E_VehicleSkinThemes__NewEnumerator0                                              = 0,
	E_VehicleSkinThemes__NewEnumerator1                                              = 1,
	E_VehicleSkinThemes__NewEnumerator2                                              = 2,
	E_VehicleSkinThemes__NewEnumerator3                                              = 3
};

/// Enum /Game/Blueprints/AI/E_AITeamPlayStyles.E_AITeamPlayStyles
/// Size: 0x01 (1 bytes)
enum class E_AITeamPlayStyles : uint8_t
{
	E_AITeamPlayStyles__NewEnumerator0                                               = 0,
	E_AITeamPlayStyles__NewEnumerator1                                               = 1,
	E_AITeamPlayStyles__NewEnumerator2                                               = 2,
	E_AITeamPlayStyles__NewEnumerator3                                               = 3
};

/// Enum /Game/Blueprints/Gamemodes/E_GameModes.E_GameModes
/// Size: 0x01 (1 bytes)
enum class E_GameModes : uint8_t
{
	E_GameModes__NewEnumerator0                                                      = 0,
	E_GameModes__NewEnumerator1                                                      = 1,
	E_GameModes__NewEnumerator2                                                      = 2,
	E_GameModes__NewEnumerator3                                                      = 3,
	E_GameModes__NewEnumerator4                                                      = 4,
	E_GameModes__NewEnumerator5                                                      = 5,
	E_GameModes__NewEnumerator6                                                      = 6
};

/// Enum /Game/Blueprints/CosmeticItems/E_SteamItemRarities.E_SteamItemRarities
/// Size: 0x01 (1 bytes)
enum class E_SteamItemRarities : uint8_t
{
	E_SteamItemRarities__NewEnumerator3                                              = 0,
	E_SteamItemRarities__NewEnumerator0                                              = 1,
	E_SteamItemRarities__NewEnumerator1                                              = 2,
	E_SteamItemRarities__NewEnumerator2                                              = 3
};

/// Enum /Game/Blueprints/Projectiles/E_DamageTypes.E_DamageTypes
/// Size: 0x01 (1 bytes)
enum class E_DamageTypes : uint8_t
{
	E_DamageTypes__NewEnumerator1                                                    = 0,
	E_DamageTypes__NewEnumerator2                                                    = 1,
	E_DamageTypes__NewEnumerator0                                                    = 2,
	E_DamageTypes__NewEnumerator3                                                    = 3,
	E_DamageTypes__NewEnumerator4                                                    = 4,
	E_DamageTypes__NewEnumerator5                                                    = 5,
	E_DamageTypes__NewEnumerator6                                                    = 6,
	E_DamageTypes__NewEnumerator7                                                    = 7,
	E_DamageTypes__NewEnumerator8                                                    = 8,
	E_DamageTypes__NewEnumerator9                                                    = 9,
	E_DamageTypes__NewEnumerator10                                                   = 10,
	E_DamageTypes__NewEnumerator11                                                   = 11
};

/// Enum /Game/Blueprints/CosmeticItems/E_UnlockableCategories.E_UnlockableCategories
/// Size: 0x01 (1 bytes)
enum class E_UnlockableCategories : uint8_t
{
	E_UnlockableCategories__NewEnumerator0                                           = 0,
	E_UnlockableCategories__NewEnumerator1                                           = 1,
	E_UnlockableCategories__NewEnumerator2                                           = 2,
	E_UnlockableCategories__NewEnumerator3                                           = 3,
	E_UnlockableCategories__NewEnumerator4                                           = 4,
	E_UnlockableCategories__NewEnumerator5                                           = 5,
	E_UnlockableCategories__NewEnumerator6                                           = 6,
	E_UnlockableCategories__NewEnumerator7                                           = 7,
	E_UnlockableCategories__NewEnumerator8                                           = 8,
	E_UnlockableCategories__NewEnumerator9                                           = 9,
	E_UnlockableCategories__NewEnumerator10                                          = 10,
	E_UnlockableCategories__NewEnumerator11                                          = 11,
	E_UnlockableCategories__NewEnumerator12                                          = 12,
	E_UnlockableCategories__NewEnumerator13                                          = 13,
	E_UnlockableCategories__NewEnumerator14                                          = 14,
	E_UnlockableCategories__NewEnumerator15                                          = 15,
	E_UnlockableCategories__NewEnumerator16                                          = 16,
	E_UnlockableCategories__NewEnumerator17                                          = 17,
	E_UnlockableCategories__NewEnumerator18                                          = 18,
	E_UnlockableCategories__NewEnumerator19                                          = 19,
	E_UnlockableCategories__NewEnumerator20                                          = 20,
	E_UnlockableCategories__NewEnumerator21                                          = 21,
	E_UnlockableCategories__NewEnumerator22                                          = 22,
	E_UnlockableCategories__NewEnumerator23                                          = 23,
	E_UnlockableCategories__NewEnumerator24                                          = 24
};

/// Enum /Game/Blueprints/CosmeticItems/E_SpecialPrivileges.E_SpecialPrivileges
/// Size: 0x01 (1 bytes)
enum class E_SpecialPrivileges : uint8_t
{
	E_SpecialPrivileges__NewEnumerator1                                              = 0,
	E_SpecialPrivileges__NewEnumerator0                                              = 1
};

/// Enum /Game/Blueprints/E_Teams.E_Teams
/// Size: 0x01 (1 bytes)
enum class E_Teams : uint8_t
{
	E_Teams__NewEnumerator2                                                          = 0,
	E_Teams__NewEnumerator0                                                          = 1,
	E_Teams__NewEnumerator1                                                          = 2
};

/// Enum /Game/Blueprints/LightingScenarios/E_Scenarios.E_Scenarios
/// Size: 0x01 (1 bytes)
enum class E_Scenarios : uint8_t
{
	E_Scenarios__NewEnumerator0                                                      = 0,
	E_Scenarios__NewEnumerator1                                                      = 1,
	E_Scenarios__NewEnumerator2                                                      = 2,
	E_Scenarios__NewEnumerator3                                                      = 3
};

/// Enum /Game/Blueprints/E_Units.E_Units
/// Size: 0x01 (1 bytes)
enum class E_Units : uint8_t
{
	E_Units__NewEnumerator0                                                          = 0,
	E_Units__NewEnumerator1                                                          = 1,
	E_Units__NewEnumerator2                                                          = 2,
	E_Units__NewEnumerator3                                                          = 3,
	E_Units__NewEnumerator4                                                          = 4,
	E_Units__NewEnumerator5                                                          = 5
};

/// Enum /Game/Blueprints/CosmeticItems/E_EventCategories.E_EventCategories
/// Size: 0x01 (1 bytes)
enum class E_EventCategories : uint8_t
{
	E_EventCategories__NewEnumerator4                                                = 0,
	E_EventCategories__NewEnumerator0                                                = 1,
	E_EventCategories__NewEnumerator1                                                = 2
};

/// Enum /Game/Character/E_MotorbikePoses.E_MotorbikePoses
/// Size: 0x01 (1 bytes)
enum class E_MotorbikePoses : uint8_t
{
	E_MotorbikePoses__NewEnumerator0                                                 = 0,
	E_MotorbikePoses__NewEnumerator1                                                 = 1,
	E_MotorbikePoses__NewEnumerator2                                                 = 2,
	E_MotorbikePoses__NewEnumerator3                                                 = 3,
	E_MotorbikePoses__NewEnumerator4                                                 = 4,
	E_MotorbikePoses__NewEnumerator5                                                 = 5,
	E_MotorbikePoses__NewEnumerator6                                                 = 6,
	E_MotorbikePoses__NewEnumerator7                                                 = 7
};

/// Enum /Game/Character/E_MeleeModes.E_MeleeModes
/// Size: 0x01 (1 bytes)
enum class E_MeleeModes : uint8_t
{
	E_MeleeModes__NewEnumerator0                                                     = 0,
	E_MeleeModes__NewEnumerator1                                                     = 1,
	E_MeleeModes__NewEnumerator2                                                     = 2
};

/// Enum /Game/Character/E_WeaponPoses.E_WeaponPoses
/// Size: 0x01 (1 bytes)
enum class E_WeaponPoses : uint8_t
{
	E_WeaponPoses__NewEnumerator0                                                    = 0,
	E_WeaponPoses__NewEnumerator1                                                    = 1,
	E_WeaponPoses__NewEnumerator2                                                    = 2,
	E_WeaponPoses__NewEnumerator3                                                    = 3,
	E_WeaponPoses__NewEnumerator4                                                    = 4,
	E_WeaponPoses__NewEnumerator5                                                    = 5,
	E_WeaponPoses__NewEnumerator6                                                    = 6,
	E_WeaponPoses__NewEnumerator7                                                    = 7,
	E_WeaponPoses__NewEnumerator8                                                    = 8,
	E_WeaponPoses__NewEnumerator9                                                    = 9,
	E_WeaponPoses__NewEnumerator10                                                   = 10,
	E_WeaponPoses__NewEnumerator11                                                   = 11,
	E_WeaponPoses__NewEnumerator12                                                   = 12,
	E_WeaponPoses__NewEnumerator13                                                   = 13,
	E_WeaponPoses__NewEnumerator15                                                   = 14,
	E_WeaponPoses__NewEnumerator16                                                   = 15,
	E_WeaponPoses__NewEnumerator17                                                   = 16,
	E_WeaponPoses__NewEnumerator18                                                   = 17,
	E_WeaponPoses__NewEnumerator19                                                   = 18,
	E_WeaponPoses__NewEnumerator20                                                   = 19,
	E_WeaponPoses__NewEnumerator21                                                   = 20,
	E_WeaponPoses__NewEnumerator22                                                   = 21,
	E_WeaponPoses__NewEnumerator23                                                   = 22
};

/// Enum /Game/Widgets/E_Menus.E_Menus
/// Size: 0x01 (1 bytes)
enum class E_Menus : uint8_t
{
	E_Menus__NewEnumerator0                                                          = 0,
	E_Menus__NewEnumerator1                                                          = 1
};

/// Enum /Game/Widgets/E_ActionbarSlotStyles.E_ActionbarSlotStyles
/// Size: 0x01 (1 bytes)
enum class E_ActionbarSlotStyles : uint8_t
{
	E_ActionbarSlotStyles__NewEnumerator0                                            = 0,
	E_ActionbarSlotStyles__NewEnumerator1                                            = 1,
	E_ActionbarSlotStyles__NewEnumerator2                                            = 2,
	E_ActionbarSlotStyles__NewEnumerator3                                            = 3,
	E_ActionbarSlotStyles__NewEnumerator4                                            = 4,
	E_ActionbarSlotStyles__NewEnumerator5                                            = 5
};

/// Enum /Game/Widgets/E_WeaponCrosshairStyles.E_WeaponCrosshairStyles
/// Size: 0x01 (1 bytes)
enum class E_WeaponCrosshairStyles : uint8_t
{
	E_WeaponCrosshairStyles__NewEnumerator0                                          = 0,
	E_WeaponCrosshairStyles__NewEnumerator1                                          = 1,
	E_WeaponCrosshairStyles__NewEnumerator2                                          = 2,
	E_WeaponCrosshairStyles__NewEnumerator3                                          = 3,
	E_WeaponCrosshairStyles__NewEnumerator4                                          = 4,
	E_WeaponCrosshairStyles__NewEnumerator5                                          = 5,
	E_WeaponCrosshairStyles__NewEnumerator6                                          = 6,
	E_WeaponCrosshairStyles__NewEnumerator7                                          = 7,
	E_WeaponCrosshairStyles__NewEnumerator8                                          = 8
};

/// Enum /Game/Widgets/E_Selectables.E_Selectables
/// Size: 0x01 (1 bytes)
enum class E_Selectables : uint8_t
{
	E_Selectables__NewEnumerator0                                                    = 0,
	E_Selectables__NewEnumerator1                                                    = 1,
	E_Selectables__NewEnumerator2                                                    = 2,
	E_Selectables__NewEnumerator3                                                    = 3,
	E_Selectables__NewEnumerator4                                                    = 4,
	E_Selectables__NewEnumerator5                                                    = 5,
	E_Selectables__NewEnumerator6                                                    = 6,
	E_Selectables__NewEnumerator7                                                    = 7,
	E_Selectables__NewEnumerator8                                                    = 8,
	E_Selectables__NewEnumerator9                                                    = 9,
	E_Selectables__NewEnumerator10                                                   = 10,
	E_Selectables__NewEnumerator11                                                   = 11,
	E_Selectables__NewEnumerator12                                                   = 12,
	E_Selectables__NewEnumerator13                                                   = 13,
	E_Selectables__NewEnumerator14                                                   = 14,
	E_Selectables__NewEnumerator15                                                   = 15,
	E_Selectables__NewEnumerator16                                                   = 16,
	E_Selectables__NewEnumerator17                                                   = 17,
	E_Selectables__NewEnumerator18                                                   = 18,
	E_Selectables__NewEnumerator19                                                   = 19,
	E_Selectables__NewEnumerator20                                                   = 20,
	E_Selectables__NewEnumerator21                                                   = 21,
	E_Selectables__NewEnumerator22                                                   = 22,
	E_Selectables__NewEnumerator23                                                   = 23,
	E_Selectables__NewEnumerator25                                                   = 24,
	E_Selectables__NewEnumerator26                                                   = 25,
	E_Selectables__NewEnumerator27                                                   = 26,
	E_Selectables__NewEnumerator28                                                   = 27,
	E_Selectables__NewEnumerator29                                                   = 28,
	E_Selectables__NewEnumerator30                                                   = 29,
	E_Selectables__NewEnumerator31                                                   = 30,
	E_Selectables__NewEnumerator32                                                   = 31,
	E_Selectables__NewEnumerator33                                                   = 32,
	E_Selectables__NewEnumerator34                                                   = 33,
	E_Selectables__NewEnumerator35                                                   = 34,
	E_Selectables__NewEnumerator36                                                   = 35
};

/// Enum /Game/Widgets/E_CrosshairTypes.E_CrosshairTypes
/// Size: 0x01 (1 bytes)
enum class E_CrosshairTypes : uint8_t
{
	E_CrosshairTypes__NewEnumerator0                                                 = 0,
	E_CrosshairTypes__NewEnumerator2                                                 = 1,
	E_CrosshairTypes__NewEnumerator3                                                 = 2
};

/// Enum /Game/Widgets/E_ScopeType.E_ScopeType
/// Size: 0x01 (1 bytes)
enum class E_ScopeType : uint8_t
{
	E_ScopeType__NewEnumerator0                                                      = 0,
	E_ScopeType__NewEnumerator1                                                      = 1
};

/// Enum /Game/Widgets/E_CurrencyTypes.E_CurrencyTypes
/// Size: 0x01 (1 bytes)
enum class E_CurrencyTypes : uint8_t
{
	E_CurrencyTypes__NewEnumerator0                                                  = 0,
	E_CurrencyTypes__NewEnumerator2                                                  = 1,
	E_CurrencyTypes__NewEnumerator1                                                  = 2,
	E_CurrencyTypes__NewEnumerator3                                                  = 3,
	E_CurrencyTypes__NewEnumerator4                                                  = 4,
	E_CurrencyTypes__NewEnumerator5                                                  = 5,
	E_CurrencyTypes__NewEnumerator6                                                  = 6,
	E_CurrencyTypes__NewEnumerator7                                                  = 7,
	E_CurrencyTypes__NewEnumerator8                                                  = 8
};

/// Enum /Game/Widgets/E_PrestigeRanks.E_PrestigeRanks
/// Size: 0x01 (1 bytes)
enum class E_PrestigeRanks : uint8_t
{
	E_PrestigeRanks__NewEnumerator0                                                  = 0,
	E_PrestigeRanks__NewEnumerator1                                                  = 1,
	E_PrestigeRanks__NewEnumerator2                                                  = 2,
	E_PrestigeRanks__NewEnumerator3                                                  = 3,
	E_PrestigeRanks__NewEnumerator4                                                  = 4,
	E_PrestigeRanks__NewEnumerator5                                                  = 5,
	E_PrestigeRanks__NewEnumerator7                                                  = 6
};

/// Class /Game/Blueprints/AI/Task_MoveToObjective.Task_MoveToObjective_C
/// Size: 0x00C9 (201 bytes) (0x0000A8 - 0x0000C9) align 8 MaxSize: 0x00C9
class UTask_MoveToObjective_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A8   (0x0008)  
	float                                              DefendRoamingTimer;                                         // 0x00B0   (0x0004)  
	float                                              TimeToStayInDefendLocation;                                 // 0x00B4   (0x0004)  
	float                                              LastTimeInSeconds;                                          // 0x00B8   (0x0004)  
	FVector                                            ObjectiveLocation;                                          // 0x00BC   (0x000C)  
	bool                                               StayOnLocation;                                             // 0x00C8   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/AI/Task_MoveToObjective.Task_MoveToObjective_C.OnFail_CE9416B347F4F6D7ED0A25B053161052
	// void OnFail_CE9416B347F4F6D7ED0A25B053161052(TEnumAsByte<EPathFollowingResult> MovementResult);                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_MoveToObjective.Task_MoveToObjective_C.OnSuccess_CE9416B347F4F6D7ED0A25B053161052
	// void OnSuccess_CE9416B347F4F6D7ED0A25B053161052(TEnumAsByte<EPathFollowingResult> MovementResult);                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_MoveToObjective.Task_MoveToObjective_C.OnFail_D0C780294E32A35C6CC435B2A0EB9EB6
	// void OnFail_D0C780294E32A35C6CC435B2A0EB9EB6(TEnumAsByte<EPathFollowingResult> MovementResult);                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_MoveToObjective.Task_MoveToObjective_C.OnSuccess_D0C780294E32A35C6CC435B2A0EB9EB6
	// void OnSuccess_D0C780294E32A35C6CC435B2A0EB9EB6(TEnumAsByte<EPathFollowingResult> MovementResult);                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_MoveToObjective.Task_MoveToObjective_C.ReceiveExecuteAI
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_MoveToObjective.Task_MoveToObjective_C.ExecuteUbergraph_Task_MoveToObjective
	// void ExecuteUbergraph_Task_MoveToObjective(int32_t EntryPoint);                                                          // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/AI/Task_StopMovement.Task_StopMovement_C
/// Size: 0x00B0 (176 bytes) (0x0000A8 - 0x0000B0) align 8 MaxSize: 0x00B0
class UTask_StopMovement_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A8   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/AI/Task_StopMovement.Task_StopMovement_C.ReceiveExecuteAI
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_StopMovement.Task_StopMovement_C.ExecuteUbergraph_Task_StopMovement
	// void ExecuteUbergraph_Task_StopMovement(int32_t EntryPoint);                                                             // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/AI/Task_MoveToSniperSpot.Task_MoveToSniperSpot_C
/// Size: 0x00CD (205 bytes) (0x0000A8 - 0x0000CD) align 8 MaxSize: 0x00CD
class UTask_MoveToSniperSpot_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A8   (0x0008)  
	bool                                               CanMoveToAnotherSpot;                                       // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00B1   (0x0003)  MISSED
	float                                              LastTimeInSeconds;                                          // 0x00B4   (0x0004)  
	float                                              LocationAssignTime;                                         // 0x00B8   (0x0004)  
	float                                              TimeToStayAtLocation;                                       // 0x00BC   (0x0004)  
	FVector                                            SniperSpotLocation;                                         // 0x00C0   (0x000C)  
	bool                                               ArrivedAtLocation;                                          // 0x00CC   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/AI/Task_MoveToSniperSpot.Task_MoveToSniperSpot_C.OnFail_CBF0969A4CAED591B22A849AB75B60C2
	// void OnFail_CBF0969A4CAED591B22A849AB75B60C2(TEnumAsByte<EPathFollowingResult> MovementResult);                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_MoveToSniperSpot.Task_MoveToSniperSpot_C.OnSuccess_CBF0969A4CAED591B22A849AB75B60C2
	// void OnSuccess_CBF0969A4CAED591B22A849AB75B60C2(TEnumAsByte<EPathFollowingResult> MovementResult);                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_MoveToSniperSpot.Task_MoveToSniperSpot_C.ReceiveExecuteAI
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_MoveToSniperSpot.Task_MoveToSniperSpot_C.ExecuteUbergraph_Task_MoveToSniperSpot
	// void ExecuteUbergraph_Task_MoveToSniperSpot(int32_t EntryPoint);                                                         // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/AI/Task_MoveToEnemy.Task_MoveToEnemy_C
/// Size: 0x00B0 (176 bytes) (0x0000A8 - 0x0000B0) align 8 MaxSize: 0x00B0
class UTask_MoveToEnemy_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A8   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/AI/Task_MoveToEnemy.Task_MoveToEnemy_C.OnFail_C93C33B54082C1FC2D0E29B13EEC1B53
	// void OnFail_C93C33B54082C1FC2D0E29B13EEC1B53(TEnumAsByte<EPathFollowingResult> MovementResult);                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_MoveToEnemy.Task_MoveToEnemy_C.OnSuccess_C93C33B54082C1FC2D0E29B13EEC1B53
	// void OnSuccess_C93C33B54082C1FC2D0E29B13EEC1B53(TEnumAsByte<EPathFollowingResult> MovementResult);                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_MoveToEnemy.Task_MoveToEnemy_C.ReceiveExecuteAI
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_MoveToEnemy.Task_MoveToEnemy_C.ExecuteUbergraph_Task_MoveToEnemy
	// void ExecuteUbergraph_Task_MoveToEnemy(int32_t EntryPoint);                                                              // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/AI/Task_FindSniperSPot.Task_FindSniperSpot_C
/// Size: 0x00CD (205 bytes) (0x0000A8 - 0x0000CD) align 8 MaxSize: 0x00CD
class UTask_FindSniperSpot_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A8   (0x0008)  
	bool                                               CanMoveToAnotherSpot;                                       // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00B1   (0x0003)  MISSED
	float                                              LastTimeInSeconds;                                          // 0x00B4   (0x0004)  
	float                                              LocationAssignTime;                                         // 0x00B8   (0x0004)  
	float                                              TimeToStayAtLocation;                                       // 0x00BC   (0x0004)  
	FVector                                            SniperSpotLocation;                                         // 0x00C0   (0x000C)  
	bool                                               ArrivedAtLocation;                                          // 0x00CC   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/AI/Task_FindSniperSPot.Task_FindSniperSpot_C.ReceiveExecuteAI
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_FindSniperSPot.Task_FindSniperSpot_C.CustomEvent
	// void CustomEvent(class AAIController* OwnerController, class APawn* ControlledPawn);                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_FindSniperSPot.Task_FindSniperSpot_C.ExecuteUbergraph_Task_FindSniperSpot
	// void ExecuteUbergraph_Task_FindSniperSpot(int32_t EntryPoint);                                                           // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Characters/DamageDealerData.DamageDealerData_C
/// Size: 0x00D0 (208 bytes) (0x0000B0 - 0x0000D0) align 8 MaxSize: 0x00D0
class UDamageDealerData_C : public UActorComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B0   (0x0008)  
	int32_t                                            PlayerIndex;                                                // 0x00B8   (0x0004)  
	int32_t                                            TotalDamageAmount;                                          // 0x00BC   (0x0004)  
	class ABP_PlayerState_C*                           PlayerState;                                                // 0x00C0   (0x0008)  
	class APawn*                                       Pawn;                                                       // 0x00C8   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Characters/DamageDealerData.DamageDealerData_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Characters/DamageDealerData.DamageDealerData_C.AddDamage
	// void AddDamage(int32_t Damage);                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/DamageDealerData.DamageDealerData_C.ExecuteUbergraph_DamageDealerData
	// void ExecuteUbergraph_DamageDealerData(int32_t EntryPoint);                                                              // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/AI/Task_VehicleMoveToObjective.Task_VehicleMoveToObjective_C
/// Size: 0x00B0 (176 bytes) (0x0000A8 - 0x0000B0) align 8 MaxSize: 0x00B0
class UTask_VehicleMoveToObjective_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A8   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/AI/Task_VehicleMoveToObjective.Task_VehicleMoveToObjective_C.ReceiveExecuteAI
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_VehicleMoveToObjective.Task_VehicleMoveToObjective_C.ExecuteUbergraph_Task_VehicleMoveToObjective
	// void ExecuteUbergraph_Task_VehicleMoveToObjective(int32_t EntryPoint);                                                   // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/AI/Task_VehicleMoveToEnemy.Task_VehicleMoveToEnemy_C
/// Size: 0x00B0 (176 bytes) (0x0000A8 - 0x0000B0) align 8 MaxSize: 0x00B0
class UTask_VehicleMoveToEnemy_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A8   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/AI/Task_VehicleMoveToEnemy.Task_VehicleMoveToEnemy_C.ReceiveExecuteAI
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_VehicleMoveToEnemy.Task_VehicleMoveToEnemy_C.ExecuteUbergraph_Task_VehicleMoveToEnemy
	// void ExecuteUbergraph_Task_VehicleMoveToEnemy(int32_t EntryPoint);                                                       // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/AI/Task_RoamAround.Task_RoamAround_C
/// Size: 0x00B1 (177 bytes) (0x0000A8 - 0x0000B1) align 8 MaxSize: 0x00B1
class UTask_RoamAround_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A8   (0x0008)  
	bool                                               CanMove;                                                    // 0x00B0   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/AI/Task_RoamAround.Task_RoamAround_C.OnFail_A1A96A7D4C4CE93ADEA4A5A8877ABF9C
	// void OnFail_A1A96A7D4C4CE93ADEA4A5A8877ABF9C(TEnumAsByte<EPathFollowingResult> MovementResult);                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_RoamAround.Task_RoamAround_C.OnSuccess_A1A96A7D4C4CE93ADEA4A5A8877ABF9C
	// void OnSuccess_A1A96A7D4C4CE93ADEA4A5A8877ABF9C(TEnumAsByte<EPathFollowingResult> MovementResult);                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_RoamAround.Task_RoamAround_C.OnFail_F0FCE4A041523E800C1D33BF41836500
	// void OnFail_F0FCE4A041523E800C1D33BF41836500(TEnumAsByte<EPathFollowingResult> MovementResult);                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_RoamAround.Task_RoamAround_C.OnSuccess_F0FCE4A041523E800C1D33BF41836500
	// void OnSuccess_F0FCE4A041523E800C1D33BF41836500(TEnumAsByte<EPathFollowingResult> MovementResult);                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_RoamAround.Task_RoamAround_C.ReceiveExecuteAI
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_RoamAround.Task_RoamAround_C.ExecuteUbergraph_Task_RoamAround
	// void ExecuteUbergraph_Task_RoamAround(int32_t EntryPoint);                                                               // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/AI/Task_IsEnemyStillInLos.Task_IsEnemyStillInLos_C
/// Size: 0x00B8 (184 bytes) (0x0000A8 - 0x0000B8) align 8 MaxSize: 0x00B8
class UTask_IsEnemyStillInLos_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A8   (0x0008)  
	float                                              TimeEnemyIsOutOfSight;                                      // 0x00B0   (0x0004)  
	float                                              LastTimeInSeconds;                                          // 0x00B4   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/AI/Task_IsEnemyStillInLos.Task_IsEnemyStillInLos_C.ReceiveExecuteAI
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_IsEnemyStillInLos.Task_IsEnemyStillInLos_C.ExecuteUbergraph_Task_IsEnemyStillInLos
	// void ExecuteUbergraph_Task_IsEnemyStillInLos(int32_t EntryPoint);                                                        // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/AI/Task_FindObjective.Task_FindObjective_C
/// Size: 0x00C0 (192 bytes) (0x0000A8 - 0x0000C0) align 8 MaxSize: 0x00C0
class UTask_FindObjective_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A8   (0x0008)  
	bool                                               CanChangeDefendState;                                       // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00B1   (0x0003)  MISSED
	float                                              DefendStateTimer;                                           // 0x00B4   (0x0004)  
	float                                              TimeToDefend;                                               // 0x00B8   (0x0004)  
	float                                              LastTimeInSeconds;                                          // 0x00BC   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/AI/Task_FindObjective.Task_FindObjective_C.IsObjectiveStillRelevant?
	// void IsObjectiveStillRelevant_(class APawn* Pawn, bool& StillRelevant);                                                  // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_FindObjective.Task_FindObjective_C.DoWeHaveAnObjective?
	// void DoWeHaveAnObjective_(class AActor* Pawn, bool& ValidObjective);                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/AI/Task_FindObjective.Task_FindObjective_C.GetTeamSupremacy
	// void GetTeamSupremacy(TEnumAsByte<E_Teams> Team, bool& Supremacy);                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/AI/Task_FindObjective.Task_FindObjective_C.GetDefendChance
	// void GetDefendChance(class APawn* ControlledPawn, bool& Defend, TEnumAsByte<E_AITeamPlayStyles>& PlayStyle);             // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/AI/Task_FindObjective.Task_FindObjective_C.IsCurrentObjectiveWon?
	// void IsCurrentObjectiveWon_(class AActor* PawnActor, bool& ObjectiveWon);                                                // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/AI/Task_FindObjective.Task_FindObjective_C.GetRandomObjective
	// void GetRandomObjective(class APawn* ControlledPawn, class ABP_SpawnableBase_C*& Objective);                             // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_FindObjective.Task_FindObjective_C.GetClosestObjective
	// void GetClosestObjective(class AActor* ControlledPawn, class ABP_SpawnableBase_C*& ClosestObjective);                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_FindObjective.Task_FindObjective_C.ReceiveTickAI
	// void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);               // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_FindObjective.Task_FindObjective_C.ExecuteUbergraph_Task_FindObjective
	// void ExecuteUbergraph_Task_FindObjective(int32_t EntryPoint);                                                            // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/AI/Task_CheckIfEnemyStillRelevant.Task_CheckIfEnemyStillRelevant_C
/// Size: 0x00B0 (176 bytes) (0x0000A8 - 0x0000B0) align 8 MaxSize: 0x00B0
class UTask_CheckIfEnemyStillRelevant_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A8   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/AI/Task_CheckIfEnemyStillRelevant.Task_CheckIfEnemyStillRelevant_C.ReceiveTickAI
	// void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);               // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/Task_CheckIfEnemyStillRelevant.Task_CheckIfEnemyStillRelevant_C.ExecuteUbergraph_Task_CheckIfEnemyStillRelevant
	// void ExecuteUbergraph_Task_CheckIfEnemyStillRelevant(int32_t EntryPoint);                                                // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/AI/NavFilter_Tank.NavFilter_Tank_C
/// Size: 0x0048 (72 bytes) (0x000048 - 0x000048) align 8 MaxSize: 0x0048
class UNavFilter_Tank_C : public UNavFilter_AIControllerDefault
{ 
public:
};

/// Class /Game/Blueprints/Vehicles/BP_VehicleRepairZone.BP_VehicleRepairZone_C
/// Size: 0x0231 (561 bytes) (0x000220 - 0x000231) align 8 MaxSize: 0x0231
class ABP_VehicleRepairZone_C : public AActor
{ 
public:
	class UBoxComponent*                               Box;                                                        // 0x0220   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0228   (0x0008)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x0230   (0x0001)  
};

/// Class /Game/Blueprints/Characters/BP_Username.BP_Username_C
/// Size: 0x0260 (608 bytes) (0x000220 - 0x000260) align 8 MaxSize: 0x0260
class ABP_Username_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UWidgetComponent*                            UsernameWidget;                                             // 0x0228   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0230   (0x0008)  
	bool                                               CanBeSeen;                                                  // 0x0238   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0239   (0x0007)  MISSED
	class APawn*                                       PawnRef;                                                    // 0x0240   (0x0008)  
	class UPawnDataComponent_C*                        PawnDataComponent;                                          // 0x0248   (0x0008)  
	TArray<class APawn*>                               PawnsToIgnore;                                              // 0x0250   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/Characters/BP_Username.BP_Username_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Username.BP_Username_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Username.BP_Username_C.ExecuteUbergraph_BP_Username
	// void ExecuteUbergraph_BP_Username(int32_t EntryPoint);                                                                   // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/BP_WaterPlane.BP_WaterPlane_C
/// Size: 0x0240 (576 bytes) (0x000220 - 0x000240) align 8 MaxSize: 0x0240
class ABP_WaterPlane_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UStaticMeshComponent*                        WaterPlane;                                                 // 0x0228   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0230   (0x0008)  
	class UMaterialInstance*                           WaterTexture;                                               // 0x0238   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/BP_WaterPlane.BP_WaterPlane_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_WaterPlane.BP_WaterPlane_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/BP_WaterPlane.BP_WaterPlane_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/BP_WaterPlane.BP_WaterPlane_C.SetWaterMaterial
	// void SetWaterMaterial();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_WaterPlane.BP_WaterPlane_C.ExecuteUbergraph_BP_WaterPlane
	// void ExecuteUbergraph_BP_WaterPlane(int32_t EntryPoint);                                                                 // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Functions/AIFunctions.AIFunctions_C
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UAIFunctions_C : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Game/Blueprints/Functions/AIFunctions.AIFunctions_C.LockToEnemy
	// void LockToEnemy(class APawn* EnemyPawn, class APawn* OwnPawn, bool PrioritizeArmoredVehicles, bool ForceLock, class UObject* __WorldContext); // [0x1325ea0] Static|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/AIFunctions.AIFunctions_C.EngageEnemy
	// void EngageEnemy(class UObject* EnemyObject, class APawn* OwnPawn, bool PrioritizeVehicles, bool CanAttackArmoredVehicles, bool CanAttackPlanes, bool PrioritizeThistarget_ForceLock_, class UObject* __WorldContext, bool& Engaging); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/Characters/BP_SpectatorCam.BP_SpectatorCam_C
/// Size: 0x02A0 (672 bytes) (0x000280 - 0x0002A0) align 8 MaxSize: 0x02A0
class ABP_SpectatorCam_C : public APawn
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0280   (0x0008)  
	class UCameraComponent*                            Camera;                                                     // 0x0288   (0x0008)  
	class USpringArmComponent*                         SpringArm;                                                  // 0x0290   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0298   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Characters/BP_SpectatorCam.BP_SpectatorCam_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_SpectatorCam.BP_SpectatorCam_C.InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_SpectatorCam.BP_SpectatorCam_C.InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_SpectatorCam.BP_SpectatorCam_C.ExecuteUbergraph_BP_SpectatorCam
	// void ExecuteUbergraph_BP_SpectatorCam(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Struct /Game/Blueprints/CosmeticItems/ST_CharacterCustomization.ST_CharacterCustomization
/// Size: 0x004C (76 bytes) (0x000000 - 0x00004C) align 4 MaxSize: 0x004C
struct FST_CharacterCustomization
{ 
	int32_t                                            FacialHair_4_1D86C80448E0F97004E123B5C0913B28;              // 0x0000   (0x0004)  
	int32_t                                            HairColor_7_6EF03A46455473896828BB9E5F517582;               // 0x0004   (0x0004)  
	float                                              SkinTone_11_4AE8A93942C69DB4C74AC9A56C014267;               // 0x0008   (0x0004)  
	int32_t                                            Hat_17_90C67EDB4DF9ED1BCAFE52B82DA970BC;                    // 0x000C   (0x0004)  
	int32_t                                            UpperFaceItem_18_922C8DBE42D17CDA30BCCDA50CC01601;          // 0x0010   (0x0004)  
	int32_t                                            LowerFaceItem_20_6B068D3D4E2C3F65103028A959DC0B42;          // 0x0014   (0x0004)  
	int32_t                                            Legs_33_E4592CB647BE5A9AA859CF9C62EB58F9;                   // 0x0018   (0x0004)  
	int32_t                                            HairStyle_25_010B88E14233BA2210CA0190F020221F;              // 0x001C   (0x0004)  
	int32_t                                            Shirt_28_3022BF614735B4DF0E3F6E9CD51B7C66;                  // 0x0020   (0x0004)  
	int32_t                                            Underwear_30_683D84E44BB9362A6C8F56BB69132332;              // 0x0024   (0x0004)  
	int32_t                                            Torso_32_D5F6FA3548FEA662CDF2919341A800B1;                  // 0x0028   (0x0004)  
	int32_t                                            Hands_35_6DF487E24D357797494342B1DFECBD85;                  // 0x002C   (0x0004)  
	int32_t                                            Feet_37_31B1A2F0421CC3E54F0F36A401C716F4;                   // 0x0030   (0x0004)  
	int32_t                                            Tattoo_39_150ABB9D4FBFBBDEEC1127BEBF9383FF;                 // 0x0034   (0x0004)  
	int32_t                                            Back_41_8C736279451D47CB398D7F856427A6F3;                   // 0x0038   (0x0004)  
	int32_t                                            Waist_44_92BABF33482CE8F2A7CF6F8685BBD90E;                  // 0x003C   (0x0004)  
	TEnumAsByte<E_Teams>                               Team_47_38C05D7E4006D451A4CA64A7A8DA0C8D;                   // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0041   (0x0003)  MISSED
	int32_t                                            EyeColor_50_6237D4AA4BA6A3712B9486AACF86D21F;               // 0x0044   (0x0004)  
	int32_t                                            Title_53_60610D5F45C0C130EB600998AEE09F71;                  // 0x0048   (0x0004)  
};

/// Class /Game/Blueprints/Characters/BP_MugShotDummy.BP_MugShotDummy_C
/// Size: 0x0309 (777 bytes) (0x000220 - 0x000309) align 8 MaxSize: 0x0309
class ABP_MugShotDummy_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class USkeletalMeshComponent*                      Back;                                                       // 0x0228   (0x0008)  
	class USkeletalMeshComponent*                      CharacterMesh_Back;                                         // 0x0230   (0x0008)  
	class USceneCaptureComponent2D*                    SceneCapture_Back;                                          // 0x0238   (0x0008)  
	class USkeletalMeshComponent*                      HatSkeletal;                                                // 0x0240   (0x0008)  
	class USkeletalMeshComponent*                      LowerFaceSkeletal;                                          // 0x0248   (0x0008)  
	class USpotLightComponent*                         SpotLight1;                                                 // 0x0250   (0x0008)  
	class USpotLightComponent*                         SpotLight;                                                  // 0x0258   (0x0008)  
	class USceneCaptureComponent2D*                    SceneCapture_Front;                                         // 0x0260   (0x0008)  
	class USkeletalMeshComponent*                      Torso;                                                      // 0x0268   (0x0008)  
	class USkeletalMeshComponent*                      FacialHair;                                                 // 0x0270   (0x0008)  
	class UStaticMeshComponent*                        LowerFace;                                                  // 0x0278   (0x0008)  
	class UStaticMeshComponent*                        UpperFace;                                                  // 0x0280   (0x0008)  
	class UStaticMeshComponent*                        Hat;                                                        // 0x0288   (0x0008)  
	class USkeletalMeshComponent*                      CharacterMesh_Front;                                        // 0x0290   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0298   (0x0008)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x02A0   (0x0001)  
	TEnumAsByte<E_Units>                               Class;                                                      // 0x02A1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02A2   (0x0002)  MISSED
	FST_CharacterCustomization                         CharCustomization;                                          // 0x02A4   (0x004C)  
	class UStaticMesh*                                 ShowCaseHatItem;                                            // 0x02F0   (0x0008)  
	class USkeletalMesh*                               ShowCaseTorsoItem;                                          // 0x02F8   (0x0008)  
	class USkeletalMesh*                               ShowCaseBackItem;                                           // 0x0300   (0x0008)  
	bool                                               EnableCustomization;                                        // 0x0308   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Characters/BP_MugShotDummy.BP_MugShotDummy_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_MugShotDummy.BP_MugShotDummy_C.SetCustomization
	// void SetCustomization(FST_CharacterCustomization& Customization);                                                        // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_MugShotDummy.BP_MugShotDummy_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_MugShotDummy.BP_MugShotDummy_C.Init
	// void Init();                                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_MugShotDummy.BP_MugShotDummy_C.ExecuteUbergraph_BP_MugShotDummy
	// void ExecuteUbergraph_BP_MugShotDummy(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Struct /Game/Blueprints/Structs/ST_DamageInformation.ST_DamageInformation
/// Size: 0x0012 (18 bytes) (0x000000 - 0x000012) align 8 MaxSize: 0x0012
struct FST_DamageInformation
{ 
	TEnumAsByte<E_DamageTypes>                         DamageType_14_24A5476544D892D78E480591D5422978;             // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            DamageAmount_6_91E4428043CDFA47C65F29937A1C6484;            // 0x0004   (0x0004)  
	class AActor*                                      HitActor_9_66F4D8A7496E278CC30CFCB3F0251F9F;                // 0x0008   (0x0008)  
	bool                                               IsCriticalHit_7_3366509743A2E7E17BFCB59F64CC6784;           // 0x0010   (0x0001)  
	bool                                               IsLowHP_10_779ADF5C41BCF67BFB105485BDA2E805;                // 0x0011   (0x0001)  
};

/// Class /Game/Blueprints/Characters/BP_DamageNumberNew.BP_DamageNumberNew_C
/// Size: 0x0258 (600 bytes) (0x000220 - 0x000258) align 8 MaxSize: 0x0258
class ABP_DamageNumberNew_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UWidgetComponent*                            Widget;                                                     // 0x0228   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0230   (0x0008)  
	FST_DamageInformation                              DamageInfo;                                                 // 0x0238   (0x0012)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x024A   (0x0006)  MISSED
	class UClass*                                      EquipableClass;                                             // 0x0250   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Characters/BP_DamageNumberNew.BP_DamageNumberNew_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_DamageNumberNew.BP_DamageNumberNew_C.IncreaseDamageNumber
	// void IncreaseDamageNumber(int32_t IncreaseAmount);                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_DamageNumberNew.BP_DamageNumberNew_C.ExecuteUbergraph_BP_DamageNumberNew
	// void ExecuteUbergraph_BP_DamageNumberNew(int32_t EntryPoint);                                                            // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/BP_WorldDamageNumber.BP_WorldDamageNumber_C
/// Size: 0x0253 (595 bytes) (0x000220 - 0x000253) align 8 MaxSize: 0x0253
class ABP_WorldDamageNumber_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UWidgetComponent*                            Widget;                                                     // 0x0228   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0230   (0x0008)  
	bool                                               CriticalHit;                                                // 0x0238   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0239   (0x0003)  MISSED
	int32_t                                            DamageAmount;                                               // 0x023C   (0x0004)  
	float                                              RandomHorizontalOffset;                                     // 0x0240   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0244   (0x0004)  MISSED
	class AActor*                                      HitActor;                                                   // 0x0248   (0x0008)  
	bool                                               IsLow;                                                      // 0x0250   (0x0001)  
	bool                                               IsWithinView;                                               // 0x0251   (0x0001)  
	TEnumAsByte<E_DamageTypes>                         DamageType;                                                 // 0x0252   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/BP_WorldDamageNumber.BP_WorldDamageNumber_C.DamageNumberEnded
	// void DamageNumberEnded();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_WorldDamageNumber.BP_WorldDamageNumber_C.AddDamage
	// void AddDamage(FST_DamageInformation DamageInfo);                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_WorldDamageNumber.BP_WorldDamageNumber_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/BP_WorldDamageNumber.BP_WorldDamageNumber_C.ExecuteUbergraph_BP_WorldDamageNumber
	// void ExecuteUbergraph_BP_WorldDamageNumber(int32_t EntryPoint);                                                          // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/BP_PlayerCameraManager.BP_PlayerCameraManager_C
/// Size: 0x2810 (10256 bytes) (0x002810 - 0x002810) align 16 MaxSize: 0x2810
class ABP_PlayerCameraManager_C : public APlayerCameraManager
{ 
public:
};

/// Class /Game/Blueprints/BP_CombatZone.BP_CombatZone_C
/// Size: 0x0231 (561 bytes) (0x000220 - 0x000231) align 8 MaxSize: 0x0231
class ABP_CombatZone_C : public AActor
{ 
public:
	class UBoxComponent*                               Box;                                                        // 0x0220   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0228   (0x0008)  
	TEnumAsByte<E_CombatZoneTypes>                     ZoneType;                                                   // 0x0230   (0x0001)  
};

/// Class /Game/Blueprints/Cameras/BP_MainMenuCam.BP_MainMenuCam_C
/// Size: 0x0290 (656 bytes) (0x000280 - 0x000290) align 8 MaxSize: 0x0290
class ABP_MainMenuCam_C : public APawn
{ 
public:
	class UCameraComponent*                            Camera;                                                     // 0x0280   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0288   (0x0008)  
};

/// Struct /Game/Blueprints/Structs/ST_Unlockable.ST_Unlockable
/// Size: 0x0188 (392 bytes) (0x000000 - 0x000188) align 8 MaxSize: 0x0188
struct FST_Unlockable
{ 
	bool                                               Enabled_180_A5BB547F461F23A380B968A57C641911;               // 0x0000   (0x0001)  
	TEnumAsByte<E_UnlockableCategories>                Category_20_ED4E862040731943218B179172C69884;               // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0002   (0x0006)  MISSED
	FText                                              Name_2_676B704547B5547E12D39A9E2D4B7A7C;                    // 0x0008   (0x0018)  
	TEnumAsByte<E_CurrencyTypes>                       CurrencyType_112_40655FA74DE5301720ABFC90C2543A40;          // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0021   (0x0003)  MISSED
	int32_t                                            RequiredAmount_113_7112AC53455EDD997907FFACCE797B2C;        // 0x0024   (0x0004)  
	FDataTableRowHandle                                TokenEvent_255_DF115470478F85916FCB30976F86CFBB;            // 0x0028   (0x0010)  
	int32_t                                            LinkedSteamPurchaseItem_270_73A0DB7742B895B6ED11419C4922D08F; // 0x0038   (0x0004)  
	int32_t                                            LinkedSteamGenerator_269_0C38B23E46469545FF9A539A744AE8D3;  // 0x003C   (0x0004)  
	FDataTableRowHandle                                RequiredPrivilegeDLC_249_F109ECFC4F56924B5583D8AE0B3A4CAA;  // 0x0040   (0x0010)  
	int32_t                                            Season_261_1C025506486A1ECA8ED68089C9F1657D;                // 0x0050   (0x0004)  
	TEnumAsByte<E_SteamItemRarities>                   Rarity_223_023B74484A386B0FFBA9FAAD1484D24F;                // 0x0054   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0055   (0x0003)  MISSED
	SDK_UNDEFINED(16,612) /* TArray<TEnumAsByte<E_Teams>> */ __um(Teams_117_648E79674D3BE3250F06329D2ACE2925);     // 0x0058   (0x0010)  
	SDK_UNDEFINED(16,613) /* TArray<TEnumAsByte<E_Units>> */ __um(ClassesLeaveemptyforallclasses_158_3AEA29284AA2E1CCE304C5AD22AE9159); // 0x0068   (0x0010)  
	class UTexture2D*                                  Icon_5_58E515F64D01356B55F390A5C4580E03;                    // 0x0078   (0x0008)  
	class UMaterialInstance*                           Material1_131_36CCBEAE4701A6C22997C6B6955E0A17;             // 0x0080   (0x0008)  
	class UMaterialInstance*                           Material2_130_0F9F8B35447A090E6E2D2D82F3A6C476;             // 0x0088   (0x0008)  
	class USkeletalMesh*                               SkeletalMesh1_184_342E4AD249D58BFE5924469B595F7677;         // 0x0090   (0x0008)  
	class USkeletalMesh*                               SkeletalMesh2_183_23A807D64CA714AD2C1F33A1AD9744AE;         // 0x0098   (0x0008)  
	class UStaticMesh*                                 StaticMesh1_132_88E33CE340E7D23EAAAD989E1043B3CD;           // 0x00A0   (0x0008)  
	class UStaticMesh*                                 StaticMesh2_133_7712B7364386ED0221C92585BD02B59F;           // 0x00A8   (0x0008)  
	bool                                               OverrideHair_311_781BA6FB4854D8956D6395B0C0F0D2DD;          // 0x00B0   (0x0001)  
	bool                                               OverrideFacialHair_146_6486C1084B0662CEDAA26A8A476F0F6C;    // 0x00B1   (0x0001)  
	bool                                               OverrideUpperFace_153_B3D818D0401A6DD3796049BA654B20D7;     // 0x00B2   (0x0001)  
	bool                                               OverrideLowerFace_151_A096E98B477707E636B2159F12288600;     // 0x00B3   (0x0001)  
	bool                                               OverrideLegs_147_C6045E1A466E65B574AD928BB18C1B7B;          // 0x00B4   (0x0001)  
	bool                                               OverrideFeet_149_99DA52AE4C9D1A27C165959B0E541664;          // 0x00B5   (0x0001)  
	bool                                               OverrideBack_207_6D900B7243362389D800359078CF5588;          // 0x00B6   (0x0001)  
	bool                                               OverrideEyebrows_288_8C47497943619327BB55869A896640D8;      // 0x00B7   (0x0001)  
	bool                                               UseHairColorHatHair_292_7C271A3C4D38F551181EB5A44D0C11E7;   // 0x00B8   (0x0001)  
	bool                                               UseThinUpperLegsCoversUpperLegsTorso_281_9B5DCA934EEED051EEE2D7AE7D072792; // 0x00B9   (0x0001)  
	bool                                               EnableStrapsTorso_233_5B7AD00A46B6E2231C712AB60B7022B5;     // 0x00BA   (0x0001)  
	bool                                               UseBodyStrapsInsteadOfTorsoTorso_283_618A38394EEC1FF49B86E3A5B2582C34; // 0x00BB   (0x0001)  
	bool                                               UseWaistItemOffsetTorso_282_7894B9B3407F34058F5555977D0ED10F; // 0x00BC   (0x0001)  
	bool                                               HideUnderLongTorsoItemLegs_280_D25B1D8345E0AFC0C75FF7886A1AF60C; // 0x00BD   (0x0001)  
	bool                                               CoversShoesLegs_238_458F472F403C6A6B2F52A88292797A7A;       // 0x00BE   (0x0001)  
	bool                                               ColorTattooWithSkinColorTattoo_308_994E71EF4E8A08433BFBD08515C249D5; // 0x00BF   (0x0001)  
	float                                              UpperLegBoneThicknessLegs_303_36EF19854882FB728C7B739C4D82DD89; // 0x00C0   (0x0004)  
	float                                              LowerLegBoneThicknessLegs_305_6F408074410FA49ED134EE8E62EF6678; // 0x00C4   (0x0004)  
	float                                              CharacterHeightOffsetFeet_304_E0F266AC42637AA98FA4B6BE689FC308; // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x00CC   (0x0004)  MISSED
	class UTexture2D*                                  Texture1_136_22F99B0F4EE096A1CD82008F1CD58AD5;              // 0x00D0   (0x0008)  
	class UTexture2D*                                  Texture2_138_8EEBDB414937EA2161EB4887DEE7C1D3;              // 0x00D8   (0x0008)  
	class UTexture2D*                                  Texture3_197_435B8FF04A7DEDC34DFCE3A933BE0A81;              // 0x00E0   (0x0008)  
	class UTexture2D*                                  Texture4_216_284F872C49772CFC70AFC59B5E35E290;              // 0x00E8   (0x0008)  
	bool                                               ColorizeIcon_244_24C92104428058C13E8F758003408B7B;          // 0x00F0   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x00F1   (0x0003)  MISSED
	FLinearColor                                       ColorOverlay1_198_F33304FC4503E80449BD1FACA52AD648;         // 0x00F4   (0x0010)  
	FLinearColor                                       ColorOverlay2_201_08447861431E271F2CFD3795B6C64811;         // 0x0104   (0x0010)  
	FLinearColor                                       ColorOverlay3_204_910AE763485340E6516EE6965735CF75;         // 0x0114   (0x0010)  
	int32_t                                            UVCoordinateOnCharacter_231_226735B448670893D9F8D48D71F29C2E; // 0x0124   (0x0004)  
	class UAnimMontage*                                AnimMontage_124_B3141DC7470AE940B93E0B91BFCAF8C3;           // 0x0128   (0x0008)  
	class UClass*                                      BlueprintRef_122_D3AEC4A74F179CA08EC909984F4A2B10;          // 0x0130   (0x0008)  
	FLinearColor                                       FlatColor_WeaponSkin_96_0166CF874F05BAB0154B2D8CE7F23E9B;   // 0x0138   (0x0010)  
	class UTexture2D*                                  Texture_WeaponSkin_76_FBBFB9E24CCB1D04A19ACC8C24859526;     // 0x0148   (0x0008)  
	FLinearColor                                       TipColor_WeaponSkin_81_564A836541C56E22033AA589B5F742CE;    // 0x0150   (0x0010)  
	float                                              SkinTileAmount_85_1CB964184E148B2419AB20AEA50E7B8D;         // 0x0160   (0x0004)  
	bool                                               Dontfliptexturesonmainlywoodenweapon_WeaponSkin_178_9372B6104002326730FF26BF158D2015; // 0x0164   (0x0001)  
	bool                                               Usetextureoverentireweapon_WeaponSkin_WeaponSkin_109_CF75BE5A4C22488310BB30B0BC1B34D6; // 0x0165   (0x0001)  
	unsigned char                                      UnknownData05_6[0x2];                                       // 0x0166   (0x0002)  MISSED
	float                                              Roughness_WeaponSkin_161_52F57CD047AE4AF6BD7E38AEEBCE1001;  // 0x0168   (0x0004)  
	float                                              Metalness_WeaponSkin_163_F28502B54A76AEF3048B37935292B749;  // 0x016C   (0x0004)  
	float                                              Specular_WeaponSkin_165_F7EACCEA4669CB01620F4FBE6DECB277;   // 0x0170   (0x0004)  
	float                                              Emmissive_WeaponSkin_168_C054CD8E465F6A95CB7C2785CBAA3F6D;  // 0x0174   (0x0004)  
	FLinearColor                                       FresnelColor_WeaponSkin_177_9F65036549E6D5919B491CA23F3ED0D2; // 0x0178   (0x0010)  
};

/// Class /Game/Blueprints/BP_CosmeticPreview.BP_CosmeticPreview_C
/// Size: 0x0400 (1024 bytes) (0x000220 - 0x000400) align 8 MaxSize: 0x0400
class ABP_CosmeticPreview_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UStaticMeshComponent*                        Plane;                                                      // 0x0228   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x0230   (0x0008)  
	class UArrowComponent*                             Arrow;                                                      // 0x0238   (0x0008)  
	class USpotLightComponent*                         SpotLight;                                                  // 0x0240   (0x0008)  
	class USceneCaptureComponent2D*                    SceneCaptureComponent2D;                                    // 0x0248   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0250   (0x0008)  
	FST_Unlockable                                     Item;                                                       // 0x0258   (0x0188)  
	class UMaterialInstanceDynamic*                    WeaponTextureMID;                                           // 0x03E0   (0x0008)  
	class UMaterialInstanceDynamic*                    WeaponFlatColorMID;                                         // 0x03E8   (0x0008)  
	int32_t                                            MeshCycleIndex;                                             // 0x03F0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x03F4   (0x0004)  MISSED
	class UStaticMesh*                                 MeshToLoad;                                                 // 0x03F8   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/BP_CosmeticPreview.BP_CosmeticPreview_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_CosmeticPreview.BP_CosmeticPreview_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/BP_CosmeticPreview.BP_CosmeticPreview_C.LoadItem
	// void LoadItem();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_CosmeticPreview.BP_CosmeticPreview_C.CycleMeshUp
	// void CycleMeshUp();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_CosmeticPreview.BP_CosmeticPreview_C.ReloadWeaponSkin
	// void ReloadWeaponSkin();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_CosmeticPreview.BP_CosmeticPreview_C.ExecuteUbergraph_BP_CosmeticPreview
	// void ExecuteUbergraph_BP_CosmeticPreview(int32_t EntryPoint);                                                            // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C
/// Size: 0x0322 (802 bytes) (0x000220 - 0x000322) align 8 MaxSize: 0x0322
class ABP_Mannequin_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class USkeletalMeshComponent*                      GlovesSkeletal;                                             // 0x0228   (0x0008)  
	class USkeletalMeshComponent*                      HatSkeletal;                                                // 0x0230   (0x0008)  
	class USkeletalMeshComponent*                      LowerFaceSkeletal;                                          // 0x0238   (0x0008)  
	class USkeletalMeshComponent*                      Waist;                                                      // 0x0240   (0x0008)  
	class USkeletalMeshComponent*                      Feet;                                                       // 0x0248   (0x0008)  
	class USkeletalMeshComponent*                      Back;                                                       // 0x0250   (0x0008)  
	class USkeletalMeshComponent*                      Torso;                                                      // 0x0258   (0x0008)  
	class USkeletalMeshComponent*                      FacialHair;                                                 // 0x0260   (0x0008)  
	class USkeletalMeshComponent*                      Legs;                                                       // 0x0268   (0x0008)  
	class UStaticMeshComponent*                        LowerFace;                                                  // 0x0270   (0x0008)  
	class UStaticMeshComponent*                        HatExtras;                                                  // 0x0278   (0x0008)  
	class UStaticMeshComponent*                        UpperFace;                                                  // 0x0280   (0x0008)  
	class UChildActorComponent*                        Weapon;                                                     // 0x0288   (0x0008)  
	class UStaticMeshComponent*                        Hat;                                                        // 0x0290   (0x0008)  
	class USkeletalMeshComponent*                      CharacterMesh;                                              // 0x0298   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02A0   (0x0008)  
	float                                              Timeline_0_NewTrack_0_B468E7C94729808A51102E94678BD34A;     // 0x02A8   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Timeline_0__Direction_B468E7C94729808A51102E94678BD34A;     // 0x02AC   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02AD   (0x0003)  MISSED
	class UTimelineComponent*                          Timeline;                                                   // 0x02B0   (0x0008)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x02B8   (0x0001)  
	TEnumAsByte<E_Units>                               Class;                                                      // 0x02B9   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x02BA   (0x0002)  MISSED
	FST_CharacterCustomization                         CharCustomization;                                          // 0x02BC   (0x004C)  
	class UStaticMesh*                                 ShowCaseHatItem;                                            // 0x0308   (0x0008)  
	class USkeletalMesh*                               ShowCaseTorsoItem;                                          // 0x0310   (0x0008)  
	class USkeletalMesh*                               ShowCaseBackItem;                                           // 0x0318   (0x0008)  
	bool                                               EnableCustomization;                                        // 0x0320   (0x0001)  
	bool                                               EnableWeaponPoseOverride;                                   // 0x0321   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.Timeline_0__FinishedFunc
	// void Timeline_0__FinishedFunc();                                                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.Timeline_0__UpdateFunc
	// void Timeline_0__UpdateFunc();                                                                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.SetClass
	// void SetClass(TEnumAsByte<E_Units> Class);                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.SetActiveWeaponSkin
	// void SetActiveWeaponSkin();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.ApplyCharCustomization
	// void ApplyCharCustomization();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.RefreshShowcaseCosmetics
	// void RefreshShowcaseCosmetics();                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.SetTeam
	// void SetTeam(TEnumAsByte<E_Teams> Team);                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.DisableWeaponUseParentBounds
	// void DisableWeaponUseParentBounds();                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.SetWeaponDisplayMode
	// void SetWeaponDisplayMode(bool ShowWeapon);                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Mannequin.BP_Mannequin_C.ExecuteUbergraph_BP_Mannequin
	// void ExecuteUbergraph_BP_Mannequin(int32_t EntryPoint);                                                                  // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Characters/BP_Mannequin_Axis.BP_Mannequin_Axis_C
/// Size: 0x0330 (816 bytes) (0x000322 - 0x000330) align 8 MaxSize: 0x0330
class ABP_Mannequin_Axis_C : public ABP_Mannequin_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x6];                                       // 0x0322   (0x0006)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0328   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Characters/BP_Mannequin_Axis.BP_Mannequin_Axis_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Mannequin_Axis.BP_Mannequin_Axis_C.ExecuteUbergraph_BP_Mannequin_Axis
	// void ExecuteUbergraph_BP_Mannequin_Axis(int32_t EntryPoint);                                                             // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/BP_EquipPreview.BP_EquipPreview_C
/// Size: 0x0238 (568 bytes) (0x000220 - 0x000238) align 8 MaxSize: 0x0238
class ABP_EquipPreview_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UChildActorComponent*                        Mannequin;                                                  // 0x0228   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0230   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/BP_EquipPreview.BP_EquipPreview_C.LoadActor
	// void LoadActor(class UClass* ActorClass);                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_EquipPreview.BP_EquipPreview_C.SetTeam
	// void SetTeam(TEnumAsByte<E_Teams> Team);                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_EquipPreview.BP_EquipPreview_C.ExecuteUbergraph_BP_EquipPreview
	// void ExecuteUbergraph_BP_EquipPreview(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/AI/NavArea_Vehicle.NavArea_Vehicle_C
/// Size: 0x0048 (72 bytes) (0x000048 - 0x000048) align 8 MaxSize: 0x0048
class UNavArea_Vehicle_C : public UNavArea
{ 
public:
};

/// Class /Game/Blueprints/Skills/BP_SkillBase.BP_SkillBase_C
/// Size: 0x024C (588 bytes) (0x000220 - 0x00024C) align 8 MaxSize: 0x024C
class ABP_SkillBase_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0228   (0x0008)  
	class ABP_Character_C*                             Character;                                                  // 0x0230   (0x0008)  
	TEnumAsByte<E_SkillSlots>                          SkillSlot;                                                  // 0x0238   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0239   (0x0003)  MISSED
	float                                              SkillCooldown;                                              // 0x023C   (0x0004)  
	float                                              SkillDuration;                                              // 0x0240   (0x0004)  
	float                                              SkillTimeThatHasPassed;                                     // 0x0244   (0x0004)  
	bool                                               RunSkillTime;                                               // 0x0248   (0x0001)  
	bool                                               RemainActiveInVehicle;                                      // 0x0249   (0x0001)  
	bool                                               EndActiveSkillsUponUse;                                     // 0x024A   (0x0001)  
	bool                                               AttachToPlayer;                                             // 0x024B   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_SkillBase.BP_SkillBase_C.OnRep_Character
	// void OnRep_Character();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_SkillBase.BP_SkillBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_SkillBase.BP_SkillBase_C.RechargeSkill
	// void RechargeSkill();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_SkillBase.BP_SkillBase_C.EndSkill
	// void EndSkill();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_SkillBase.BP_SkillBase_C.BeginSkillDuration
	// void BeginSkillDuration();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_SkillBase.BP_SkillBase_C.CharacterSet
	// void CharacterSet();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_SkillBase.BP_SkillBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_SkillBase.BP_SkillBase_C.ReduceSkillDuration
	// void ReduceSkillDuration(float Amount);                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_SkillBase.BP_SkillBase_C.EndSkillFromCharacter
	// void EndSkillFromCharacter();                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_SkillBase.BP_SkillBase_C.ExecuteUbergraph_BP_SkillBase
	// void ExecuteUbergraph_BP_SkillBase(int32_t EntryPoint);                                                                  // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Skills/BP_Skill_Shield.BP_Skill_Shield_C
/// Size: 0x0278 (632 bytes) (0x00024C - 0x000278) align 8 MaxSize: 0x0278
class ABP_Skill_Shield_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  
	TArray<class AActor*>                              ShieldedCharacters;                                         // 0x0258   (0x0010)  
	TArray<class ABP_BuffDebuffBase_C*>                Shields;                                                    // 0x0268   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_Shield.BP_Skill_Shield_C.CheckIfPlayerIsAlreadyShielded
	// void CheckIfPlayerIsAlreadyShielded(class ABP_Character_C* Character, bool& AlreadyShielded, class ABP_Shield_C*& AsBPShield); // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Skills/BP_Skill_Shield.BP_Skill_Shield_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Shield.BP_Skill_Shield_C.EndSkill
	// void EndSkill();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Shield.BP_Skill_Shield_C.OwnShieldDestroyed
	// void OwnShieldDestroyed();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Shield.BP_Skill_Shield_C.ExecuteUbergraph_BP_Skill_Shield
	// void ExecuteUbergraph_BP_Skill_Shield(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Skills/BP_Skill_PowerShot.BP_Skill_PowerShot_C
/// Size: 0x0274 (628 bytes) (0x00024C - 0x000274) align 8 MaxSize: 0x0274
class ABP_Skill_PowerShot_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  
	class UParticleSystemComponent*                    ParticleSystem;                                             // 0x0258   (0x0008)  
	bool                                               CanEnd;                                                     // 0x0260   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0261   (0x0007)  MISSED
	class UM_PiercingShotScreenEffect_C*               HUDEffect;                                                  // 0x0268   (0x0008)  
	int32_t                                            BonusDamageAmount;                                          // 0x0270   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_PowerShot.BP_Skill_PowerShot_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_PowerShot.BP_Skill_PowerShot_C.ReceiveDestroyed
	// void ReceiveDestroyed();                                                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_PowerShot.BP_Skill_PowerShot_C.CharacterSet
	// void CharacterSet();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_PowerShot.BP_Skill_PowerShot_C.WeaponFired
	// void WeaponFired();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_PowerShot.BP_Skill_PowerShot_C.ExecuteUbergraph_BP_Skill_PowerShot
	// void ExecuteUbergraph_BP_Skill_PowerShot(int32_t EntryPoint);                                                            // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Skills/BP_Skill_PowerClap.BP_Skill_PowerClap_C
/// Size: 0x0270 (624 bytes) (0x00024C - 0x000270) align 8 MaxSize: 0x0270
class ABP_Skill_PowerClap_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  
	float                                              BlastRadius;                                                // 0x0258   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x025C   (0x0004)  MISSED
	TArray<class AActor*>                              PushedActors;                                               // 0x0260   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_PowerClap.BP_Skill_PowerClap_C.GetForceAmount
	// void GetForceAmount(FVector EnemyLocation, FVector OwnLocation, FVector& Force);                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Skills/BP_Skill_PowerClap.BP_Skill_PowerClap_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_PowerClap.BP_Skill_PowerClap_C.MC_BlastingStrikeEffects
	// void MC_BlastingStrikeEffects();                                                                                         // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_PowerClap.BP_Skill_PowerClap_C.ExecuteUbergraph_BP_Skill_PowerClap
	// void ExecuteUbergraph_BP_Skill_PowerClap(int32_t EntryPoint);                                                            // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Skills/BP_Skill_PowderKeg.BP_Skill_PowderKeg_C
/// Size: 0x0264 (612 bytes) (0x00024C - 0x000264) align 8 MaxSize: 0x0264
class ABP_Skill_PowderKeg_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  
	FVector                                            ThrowDirection;                                             // 0x0258   (0x000C)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_PowderKeg.BP_Skill_PowderKeg_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_PowderKeg.BP_Skill_PowderKeg_C.ExecuteUbergraph_BP_Skill_PowderKeg
	// void ExecuteUbergraph_BP_Skill_PowderKeg(int32_t EntryPoint);                                                            // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Skills/BP_Skill_PoisonTrap.BP_Skill_PoisonTrap_C
/// Size: 0x0258 (600 bytes) (0x00024C - 0x000258) align 8 MaxSize: 0x0258
class ABP_Skill_PoisonTrap_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_PoisonTrap.BP_Skill_PoisonTrap_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_PoisonTrap.BP_Skill_PoisonTrap_C.ExecuteUbergraph_BP_Skill_PoisonTrap
	// void ExecuteUbergraph_BP_Skill_PoisonTrap(int32_t EntryPoint);                                                           // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Skills/BP_Skill_PoisonInfuse.BP_Skill_PoisonInfuse_C
/// Size: 0x0260 (608 bytes) (0x00024C - 0x000260) align 8 MaxSize: 0x0260
class ABP_Skill_PoisonInfuse_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  
	class UParticleSystemComponent*                    ParticleSystem;                                             // 0x0258   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_PoisonInfuse.BP_Skill_PoisonInfuse_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_PoisonInfuse.BP_Skill_PoisonInfuse_C.EndSkill
	// void EndSkill();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_PoisonInfuse.BP_Skill_PoisonInfuse_C.EndSkillFromCharacter
	// void EndSkillFromCharacter();                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_PoisonInfuse.BP_Skill_PoisonInfuse_C.ExecuteUbergraph_BP_Skill_PoisonInfuse
	// void ExecuteUbergraph_BP_Skill_PoisonInfuse(int32_t EntryPoint);                                                         // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Skills/BP_Skill_Invisbility.BP_Skill_Invisbility_C
/// Size: 0x025C (604 bytes) (0x00024C - 0x00025C) align 8 MaxSize: 0x025C
class ABP_Skill_Invisbility_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  
	int32_t                                            InvisibilityHP;                                             // 0x0258   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_Invisbility.BP_Skill_Invisbility_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Invisbility.BP_Skill_Invisbility_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Invisbility.BP_Skill_Invisbility_C.BreakInvisibility
	// void BreakInvisibility();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Invisbility.BP_Skill_Invisbility_C.EndSkill
	// void EndSkill();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Invisbility.BP_Skill_Invisbility_C.DamageReceived
	// void DamageReceived(int32_t UnAlteredDamageAmount, class APawn* Attacker);                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Invisbility.BP_Skill_Invisbility_C.ExecuteUbergraph_BP_Skill_Invisbility
	// void ExecuteUbergraph_BP_Skill_Invisbility(int32_t EntryPoint);                                                          // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Skills/BP_Skill_Heal.BP_Skill_Heal_C
/// Size: 0x0298 (664 bytes) (0x00024C - 0x000298) align 8 MaxSize: 0x0298
class ABP_Skill_Heal_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  
	class UPointLightComponent*                        PointLight;                                                 // 0x0258   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh1;                                                // 0x0260   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x0268   (0x0008)  
	float                                              Timeline_0_Opacity_B4C3BFE94F001B93AE929EA7890FC51E;        // 0x0270   (0x0004)  
	float                                              Timeline_0_NewTrack_0_B4C3BFE94F001B93AE929EA7890FC51E;     // 0x0274   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Timeline_0__Direction_B4C3BFE94F001B93AE929EA7890FC51E;     // 0x0278   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0279   (0x0007)  MISSED
	class UTimelineComponent*                          Timeline;                                                   // 0x0280   (0x0008)  
	TArray<class AActor*>                              CharactersToHeal;                                           // 0x0288   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_Heal.BP_Skill_Heal_C.Timeline_0__FinishedFunc
	// void Timeline_0__FinishedFunc();                                                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Skills/BP_Skill_Heal.BP_Skill_Heal_C.Timeline_0__UpdateFunc
	// void Timeline_0__UpdateFunc();                                                                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Skills/BP_Skill_Heal.BP_Skill_Heal_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Heal.BP_Skill_Heal_C.ReceiveActorBeginOverlap
	// void ReceiveActorBeginOverlap(class AActor* OtherActor);                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Heal.BP_Skill_Heal_C.ExecuteUbergraph_BP_Skill_Heal
	// void ExecuteUbergraph_BP_Skill_Heal(int32_t EntryPoint);                                                                 // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Skills/BP_Skill_Grenade.BP_Skill_Grenade_C
/// Size: 0x0260 (608 bytes) (0x00024C - 0x000260) align 8 MaxSize: 0x0260
class ABP_Skill_Grenade_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  
	class UClass*                                      GrenadeClass;                                               // 0x0258   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_Grenade.BP_Skill_Grenade_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Grenade.BP_Skill_Grenade_C.GrenadesThrown
	// void GrenadesThrown();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Grenade.BP_Skill_Grenade_C.ExecuteUbergraph_BP_Skill_Grenade
	// void ExecuteUbergraph_BP_Skill_Grenade(int32_t EntryPoint);                                                              // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Skills/BP_Skill_Grenade_Axis.BP_Skill_Grenade_Axis_C
/// Size: 0x0260 (608 bytes) (0x000260 - 0x000260) align 8 MaxSize: 0x0260
class ABP_Skill_Grenade_Axis_C : public ABP_Skill_Grenade_C
{ 
public:
};

/// Class /Game/Blueprints/Skills/BP_Skill_Dash.BP_Skill_Dash_C
/// Size: 0x0280 (640 bytes) (0x00024C - 0x000280) align 8 MaxSize: 0x0280
class ABP_Skill_Dash_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  
	bool                                               CanEnd;                                                     // 0x0258   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0259   (0x0007)  MISSED
	class UM_PiercingShotScreenEffect_C*               HUDEffect;                                                  // 0x0260   (0x0008)  
	int32_t                                            BonusDamageAmount;                                          // 0x0268   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x026C   (0x0004)  MISSED
	TArray<class UParticleSystemComponent*>            DashTrail;                                                  // 0x0270   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_Dash.BP_Skill_Dash_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Dash.BP_Skill_Dash_C.ReceiveDestroyed
	// void ReceiveDestroyed();                                                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Dash.BP_Skill_Dash_C.CharacterSet
	// void CharacterSet();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_Dash.BP_Skill_Dash_C.ExecuteUbergraph_BP_Skill_Dash
	// void ExecuteUbergraph_BP_Skill_Dash(int32_t EntryPoint);                                                                 // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Skills/BP_Skill_BurningBullets.BP_Skill_BurningBullets_C
/// Size: 0x0260 (608 bytes) (0x00024C - 0x000260) align 8 MaxSize: 0x0260
class ABP_Skill_BurningBullets_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  
	class UParticleSystemComponent*                    ParticleSystem;                                             // 0x0258   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_BurningBullets.BP_Skill_BurningBullets_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_BurningBullets.BP_Skill_BurningBullets_C.EndSkill
	// void EndSkill();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_BurningBullets.BP_Skill_BurningBullets_C.ExecuteUbergraph_BP_Skill_BurningBullets
	// void ExecuteUbergraph_BP_Skill_BurningBullets(int32_t EntryPoint);                                                       // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Skills/BP_Skill_FrenzyFire.BP_Skill_FrenzyFire_C
/// Size: 0x0290 (656 bytes) (0x00024C - 0x000290) align 8 MaxSize: 0x0290
class ABP_Skill_FrenzyFire_C : public ABP_SkillBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x024C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0250   (0x0008)  
	class UPointLightComponent*                        PointLight;                                                 // 0x0258   (0x0008)  
	class UAudioComponent*                             S_FrenzyFire;                                               // 0x0260   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x0268   (0x0008)  
	float                                              Fade_Size_D26FDC2045133BE42583C9B382581349;                 // 0x0270   (0x0004)  
	float                                              Fade_Fade_D26FDC2045133BE42583C9B382581349;                 // 0x0274   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Fade__Direction_D26FDC2045133BE42583C9B382581349;           // 0x0278   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0279   (0x0007)  MISSED
	class UTimelineComponent*                          Fade;                                                       // 0x0280   (0x0008)  
	float                                              EffectSpeed;                                                // 0x0288   (0x0004)  
	float                                              FadeTime;                                                   // 0x028C   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Skill_FrenzyFire.BP_Skill_FrenzyFire_C.Fade__FinishedFunc
	// void Fade__FinishedFunc();                                                                                               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Skills/BP_Skill_FrenzyFire.BP_Skill_FrenzyFire_C.Fade__UpdateFunc
	// void Fade__UpdateFunc();                                                                                                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Skills/BP_Skill_FrenzyFire.BP_Skill_FrenzyFire_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_FrenzyFire.BP_Skill_FrenzyFire_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_FrenzyFire.BP_Skill_FrenzyFire_C.EndSkill
	// void EndSkill();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_FrenzyFire.BP_Skill_FrenzyFire_C.ReceiveDestroyed
	// void ReceiveDestroyed();                                                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_FrenzyFire.BP_Skill_FrenzyFire_C.SetFrenzyFireEffectOnChar
	// void SetFrenzyFireEffectOnChar(float Value);                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_FrenzyFire.BP_Skill_FrenzyFire_C.EnemyDamaged
	// void EnemyDamaged(int32_t DamageAmount);                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Skill_FrenzyFire.BP_Skill_FrenzyFire_C.ExecuteUbergraph_BP_Skill_FrenzyFire
	// void ExecuteUbergraph_BP_Skill_FrenzyFire(int32_t EntryPoint);                                                           // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C
/// Size: 0x02B8 (696 bytes) (0x000280 - 0x0002B8) align 8 MaxSize: 0x02B8
class ABP_FreeCam_C : public APawn
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0280   (0x0008)  
	class UCameraComponent*                            Camera;                                                     // 0x0288   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0290   (0x0008)  
	bool                                               Forward;                                                    // 0x0298   (0x0001)  
	bool                                               Backward;                                                   // 0x0299   (0x0001)  
	bool                                               Left;                                                       // 0x029A   (0x0001)  
	bool                                               Right;                                                      // 0x029B   (0x0001)  
	float                                              MovementSpeed;                                              // 0x029C   (0x0004)  
	bool                                               CameraSmooth;                                               // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02A1   (0x0003)  MISSED
	float                                              AxisValueX;                                                 // 0x02A4   (0x0004)  
	float                                              AxisValueY;                                                 // 0x02A8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02AC   (0x0004)  MISSED
	class ABP_Character_C*                             SpectatingPlayer;                                           // 0x02B0   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C.InpActEvt_W_K2Node_InputKeyEvent
	// void InpActEvt_W_K2Node_InputKeyEvent(FKey Key);                                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C.InpActEvt_S_K2Node_InputKeyEvent
	// void InpActEvt_S_K2Node_InputKeyEvent(FKey Key);                                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C.InpActEvt_A_K2Node_InputKeyEvent
	// void InpActEvt_A_K2Node_InputKeyEvent(FKey Key);                                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C.InpActEvt_D_K2Node_InputKeyEvent
	// void InpActEvt_D_K2Node_InputKeyEvent(FKey Key);                                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent
	// void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent(FKey Key);                                                             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent
	// void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent(FKey Key);                                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C.InpActEvt_SpaceBar_K2Node_InputKeyEvent
	// void InpActEvt_SpaceBar_K2Node_InputKeyEvent(FKey Key);                                                                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C.InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C.InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Cameras/BP_FreeCam.BP_FreeCam_C.ExecuteUbergraph_BP_FreeCam
	// void ExecuteUbergraph_BP_FreeCam(int32_t EntryPoint);                                                                    // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/SimpleBlueprints/BP_LightActorBase.BP_LightActorBase_C
/// Size: 0x0231 (561 bytes) (0x000220 - 0x000231) align 8 MaxSize: 0x0231
class ABP_LightActorBase_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0228   (0x0008)  
	bool                                               Enabled;                                                    // 0x0230   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/SimpleBlueprints/BP_LightActorBase.BP_LightActorBase_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/SimpleBlueprints/BP_LightActorBase.BP_LightActorBase_C.Init
	// void Init();                                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/SimpleBlueprints/BP_LightActorBase.BP_LightActorBase_C.ExecuteUbergraph_BP_LightActorBase
	// void ExecuteUbergraph_BP_LightActorBase(int32_t EntryPoint);                                                             // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/AI/BP_SniperSpot.BP_SniperSpot_C
/// Size: 0x0231 (561 bytes) (0x000220 - 0x000231) align 8 MaxSize: 0x0231
class ABP_SniperSpot_C : public AActor
{ 
public:
	class UBillboardComponent*                         BillBoard;                                                  // 0x0220   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0228   (0x0008)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x0230   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/AI/BP_SniperSpot.BP_SniperSpot_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/Vehicles/BP_VehicleRocket.BP_VehicleRocket_C
/// Size: 0x0230 (560 bytes) (0x000220 - 0x000230) align 8 MaxSize: 0x0230
class ABP_VehicleRocket_C : public AActor
{ 
public:
	class UStaticMeshComponent*                        Allied_Rocket;                                              // 0x0220   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0228   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_VehicleRocket.BP_VehicleRocket_C.OnRep_Available
	// void OnRep_Available();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/AI/BP_AIControllerBase.BP_AIControllerBase_C
/// Size: 0x0360 (864 bytes) (0x000328 - 0x000360) align 8 MaxSize: 0x0360
class ABP_AIControllerBase_C : public ADetourCrowdAIController
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0328   (0x0008)  
	TArray<class ABP_SniperSpot_C*>                    AllSniperSpots;                                             // 0x0330   (0x0010)  
	TArray<class ABP_SniperSpot_C*>                    AlliedSniperSpots;                                          // 0x0340   (0x0010)  
	TArray<class ABP_SniperSpot_C*>                    AxisSniperSpots;                                            // 0x0350   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/AI/BP_AIControllerBase.BP_AIControllerBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/BP_AIControllerBase.BP_AIControllerBase_C.ExecuteUbergraph_BP_AIControllerBase
	// void ExecuteUbergraph_BP_AIControllerBase(int32_t EntryPoint);                                                           // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/AI/BP_AIController_Character.BP_AIController_Character_C
/// Size: 0x0368 (872 bytes) (0x000360 - 0x000368) align 8 MaxSize: 0x0368
class ABP_AIController_Character_C : public ABP_AIControllerBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0360   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/AI/BP_AIController_Character.BP_AIController_Character_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/BP_AIController_Character.BP_AIController_Character_C.ReceivePossess
	// void ReceivePossess(class APawn* PossessedPawn);                                                                         // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/BP_AIController_Character.BP_AIController_Character_C.ExecuteUbergraph_BP_AIController_Character
	// void ExecuteUbergraph_BP_AIController_Character(int32_t EntryPoint);                                                     // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/AI/BP_AIController_Tank.BP_AIController_Tank_C
/// Size: 0x0368 (872 bytes) (0x000360 - 0x000368) align 8 MaxSize: 0x0368
class ABP_AIController_Tank_C : public ABP_AIControllerBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0360   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/AI/BP_AIController_Tank.BP_AIController_Tank_C.ReceivePossess
	// void ReceivePossess(class APawn* PossessedPawn);                                                                         // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/AI/BP_AIController_Tank.BP_AIController_Tank_C.ExecuteUbergraph_BP_AIController_Tank
	// void ExecuteUbergraph_BP_AIController_Tank(int32_t EntryPoint);                                                          // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/BP_InteractableBase.BP_InteractableBase_C
/// Size: 0x0248 (584 bytes) (0x000220 - 0x000248) align 8 MaxSize: 0x0248
class ABP_InteractableBase_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0228   (0x0008)  
	FText                                              InteractableName;                                           // 0x0230   (0x0018)  


	/// Functions
	// Function /Game/Blueprints/BP_InteractableBase.BP_InteractableBase_C.Interact(Client)
	// void Interact_Client_(class ABP_Character_C* InteractingCharacter);                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_InteractableBase.BP_InteractableBase_C.Interact(Server)
	// void Interact_Server_();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_InteractableBase.BP_InteractableBase_C.ExecuteUbergraph_BP_InteractableBase
	// void ExecuteUbergraph_BP_InteractableBase(int32_t EntryPoint);                                                           // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapPoster.BP_VehicleSwapPoster_C
/// Size: 0x0298 (664 bytes) (0x000248 - 0x000298) align 16 MaxSize: 0x0298
class ABP_VehicleSwapPoster_C : public ABP_InteractableBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0248   (0x0008)  
	class UStaticMeshComponent*                        Plane;                                                      // 0x0250   (0x0008)  
	class UClass*                                      VehicleClassToSwapToo;                                      // 0x0258   (0x0008)  
	FTransform                                         VehicleTransform;                                           // 0x0260   (0x0030)  
	class ABP_VehicleSwapBoard_Base_C*                 BoardRef;                                                   // 0x0290   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapPoster.BP_VehicleSwapPoster_C.CanSwapVehicle?
	// void CanSwapVehicle_(bool& CanSwap);                                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapPoster.BP_VehicleSwapPoster_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapPoster.BP_VehicleSwapPoster_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapPoster.BP_VehicleSwapPoster_C.Interact(Server)
	// void Interact_Server_();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapPoster.BP_VehicleSwapPoster_C.ExecuteUbergraph_BP_VehicleSwapPoster
	// void ExecuteUbergraph_BP_VehicleSwapPoster(int32_t EntryPoint);                                                          // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Projectiles/BP_SimpleProjectilebase.BP_SimpleProjectilebase_C
/// Size: 0x0360 (864 bytes) (0x000220 - 0x000360) align 8 MaxSize: 0x0360
class ABP_SimpleProjectilebase_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UParticleSystemComponent*                    PoisonSmoke;                                                // 0x0228   (0x0008)  
	class UAudioComponent*                             FlightSound;                                                // 0x0230   (0x0008)  
	class URotatingMovementComponent*                  RotatingMovement;                                           // 0x0238   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x0240   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0248   (0x0008)  
	FVector                                            TravelDirection;                                            // 0x0250   (0x000C)  
	FVector                                            LastLocation;                                               // 0x025C   (0x000C)  
	bool                                               Freeze;                                                     // 0x0268   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0269   (0x0007)  MISSED
	TArray<class AActor*>                              Actors_to_Ignore;                                           // 0x0270   (0x0010)  
	FVector                                            InitialLocation;                                            // 0x0280   (0x000C)  
	bool                                               LocalProjectile;                                            // 0x028C   (0x0001)  
	bool                                               IsAIProjectile;                                             // 0x028D   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x028E   (0x0002)  MISSED
	class APawn*                                       AttackerPawn;                                               // 0x0290   (0x0008)  
	float                                              DropAmount;                                                 // 0x0298   (0x0004)  
	float                                              Delta_Seconds;                                              // 0x029C   (0x0004)  
	bool                                               IsPoisonInfused;                                            // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x02A1   (0x0003)  MISSED
	int32_t                                            BonusDamage;                                                // 0x02A4   (0x0004)  
	class USoundBase*                                  CharacterImpactSound;                                       // 0x02A8   (0x0008)  
	class USoundBase*                                  EnvironmentImpactSound;                                     // 0x02B0   (0x0008)  
	class UParticleSystem*                             ImpactParticle;                                             // 0x02B8   (0x0008)  
	float                                              TravelSpeed;                                                // 0x02C0   (0x0004)  
	float                                              DropSpeed;                                                  // 0x02C4   (0x0004)  
	float                                              LingerTime;                                                 // 0x02C8   (0x0004)  
	bool                                               IgnoreEnemies;                                              // 0x02CC   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x02CD   (0x0003)  MISSED
	FHitResult                                         LastHit;                                                    // 0x02D0   (0x0088)  
	class ABP_EquipableBase_C*                         EquipableRef;                                               // 0x0358   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_SimpleProjectilebase.BP_SimpleProjectilebase_C.FindClosestCharacterBone
	// void FindClosestCharacterBone(FVector ImpactPoint, class ABP_Character_C* Character, FName& ClosestBoneName);            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_SimpleProjectilebase.BP_SimpleProjectilebase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_SimpleProjectilebase.BP_SimpleProjectilebase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_SimpleProjectilebase.BP_SimpleProjectilebase_C.SetMeleeWeaponSkin
	// void SetMeleeWeaponSkin(int32_t SkinIndex);                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_SimpleProjectilebase.BP_SimpleProjectilebase_C.CharacterHit
	// void CharacterHit(class ABP_Character_C* Character, FVector HitLocation);                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_SimpleProjectilebase.BP_SimpleProjectilebase_C.ExecuteUbergraph_BP_SimpleProjectilebase
	// void ExecuteUbergraph_BP_SimpleProjectilebase(int32_t EntryPoint);                                                       // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Projectiles/BP_SyringeInjector_Old.BP_SyringeInjector_Old_C
/// Size: 0x0374 (884 bytes) (0x000360 - 0x000374) align 8 MaxSize: 0x0374
class ABP_SyringeInjector_Old_C : public ABP_SimpleProjectilebase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0360   (0x0008)  
	class UMaterialBillboardComponent*                 MaterialBillboard;                                          // 0x0368   (0x0008)  
	int32_t                                            RemainingAmmo;                                              // 0x0370   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_SyringeInjector_Old.BP_SyringeInjector_Old_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_SyringeInjector_Old.BP_SyringeInjector_Old_C.CharacterHit
	// void CharacterHit(class ABP_Character_C* Character, FVector HitLocation);                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_SyringeInjector_Old.BP_SyringeInjector_Old_C.ExecuteUbergraph_BP_SyringeInjector_Old
	// void ExecuteUbergraph_BP_SyringeInjector_Old(int32_t EntryPoint);                                                        // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Projectiles/BP_MeleeProjectileBase.BP_MeleeProjectileBase_C
/// Size: 0x0378 (888 bytes) (0x000360 - 0x000378) align 8 MaxSize: 0x0378
class ABP_MeleeProjectileBase_C : public ABP_SimpleProjectilebase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0360   (0x0008)  
	class UParticleSystemComponent*                    TwirlTrail1;                                                // 0x0368   (0x0008)  
	class UParticleSystemComponent*                    TwirlTrail;                                                 // 0x0370   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_MeleeProjectileBase.BP_MeleeProjectileBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_MeleeProjectileBase.BP_MeleeProjectileBase_C.CharacterHit
	// void CharacterHit(class ABP_Character_C* Character, FVector HitLocation);                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_MeleeProjectileBase.BP_MeleeProjectileBase_C.ExecuteUbergraph_BP_MeleeProjectileBase
	// void ExecuteUbergraph_BP_MeleeProjectileBase(int32_t EntryPoint);                                                        // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Projectiles/BP_MeleeProjectile_Bayonet.BP_MeleeProjectile_Bayonet_C
/// Size: 0x0378 (888 bytes) (0x000378 - 0x000378) align 8 MaxSize: 0x0378
class ABP_MeleeProjectile_Bayonet_C : public ABP_MeleeProjectileBase_C
{ 
public:
};

/// Class /Game/Blueprints/Projectiles/BP_MeleeProjectile_Dagger.BP_MeleeProjectile_Dagger_C
/// Size: 0x0378 (888 bytes) (0x000378 - 0x000378) align 8 MaxSize: 0x0378
class ABP_MeleeProjectile_Dagger_C : public ABP_MeleeProjectileBase_C
{ 
public:
};

/// Class /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C
/// Size: 0x0330 (816 bytes) (0x000220 - 0x000330) align 16 MaxSize: 0x0330
class ABP_Trapbase_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UParticleSystemComponent*                    TrapIndicator;                                              // 0x0228   (0x0008)  
	class UParticleSystemComponent*                    P_TrapThrowTrail;                                           // 0x0230   (0x0008)  
	class USphereComponent*                            TrapActivationRadius;                                       // 0x0238   (0x0008)  
	class UStaticMeshComponent*                        TrapMesh;                                                   // 0x0240   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0248   (0x0008)  
	float                                              AutoDetonateCountdown_NewTrack_0_9A9F1F144D30BD7DC15169B6058158A9; // 0x0250   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    AutoDetonateCountdown__Direction_9A9F1F144D30BD7DC15169B6058158A9; // 0x0254   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0255   (0x0003)  MISSED
	class UTimelineComponent*                          AutoDetonateCountdown;                                      // 0x0258   (0x0008)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x0260   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0261   (0x0003)  MISSED
	int32_t                                            OwningPlayerIndex;                                          // 0x0264   (0x0004)  
	class APawn*                                       OwningPawn;                                                 // 0x0268   (0x0008)  
	FVector                                            ThrowDirection;                                             // 0x0270   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x027C   (0x0004)  MISSED
	FTransform                                         Transform;                                                  // 0x0280   (0x0030)  
	bool                                               Placed;                                                     // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData03_6[0xF];                                       // 0x02B1   (0x000F)  MISSED
	FTransform                                         FinalTransform;                                             // 0x02C0   (0x0030)  
	TEnumAsByte<E_Teams>                               OwnTeam;                                                    // 0x02F0   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x02F1   (0x0003)  MISSED
	float                                              AOERadius;                                                  // 0x02F4   (0x0004)  
	TEnumAsByte<E_DamageTypes>                         DamageType;                                                 // 0x02F8   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x02F9   (0x0007)  MISSED
	class UClass*                                      BuffDebuff;                                                 // 0x0300   (0x0008)  
	int32_t                                            DamageAmount;                                               // 0x0308   (0x0004)  
	float                                              ImpactParticleSize;                                         // 0x030C   (0x0004)  
	class UParticleSystem*                             ExplosionParticle;                                          // 0x0310   (0x0008)  
	bool                                               Armed;                                                      // 0x0318   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x0319   (0x0003)  MISSED
	float                                              AutoDetonateTimePassed;                                     // 0x031C   (0x0004)  
	class UMaterialInstanceDynamic*                    GlowMID;                                                    // 0x0320   (0x0008)  
	float                                              LaunchForce;                                                // 0x0328   (0x0004)  
	float                                              ThrowForce;                                                 // 0x032C   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.FindActiveTrapAmountForOwner
	// void FindActiveTrapAmountForOwner(int32_t& TrapAmount, class ABP_Trapbase_C*& OldestTrap);                               // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.OnRep_Armed
	// void OnRep_Armed();                                                                                                      // [0x1325ea0] HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.OnRep_Placed
	// void OnRep_Placed();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.AutoDetonateCountdown__FinishedFunc
	// void AutoDetonateCountdown__FinishedFunc();                                                                              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.AutoDetonateCountdown__UpdateFunc
	// void AutoDetonateCountdown__UpdateFunc();                                                                                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.ReceiveActorBeginOverlap
	// void ReceiveActorBeginOverlap(class AActor* OtherActor);                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.MC_Explode
	// void MC_Explode();                                                                                                       // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.Explode
	// void Explode();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.ReceiveHit
	// void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, FVector HitLocation, FVector HitNormal, FVector NormalImpulse, FHitResult& Hit); // [0x1325ea0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.MC_Placed
	// void MC_Placed();                                                                                                        // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.ApplyDamage
	// void ApplyDamage(int32_t DamageAmount, FVector DamageHitLocation, FVector DamageDirection, class APawn* AttackerPawn, class UClass* Debuff, TEnumAsByte<E_DamageTypes> DamageType, int32_t PlayerIndex, bool IsCriticalHit, bool IgnoreTeamProtection, FText SpecialKillMessage, bool ShouldBreakInvisibility, bool IsPiercingDamage, class UClass* ProjectileClass_optional_, class UClass* EquipableClass_optonal_); // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.SetArmedMaterialState
	// void SetArmedMaterialState();                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.RemoveTrap
	// void RemoveTrap();                                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Trapbase.BP_Trapbase_C.ExecuteUbergraph_BP_Trapbase
	// void ExecuteUbergraph_BP_Trapbase(int32_t EntryPoint);                                                                   // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Projectiles/BP_PoisonTrap_Axis.BP_PoisonTrap_Axis_C
/// Size: 0x0330 (816 bytes) (0x000330 - 0x000330) align 16 MaxSize: 0x0330
class ABP_PoisonTrap_Axis_C : public ABP_Trapbase_C
{ 
public:
};

/// Class /Game/Blueprints/Projectiles/BP_PoisonTrap_Allied.BP_PoisonTrap_Allied_C
/// Size: 0x0330 (816 bytes) (0x000330 - 0x000330) align 16 MaxSize: 0x0330
class ABP_PoisonTrap_Allied_C : public ABP_Trapbase_C
{ 
public:
};

/// Class /Game/Blueprints/Projectiles/BP_ImpactDecal.BP_ImpactDecal_C
/// Size: 0x0248 (584 bytes) (0x000220 - 0x000248) align 8 MaxSize: 0x0248
class ABP_ImpactDecal_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UDecalComponent*                             Decal;                                                      // 0x0228   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0230   (0x0008)  
	TArray<class UMaterialInstance*>                   DecalMaterials;                                             // 0x0238   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_ImpactDecal.BP_ImpactDecal_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ImpactDecal.BP_ImpactDecal_C.RemoveDecal
	// void RemoveDecal();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ImpactDecal.BP_ImpactDecal_C.ExecuteUbergraph_BP_ImpactDecal
	// void ExecuteUbergraph_BP_ImpactDecal(int32_t EntryPoint);                                                                // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Projectiles/BP_ImpactDecal_ImpactCrater.BP_ImpactDecal_ImpactCrater_C
/// Size: 0x0248 (584 bytes) (0x000248 - 0x000248) align 8 MaxSize: 0x0248
class ABP_ImpactDecal_ImpactCrater_C : public ABP_ImpactDecal_C
{ 
public:
};

/// Class /Game/Blueprints/Projectiles/BP_ImpactDecal_BulletHole.BP_ImpactDecal_BulletHole_C
/// Size: 0x0248 (584 bytes) (0x000248 - 0x000248) align 8 MaxSize: 0x0248
class ABP_ImpactDecal_BulletHole_C : public ABP_ImpactDecal_C
{ 
public:
};

/// Class /Game/Blueprints/Projectiles/BP_ProjectileTrailBase.BP_ProjectileTrailBase_C
/// Size: 0x0275 (629 bytes) (0x000220 - 0x000275) align 8 MaxSize: 0x0275
class ABP_ProjectileTrailBase_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x0228   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0230   (0x0008)  
	float                                              Fadeout_NewTrack_0_57B9EC33401D951892946496ED83255F;        // 0x0238   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Fadeout__Direction_57B9EC33401D951892946496ED83255F;        // 0x023C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x023D   (0x0003)  MISSED
	class UTimelineComponent*                          FadeOut;                                                    // 0x0240   (0x0008)  
	class ABP_ProjectileBase_C*                        ProjectileRef;                                              // 0x0248   (0x0008)  
	FVector                                            FinalLocation;                                              // 0x0250   (0x000C)  
	bool                                               FinalLocationReached;                                       // 0x025C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x025D   (0x0003)  MISSED
	FVector                                            LocationToUse;                                              // 0x0260   (0x000C)  
	float                                              FadeSpeed;                                                  // 0x026C   (0x0004)  
	float                                              TrailWidth;                                                 // 0x0270   (0x0004)  
	bool                                               OwnProjectileTrail;                                         // 0x0274   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_ProjectileTrailBase.BP_ProjectileTrailBase_C.Fadeout__FinishedFunc
	// void Fadeout__FinishedFunc();                                                                                            // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Projectiles/BP_ProjectileTrailBase.BP_ProjectileTrailBase_C.Fadeout__UpdateFunc
	// void Fadeout__UpdateFunc();                                                                                              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Projectiles/BP_ProjectileTrailBase.BP_ProjectileTrailBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileTrailBase.BP_ProjectileTrailBase_C.StopTrail
	// void StopTrail();                                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileTrailBase.BP_ProjectileTrailBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileTrailBase.BP_ProjectileTrailBase_C.SetTrail
	// void SetTrail(FVector FinalLocation, FVector InitialLocation);                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileTrailBase.BP_ProjectileTrailBase_C.ExecuteUbergraph_BP_ProjectileTrailBase
	// void ExecuteUbergraph_BP_ProjectileTrailBase(int32_t EntryPoint);                                                        // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Projectiles/BP_ProjectileTrailBase_BurningBullet.BP_ProjectileTrailBase_BurningBullet_C
/// Size: 0x0275 (629 bytes) (0x000275 - 0x000275) align 8 MaxSize: 0x0275
class ABP_ProjectileTrailBase_BurningBullet_C : public ABP_ProjectileTrailBase_C
{ 
public:
};

/// Class /Game/Blueprints/Projectiles/BP_ProjectileTrailBase_PowerShot.BP_ProjectileTrailBase_PowerShot_C
/// Size: 0x0275 (629 bytes) (0x000275 - 0x000275) align 8 MaxSize: 0x0275
class ABP_ProjectileTrailBase_PowerShot_C : public ABP_ProjectileTrailBase_C
{ 
public:
};

/// Struct /Game/Blueprints/Structs/ST_ThrowableAttachment.ST_ThrowableAttachment
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 8 MaxSize: 0x0028
struct FST_ThrowableAttachment
{ 
	class UPrimitiveComponent*                         Component_3_D03C964943C339E274C7399C7409F5AD;               // 0x0000   (0x0008)  
	FVector                                            Location_6_59D6BD0E49F739602581F1B30D513893;                // 0x0008   (0x000C)  
	FRotator                                           Rotation_9_FE6E504541A2B8DBD0ACDF9210367E95;                // 0x0014   (0x000C)  
	FName                                              BoneName_12_E96CC0294A68FBD167121697E5278935;               // 0x0020   (0x0008)  
};

/// Class /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C
/// Size: 0x0570 (1392 bytes) (0x000220 - 0x000570) align 16 MaxSize: 0x0570
class ABP_ProjectileBase_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UParticleSystemComponent*                    P_Tracer2;                                                  // 0x0228   (0x0008)  
	class UStaticMeshComponent*                        projectileMesh;                                             // 0x0230   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0238   (0x0008)  
	FVector                                            FlightDirection;                                            // 0x0240   (0x000C)  
	bool                                               IsThrowable;                                                // 0x024C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x024D   (0x0003)  MISSED
	float                                              Speed;                                                      // 0x0250   (0x0004)  
	float                                              DeltaSeconds;                                               // 0x0254   (0x0004)  
	FVector                                            LastLocation;                                               // 0x0258   (0x000C)  
	int32_t                                            DirectDamageAmount;                                         // 0x0264   (0x0004)  
	TArray<class AActor*>                              ActorsToIgnore;                                             // 0x0268   (0x0010)  
	TEnumAsByte<E_WeaponRange>                         WeaponDamageRange;                                          // 0x0278   (0x0001)  
	bool                                               AOEDamage_;                                                 // 0x0279   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x027A   (0x0002)  MISSED
	float                                              AOERadius;                                                  // 0x027C   (0x0004)  
	int32_t                                            AOEDamageAmount;                                            // 0x0280   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0284   (0x0004)  MISSED
	TArray<class AActor*>                              AlreadyHitActors;                                           // 0x0288   (0x0010)  
	class UClass*                                      BuffDebuffToApply;                                          // 0x0298   (0x0008)  
	float                                              ProjectileLifeSpan;                                         // 0x02A0   (0x0004)  
	float                                              DropRate;                                                   // 0x02A4   (0x0004)  
	class UParticleSystem*                             TracerType;                                                 // 0x02A8   (0x0008)  
	float                                              DropAmount;                                                 // 0x02B0   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x02B4   (0x0004)  MISSED
	class UParticleSystem*                             EnvironmentImpactParticleEffect;                            // 0x02B8   (0x0008)  
	class UParticleSystem*                             CharacterImpactParticleEffect;                              // 0x02C0   (0x0008)  
	class UParticleSystem*                             VehicleImpactParticleEffect;                                // 0x02C8   (0x0008)  
	float                                              ImpactParticleSizeMultiplier;                               // 0x02D0   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x02D4   (0x0004)  MISSED
	class USoundBase*                                  ImpactSound;                                                // 0x02D8   (0x0008)  
	float                                              ImpactProjectileSoundVolume;                                // 0x02E0   (0x0004)  
	float                                              ImpactSoundPitch;                                           // 0x02E4   (0x0004)  
	class UClass*                                      ImpactDecal;                                                // 0x02E8   (0x0008)  
	float                                              ImpactDecalScale;                                           // 0x02F0   (0x0004)  
	TEnumAsByte<E_DamageTypes>                         DirectHitDamageType;                                        // 0x02F4   (0x0001)  
	TEnumAsByte<E_DamageTypes>                         AOEDamageType;                                              // 0x02F5   (0x0001)  
	unsigned char                                      UnknownData05_6[0x2];                                       // 0x02F6   (0x0002)  MISSED
	class APawn*                                       AttackerPawn_DontEdit_;                                     // 0x02F8   (0x0008)  
	bool                                               LocalProjectile_EnableIfServerOrAI_;                        // 0x0300   (0x0001)  
	bool                                               EnableDropRate;                                             // 0x0301   (0x0001)  
	unsigned char                                      UnknownData06_6[0x2];                                       // 0x0302   (0x0002)  MISSED
	FHitResult                                         Hit;                                                        // 0x0304   (0x0088)  
	bool                                               Active;                                                     // 0x038C   (0x0001)  
	unsigned char                                      UnknownData07_6[0x3];                                       // 0x038D   (0x0003)  MISSED
	FTransform                                         ThrowableTransform;                                         // 0x0390   (0x0030)  
	float                                              DetonationDelay;                                            // 0x03C0   (0x0004)  
	unsigned char                                      UnknownData08_6[0x4];                                       // 0x03C4   (0x0004)  MISSED
	class USoundBase*                                  ThrowableBounceSound;                                       // 0x03C8   (0x0008)  
	FVector                                            LastThrowableLocation;                                      // 0x03D0   (0x000C)  
	bool                                               EnableFlyBySound;                                           // 0x03DC   (0x0001)  
	bool                                               CanCriticalHit;                                             // 0x03DD   (0x0001)  
	unsigned char                                      UnknownData09_6[0x2];                                       // 0x03DE   (0x0002)  MISSED
	FVector                                            InitialLocation;                                            // 0x03E0   (0x000C)  
	float                                              ProjectileCollisionImmuneDistance;                          // 0x03EC   (0x0004)  
	float                                              HitDetectionOffset;                                         // 0x03F0   (0x0004)  
	bool                                               UseCloseByCollisionImunity;                                 // 0x03F4   (0x0001)  
	bool                                               VehicleHit;                                                 // 0x03F5   (0x0001)  
	bool                                               CharacterHit;                                               // 0x03F6   (0x0001)  
	bool                                               DirectHit;                                                  // 0x03F7   (0x0001)  
	SDK_UNDEFINED(16,614) /* FMulticastInlineDelegate */ __um(OnDirectHit);                                        // 0x03F8   (0x0010)  
	bool                                               IsAIProjectile;                                             // 0x0408   (0x0001)  
	unsigned char                                      UnknownData10_6[0x7];                                       // 0x0409   (0x0007)  MISSED
	FText                                              SpecialKillMessage;                                         // 0x0410   (0x0018)  
	bool                                               EnableHeadshots;                                            // 0x0428   (0x0001)  
	unsigned char                                      UnknownData11_6[0x7];                                       // 0x0429   (0x0007)  MISSED
	class UCurveFloat*                                 WeaponRangeCurve;                                           // 0x0430   (0x0008)  
	FVector                                            CharacterOrigin;                                            // 0x0438   (0x000C)  
	float                                              LaunchForce;                                                // 0x0444   (0x0004)  
	bool                                               CreateTrail;                                                // 0x0448   (0x0001)  
	unsigned char                                      UnknownData12_6[0x3];                                       // 0x0449   (0x0003)  MISSED
	float                                              TrailWidth;                                                 // 0x044C   (0x0004)  
	TEnumAsByte<E_TrailLengths>                        TrailLengthType;                                            // 0x0450   (0x0001)  
	unsigned char                                      UnknownData13_6[0x3];                                       // 0x0451   (0x0003)  MISSED
	float                                              ProjectileRadius;                                           // 0x0454   (0x0004)  
	bool                                               IsHeadShot;                                                 // 0x0458   (0x0001)  
	unsigned char                                      UnknownData14_6[0x7];                                       // 0x0459   (0x0007)  MISSED
	class ABP_ProjectileTrailBase_C*                   TrailRef;                                                   // 0x0460   (0x0008)  
	bool                                               StickyThrowable;                                            // 0x0468   (0x0001)  
	bool                                               IsStuckToObject_StickyThrowable_;                           // 0x0469   (0x0001)  
	unsigned char                                      UnknownData15_6[0x2];                                       // 0x046A   (0x0002)  MISSED
	FHitResult                                         LastStickyThrowableObjectHit;                               // 0x046C   (0x0088)  
	unsigned char                                      UnknownData16_6[0x4];                                       // 0x04F4   (0x0004)  MISSED
	FST_ThrowableAttachment                            ThrowableAttachment;                                        // 0x04F8   (0x0028)  
	bool                                               AttachImpactParticleToCharacter;                            // 0x0520   (0x0001)  
	bool                                               IsPiercingDamage;                                           // 0x0521   (0x0001)  
	unsigned char                                      UnknownData17_6[0x2];                                       // 0x0522   (0x0002)  MISSED
	FVector                                            WeaponProjectileExitLocation;                               // 0x0524   (0x000C)  
	bool                                               EnableCloseByDamageReduction;                               // 0x0530   (0x0001)  
	bool                                               IgnoreAOERadius_AlwaysDealFullDMG_;                         // 0x0531   (0x0001)  
	bool                                               EnableDebug;                                                // 0x0532   (0x0001)  
	unsigned char                                      UnknownData18_6[0x1];                                       // 0x0533   (0x0001)  MISSED
	int32_t                                            BonusDamage;                                                // 0x0534   (0x0004)  
	bool                                               ExplodeOnLifeEnd;                                           // 0x0538   (0x0001)  
	unsigned char                                      UnknownData19_6[0x3];                                       // 0x0539   (0x0003)  MISSED
	float                                              MaxProjectileTravelDistance;                                // 0x053C   (0x0004)  
	FVector                                            AOELocation;                                                // 0x0540   (0x000C)  
	int32_t                                            UniqueProjectileID;                                         // 0x054C   (0x0004)  
	bool                                               ServerProjectile;                                           // 0x0550   (0x0001)  
	unsigned char                                      UnknownData20_6[0x3];                                       // 0x0551   (0x0003)  MISSED
	FVector                                            AddedVelocity;                                              // 0x0554   (0x000C)  
	class UClass*                                      TrailToUse;                                                 // 0x0560   (0x0008)  
	class UClass*                                      EquipableClass_optional_;                                   // 0x0568   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.GetDistanceTraveled
	// float GetDistanceTraveled();                                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.OnRep_ThrowableAttachment
	// void OnRep_ThrowableAttachment();                                                                                        // [0x1325ea0] HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.CalculateDamageFalloff
	// void CalculateDamageFalloff(int32_t DamageIn, int32_t& ResultingDamage);                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.OnRep_IsThrowable
	// void OnRep_IsThrowable();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.ReceiveHit
	// void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, FVector HitLocation, FVector HitNormal, FVector NormalImpulse, FHitResult& Hit); // [0x1325ea0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.MC_Bounce
	// void MC_Bounce();                                                                                                        // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.MC_ThrowableExplode
	// void MC_ThrowableExplode(FVector Location);                                                                              // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.KillThrowable
	// void KillThrowable();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.WasDirectHit
	// void WasDirectHit();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.InstantHit
	// void InstantHit(FHitResult HitResult);                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.Detonate
	// void Detonate();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.TriggerAOE
	// void TriggerAOE(FVector AOELocation);                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.ConfirmDirectHit
	// void ConfirmDirectHit(class AActor*& HitActor, FVector HitLocation, bool HS);                                            // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.EndProjectile
	// void EndProjectile();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.ConfirmAOEHits
	// void ConfirmAOEHits(FVector AOELocation, TArray<AActor*>& HitActors, TArray<FVector>& HitLocations, TArray<ABP_Character_C*>& CharactersToLaunch, TArray<FVector>& LaunchVelocities); // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.MarkProjectileForDestroy
	// void MarkProjectileForDestroy();                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.ExecuteUbergraph_BP_ProjectileBase
	// void ExecuteUbergraph_BP_ProjectileBase(int32_t EntryPoint);                                                             // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Blueprints/Projectiles/BP_ProjectileBase.BP_ProjectileBase_C.OnDirectHit__DelegateSignature
	// void OnDirectHit__DelegateSignature(class AActor* KilledActor);                                                          // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/Projectiles/BP_Bomb.BP_Bomb_C
/// Size: 0x0578 (1400 bytes) (0x000570 - 0x000578) align 16 MaxSize: 0x0578
class ABP_Bomb_C : public ABP_ProjectileBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0570   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_Bomb.BP_Bomb_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Bomb.BP_Bomb_C.ReceiveDestroyed
	// void ReceiveDestroyed();                                                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_Bomb.BP_Bomb_C.ExecuteUbergraph_BP_Bomb
	// void ExecuteUbergraph_BP_Bomb(int32_t EntryPoint);                                                                       // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Projectiles/BP_LauncherRocketProjectile.BP_LauncherRocketProjectile_C
/// Size: 0x0590 (1424 bytes) (0x000570 - 0x000590) align 16 MaxSize: 0x0590
class ABP_LauncherRocketProjectile_C : public ABP_ProjectileBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0570   (0x0008)  
	class UParticleSystemComponent*                    TrailEmitter;                                               // 0x0578   (0x0008)  
	float                                              RocketTrailSize;                                            // 0x0580   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0584   (0x0004)  MISSED
	class UParticleSystem*                             RocketTrailParticle;                                        // 0x0588   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_LauncherRocketProjectile.BP_LauncherRocketProjectile_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_LauncherRocketProjectile.BP_LauncherRocketProjectile_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_LauncherRocketProjectile.BP_LauncherRocketProjectile_C.ReceiveDestroyed
	// void ReceiveDestroyed();                                                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_LauncherRocketProjectile.BP_LauncherRocketProjectile_C.WasDirectHit
	// void WasDirectHit();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_LauncherRocketProjectile.BP_LauncherRocketProjectile_C.EndProjectile
	// void EndProjectile();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_LauncherRocketProjectile.BP_LauncherRocketProjectile_C.ExecuteUbergraph_BP_LauncherRocketProjectile
	// void ExecuteUbergraph_BP_LauncherRocketProjectile(int32_t EntryPoint);                                                   // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Projectiles/BP_VehicleRocketProjectile.BP_VehicleRocketProjectile_C
/// Size: 0x05A8 (1448 bytes) (0x000590 - 0x0005A8) align 16 MaxSize: 0x05A8
class ABP_VehicleRocketProjectile_C : public ABP_LauncherRocketProjectile_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0590   (0x0008)  
	class UAudioComponent*                             S_RocketFlight;                                             // 0x0598   (0x0008)  
	class UParticleSystemComponent*                    TrailEmitter;                                               // 0x05A0   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_VehicleRocketProjectile.BP_VehicleRocketProjectile_C.EndProjectile
	// void EndProjectile();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_VehicleRocketProjectile.BP_VehicleRocketProjectile_C.ExecuteUbergraph_BP_VehicleRocketProjectile
	// void ExecuteUbergraph_BP_VehicleRocketProjectile(int32_t EntryPoint);                                                    // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Projectiles/BP_ThrowableProjectileBase.BP_ThrowableProjectileBase_C
/// Size: 0x0581 (1409 bytes) (0x000570 - 0x000581) align 16 MaxSize: 0x0581
class ABP_ThrowableProjectileBase_C : public ABP_ProjectileBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0570   (0x0008)  
	class UParticleSystemComponent*                    P_ThrowableIndicatorEffect;                                 // 0x0578   (0x0008)  
	TEnumAsByte<E_Teams>                               ThrowableTeam;                                              // 0x0580   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_ThrowableProjectileBase.BP_ThrowableProjectileBase_C.OnRep_ThrowableTeam
	// void OnRep_ThrowableTeam();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ThrowableProjectileBase.BP_ThrowableProjectileBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ThrowableProjectileBase.BP_ThrowableProjectileBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_ThrowableProjectileBase.BP_ThrowableProjectileBase_C.ExecuteUbergraph_BP_ThrowableProjectileBase
	// void ExecuteUbergraph_BP_ThrowableProjectileBase(int32_t EntryPoint);                                                    // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Projectiles/BP_PowderKegProjectile.BP_PowderKegProjectile_C
/// Size: 0x05B4 (1460 bytes) (0x000581 - 0x0005B4) align 16 MaxSize: 0x05B4
class ABP_PowderKegProjectile_C : public ABP_ThrowableProjectileBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x0581   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0588   (0x0008)  
	class UAudioComponent*                             Audio;                                                      // 0x0590   (0x0008)  
	class UParticleSystemComponent*                    Fuse;                                                       // 0x0598   (0x0008)  
	float                                              Timeline_0_NewTrack_0_50E651BD46AC8F86F4BA86BBF0CFD8BC;     // 0x05A0   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Timeline_0__Direction_50E651BD46AC8F86F4BA86BBF0CFD8BC;     // 0x05A4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x05A5   (0x0003)  MISSED
	class UTimelineComponent*                          Timeline;                                                   // 0x05A8   (0x0008)  
	int32_t                                            KegHP;                                                      // 0x05B0   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_PowderKegProjectile.BP_PowderKegProjectile_C.Timeline_0__FinishedFunc
	// void Timeline_0__FinishedFunc();                                                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Projectiles/BP_PowderKegProjectile.BP_PowderKegProjectile_C.Timeline_0__UpdateFunc
	// void Timeline_0__UpdateFunc();                                                                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Projectiles/BP_PowderKegProjectile.BP_PowderKegProjectile_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_PowderKegProjectile.BP_PowderKegProjectile_C.ApplyDamage
	// void ApplyDamage(int32_t DamageAmount, FVector DamageHitLocation, FVector DamageDirection, class APawn* AttackerPawn, class UClass* Debuff, TEnumAsByte<E_DamageTypes> DamageType, int32_t PlayerIndex, bool IsCriticalHit, bool IgnoreTeamProtection, FText SpecialKillMessage, bool ShouldBreakInvisibility, bool IsPiercingDamage, class UClass* ProjectileClass_optional_, class UClass* EquipableClass_optonal_); // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_PowderKegProjectile.BP_PowderKegProjectile_C.MC_HitEffect
	// void MC_HitEffect(FVector Location);                                                                                     // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_PowderKegProjectile.BP_PowderKegProjectile_C.ReceiveDestroyed
	// void ReceiveDestroyed();                                                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_PowderKegProjectile.BP_PowderKegProjectile_C.ExecuteUbergraph_BP_PowderKegProjectile
	// void ExecuteUbergraph_BP_PowderKegProjectile(int32_t EntryPoint);                                                        // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Projectiles/BP_SmallGrenadeAllied.BP_SmallGrenadeAllied_C
/// Size: 0x0581 (1409 bytes) (0x000581 - 0x000581) align 16 MaxSize: 0x0581
class ABP_SmallGrenadeAllied_C : public ABP_ThrowableProjectileBase_C
{ 
public:
};

/// Class /Game/Blueprints/Projectiles/BP_SmallGrenadeAxis.BP_SmallGrenadeAxis_C
/// Size: 0x0581 (1409 bytes) (0x000581 - 0x000581) align 16 MaxSize: 0x0581
class ABP_SmallGrenadeAxis_C : public ABP_SmallGrenadeAllied_C
{ 
public:
};

/// Class /Game/Blueprints/Projectiles/BP_TNTBomb.BP_TNTBomb_C
/// Size: 0x0598 (1432 bytes) (0x000581 - 0x000598) align 16 MaxSize: 0x0598
class ABP_TNTBomb_C : public ABP_ThrowableProjectileBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x0581   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0588   (0x0008)  
	class UAudioComponent*                             ClockTicking;                                               // 0x0590   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_TNTBomb.BP_TNTBomb_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_TNTBomb.BP_TNTBomb_C.ExecuteUbergraph_BP_TNTBomb
	// void ExecuteUbergraph_BP_TNTBomb(int32_t EntryPoint);                                                                    // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapBoard_Base.BP_VehicleSwapBoard_Base_C
/// Size: 0x0269 (617 bytes) (0x000220 - 0x000269) align 8 MaxSize: 0x0269
class ABP_VehicleSwapBoard_Base_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UStaticMeshComponent*                        BillBoard;                                                  // 0x0228   (0x0008)  
	class UChildActorComponent*                        Vehicle2;                                                   // 0x0230   (0x0008)  
	class UChildActorComponent*                        Vehicle1;                                                   // 0x0238   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0240   (0x0008)  
	class ABP_VehicleBase_C*                           VehicleRef_Current_;                                        // 0x0248   (0x0008)  
	TArray<class ABP_VehicleSeat_C*>                   VehicleSeats;                                               // 0x0250   (0x0010)  
	class ABP_VehicleBase_C*                           LastVehicleRef;                                             // 0x0260   (0x0008)  
	bool                                               CanSwap;                                                    // 0x0268   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapBoard_Base.BP_VehicleSwapBoard_Base_C.CanSwapVehicles
	// void CanSwapVehicles(bool& CanSwap);                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapBoard_Base.BP_VehicleSwapBoard_Base_C.OnRep_VehicleInUse
	// void OnRep_VehicleInUse();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapBoard_Base.BP_VehicleSwapBoard_Base_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapBoard_Base.BP_VehicleSwapBoard_Base_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapBoard_Base.BP_VehicleSwapBoard_Base_C.FetchVehicleSeats
	// void FetchVehicleSeats();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_VehicleSwapBoard_Base.BP_VehicleSwapBoard_Base_C.ExecuteUbergraph_BP_VehicleSwapBoard_Base
	// void ExecuteUbergraph_BP_VehicleSwapBoard_Base(int32_t EntryPoint);                                                      // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_P51Poster.BP_P51Poster_C
/// Size: 0x0298 (664 bytes) (0x000298 - 0x000298) align 16 MaxSize: 0x0298
class ABP_P51Poster_C : public ABP_VehicleSwapPoster_C
{ 
public:
};

/// Class /Game/Blueprints/Vehicles/VehicleSwapBoard/BP_BeaufighterPoster.BP_BeaufighterPoster_C
/// Size: 0x0298 (664 bytes) (0x000298 - 0x000298) align 16 MaxSize: 0x0298
class ABP_BeaufighterPoster_C : public ABP_VehicleSwapPoster_C
{ 
public:
};

/// Class /Game/Blueprints/Projectiles/BP_DecalManager.BP_DecalManager_C
/// Size: 0x0240 (576 bytes) (0x000220 - 0x000240) align 8 MaxSize: 0x0240
class ABP_DecalManager_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0228   (0x0008)  
	TArray<class ABP_ImpactDecal_C*>                   Decals;                                                     // 0x0230   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/Projectiles/BP_DecalManager.BP_DecalManager_C.CreateDecal
	// void CreateDecal(class UClass* Class, FTransform Transform);                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Projectiles/BP_DecalManager.BP_DecalManager_C.ExecuteUbergraph_BP_DecalManager
	// void ExecuteUbergraph_BP_DecalManager(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Struct /Game/Blueprints/Projectiles/ST_ProjectileHitRequest.ST_ProjectileHitRequest
/// Size: 0x0019 (25 bytes) (0x000000 - 0x000019) align 8 MaxSize: 0x0019
struct FST_ProjectileHitRequest
{ 
	class AActor*                                      HitActor_8_1457B6A24E2C103DD32393BFE4E3948F;                // 0x0000   (0x0008)  
	int32_t                                            ProjectileID_2_007E9F444026C71522E368B7976C0F81;            // 0x0008   (0x0004)  
	FVector                                            Location_5_099B3CB34D35CA38949BB2B140F1B1AD;                // 0x000C   (0x000C)  
	bool                                               HS_10_3994AADE4D453145E52ED0B1C791C666;                     // 0x0018   (0x0001)  
};

/// Struct /Game/Blueprints/Projectiles/ST_AOEHitRequest.ST_AOEHitRequest
/// Size: 0x0054 (84 bytes) (0x000000 - 0x000054) align 8 MaxSize: 0x0054
struct FST_AOEHitRequest
{ 
	TArray<class AActor*>                              HitActor_11_1457B6A24E2C103DD32393BFE4E3948F;               // 0x0000   (0x0010)  
	TArray<FVector>                                    Location_12_099B3CB34D35CA38949BB2B140F1B1AD;               // 0x0010   (0x0010)  
	int32_t                                            ProjectileID_2_007E9F444026C71522E368B7976C0F81;            // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	TArray<class ABP_Character_C*>                     CharactersToLaunch_17_FDE948CE47B519044A12B7805BC89973;     // 0x0028   (0x0010)  
	TArray<FVector>                                    LaunchVelocities_20_6F092A774D72184B2768058D50F4F536;       // 0x0038   (0x0010)  
	FVector                                            AOELocation_23_162AF2D741B4F38CF355F081F6821FC2;            // 0x0048   (0x000C)  
};

/// Class /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C
/// Size: 0x03D1 (977 bytes) (0x000320 - 0x0003D1) align 8 MaxSize: 0x03D1
class ABP_PlayerState_C : public APlayerState
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0320   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0328   (0x0008)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x0330   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0331   (0x0007)  MISSED
	SDK_UNDEFINED(16,615) /* FMulticastInlineDelegate */ __um(OnEnemyKilled);                                      // 0x0338   (0x0010)  
	int32_t                                            PlayerIndex;                                                // 0x0348   (0x0004)  
	int32_t                                            KillCounter_MultikillAnnouncement_;                         // 0x034C   (0x0004)  
	bool                                               IsHost;                                                     // 0x0350   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0351   (0x0003)  MISSED
	float                                              MultiKillTimer;                                             // 0x0354   (0x0004)  
	FText                                              RecentlyKilledPlayer;                                       // 0x0358   (0x0018)  
	FString                                            CachedUsername;                                             // 0x0370   (0x0010)  
	int32_t                                            FiredProjectileCounter;                                     // 0x0380   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0384   (0x0004)  MISSED
	TArray<class ABP_ProjectileBase_C*>                ServerStoredProjectiles;                                    // 0x0388   (0x0010)  
	TArray<FST_ProjectileHitRequest>                   RequestedHitQueue;                                          // 0x0398   (0x0010)  
	TArray<FST_AOEHitRequest>                          RequestedAOEHitQueue;                                       // 0x03A8   (0x0010)  
	bool                                               Supporter;                                                  // 0x03B8   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x03B9   (0x0007)  MISSED
	SDK_UNDEFINED(16,616) /* FMulticastInlineDelegate */ __um(FinishedStatUpload);                                 // 0x03C0   (0x0010)  
	bool                                               StatsSaved;                                                 // 0x03D0   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.UnregisterProjectile
	// void UnregisterProjectile(class ABP_ProjectileBase_C*& Projectile);                                                      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.ProjectileAOEHit
	// void ProjectileAOEHit(FST_AOEHitRequest HitRequest, bool& Success, int32_t& UsedID);                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.ProjectileDirectHit
	// void ProjectileDirectHit(class AActor* HitActor, FVector HitLocation, int32_t ProjectileID, bool HS, bool& Success, int32_t& UsedID); // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.RegisterProjectile
	// void RegisterProjectile(class ABP_ProjectileBase_C* Projectile);                                                         // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.GetNewProjectileID
	// void GetNewProjectileID(int32_t& ProjectileID);                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.GetSteamID
	// void GetSteamID(FString& SteamID);                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.ValidateUsername
	// void ValidateUsername(FString UserName, bool& IsValid);                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.CacheUsername
	// void CacheUsername(FString UserName);                                                                                    // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.IncreaseKills
	// void IncreaseKills(int32_t Amount);                                                                                      // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.OnCallback_BA1154734500EA7486022981FDC0BF25
	// void OnCallback_BA1154734500EA7486022981FDC0BF25(FLeaderboardFindResult& Data, bool bWasSuccessful);                     // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.OnCallback_BD93632144A9FF8EE2204AB5F95EABCF
	// void OnCallback_BD93632144A9FF8EE2204AB5F95EABCF(FLeaderboardScoresDownloadedForUsers& Data, bool bWasSuccessful);       // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.OnCallback_40B05A2948E2A008DAEADC92E4EF73B4
	// void OnCallback_40B05A2948E2A008DAEADC92E4EF73B4(FLeaderboardScoreUploaded& Data, bool bWasSuccessful);                  // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.OC_DisplayDamageNumbers
	// void OC_DisplayDamageNumbers(FVector HitLocation, int32_t DamageAmount, bool CriticalHit_, class AActor* HitActor, bool IsLow, TEnumAsByte<E_DamageTypes> DamageType, class UClass* EquipableClass_optional_); // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.OC_Kill
	// void OC_Kill(FText KilledEnemyName, bool IsAssist, bool CountAsKill);                                                    // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.OC_PostSpecialActionNotification
	// void OC_PostSpecialActionNotification(FText Message, FLinearColor Color);                                                // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.OC_SaveStatsToSteam
	// void OC_SaveStatsToSteam(FST_PlayerStats Stats);                                                                         // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.OC_ExitToMainMenu
	// void OC_ExitToMainMenu(FString DisconnectErrorCode, bool FastBoot);                                                      // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.ResetKillCounter
	// void ResetKillCounter();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.S_ProjectileHit
	// void S_ProjectileHit(class AActor* HitActor, FVector HitLocation, int32_t ProjectileID, bool HS);                        // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.S_AOEHit
	// void S_AOEHit(TArray<AActor*>& HitActors, TArray<FVector>& HitLocations, int32_t ProjectileID, TArray<ABP_Character_C*>& CharactersToLaunch, TArray<FVector>& LaunchVelocities, FVector AOELocation); // [0x1325ea0] Net|NetReliableNetServer|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.IncrementLB
	// void IncrementLB(int32_t Amount, FString LBName);                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.ParseNextLB
	// void ParseNextLB();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.ExitGame
	// void ExitGame();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.OC_VehicleKill
	// void OC_VehicleKill(class UClass* ProjectileClass);                                                                      // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.ItemDropTrigger
	// void ItemDropTrigger();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.ExecuteUbergraph_BP_PlayerState
	// void ExecuteUbergraph_BP_PlayerState(int32_t EntryPoint);                                                                // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.FinishedStatUpload__DelegateSignature
	// void FinishedStatUpload__DelegateSignature();                                                                            // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Playerstates/BP_PlayerState.BP_PlayerState_C.OnEnemyKilled__DelegateSignature
	// void OnEnemyKilled__DelegateSignature(FText KilledEnemyName, bool IsAssistKill, bool CountAsKill);                       // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/LightingScenarios/BP_NewSky.BP_NewSky_C
/// Size: 0x02B4 (692 bytes) (0x000220 - 0x0002B4) align 8 MaxSize: 0x02B4
class ABP_NewSky_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UDirectionalLightComponent*                  DirectionalLight;                                           // 0x0228   (0x0008)  
	class UStaticMeshComponent*                        SkySphereMesh;                                              // 0x0230   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0238   (0x0008)  
	bool                                               Refresh;                                                    // 0x0240   (0x0001)  
	bool                                               EnableCustomFog;                                            // 0x0241   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0242   (0x0002)  MISSED
	FLinearColor                                       CustomFogColor;                                             // 0x0244   (0x0010)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0254   (0x0004)  MISSED
	class UMaterialInterface*                          SkyTexture;                                                 // 0x0258   (0x0008)  
	float                                              SkyboxHeight;                                               // 0x0260   (0x0004)  
	bool                                               UseSunHaze;                                                 // 0x0264   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0265   (0x0003)  MISSED
	FLinearColor                                       SunHazeColor;                                               // 0x0268   (0x0010)  
	float                                              TODEmissiveness;                                            // 0x0278   (0x0004)  
	bool                                               IsNight;                                                    // 0x027C   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x027D   (0x0003)  MISSED
	FLinearColor                                       LightColor;                                                 // 0x0280   (0x0010)  
	FRotator                                           LightDirection;                                             // 0x0290   (0x000C)  
	float                                              Temperature;                                                // 0x029C   (0x0004)  
	float                                              Intensity;                                                  // 0x02A0   (0x0004)  
	FLinearColor                                       ColorOverlay;                                               // 0x02A4   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/LightingScenarios/BP_NewSky.BP_NewSky_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/LightingScenarios/BP_NewSky.BP_NewSky_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/LightingScenarios/BP_NewSky.BP_NewSky_C.RefreshSkyParameters
	// void RefreshSkyParameters();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/LightingScenarios/BP_NewSky.BP_NewSky_C.LoadShadowBasedLightSettings
	// void LoadShadowBasedLightSettings();                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/LightingScenarios/BP_NewSky.BP_NewSky_C.ExecuteUbergraph_BP_NewSky
	// void ExecuteUbergraph_BP_NewSky(int32_t EntryPoint);                                                                     // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Functions/ExtraSteamCoreProFunctions.ExtraSteamCoreProFunctions_C
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UExtraSteamCoreProFunctions_C : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Game/Blueprints/Functions/ExtraSteamCoreProFunctions.ExtraSteamCoreProFunctions_C.GetExtraSettingsStringFromCurrentSession
	// void GetExtraSettingsStringFromCurrentSession(FString Key, class UObject* __WorldContext, FString& String);              // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/ExtraSteamCoreProFunctions.ExtraSteamCoreProFunctions_C.GetExtraSettingsIntFromCurrentSession
	// void GetExtraSettingsIntFromCurrentSession(FString Key, class UObject* __WorldContext, int32_t& Bool);                   // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/ExtraSteamCoreProFunctions.ExtraSteamCoreProFunctions_C.GetExtraSettingString
	// void GetExtraSettingString(FString Key, FSteamSessionResult& Session, class UObject* __WorldContext, FString& String);   // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/ExtraSteamCoreProFunctions.ExtraSteamCoreProFunctions_C.GetExtraSettingsInt
	// void GetExtraSettingsInt(FString Key, FSteamSessionResult Session, class UObject* __WorldContext, int32_t& Bool);        // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Blueprints/Cameras/BP_MapCam.BP_MapCam_C
/// Size: 0x0298 (664 bytes) (0x000280 - 0x000298) align 8 MaxSize: 0x0298
class ABP_MapCam_C : public APawn
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0280   (0x0008)  
	class UCameraComponent*                            Camera;                                                     // 0x0288   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0290   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Cameras/BP_MapCam.BP_MapCam_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Cameras/BP_MapCam.BP_MapCam_C.ExecuteUbergraph_BP_MapCam
	// void ExecuteUbergraph_BP_MapCam(int32_t EntryPoint);                                                                     // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/BP_MapCenter.BP_MapCenter_C
/// Size: 0x0230 (560 bytes) (0x000220 - 0x000230) align 8 MaxSize: 0x0230
class ABP_MapCenter_C : public AActor
{ 
public:
	class UBillboardComponent*                         BillBoard;                                                  // 0x0220   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0228   (0x0008)  
};

/// Class /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UWidgetFunctions_C : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.SelectClosestSpawnPointToCenter
	// void SelectClosestSpawnPointToCenter(TEnumAsByte<E_Teams> Team, class UObject* __WorldContext, class UW_SpawnSelectPoint_C*& ClosestPoint); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.BlackFadeInAndOut
	// void BlackFadeInAndOut(class UObject* __WorldContext);                                                                   // [0x1325ea0] Static|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.RemoveLoadingScreen
	// void RemoveLoadingScreen(class UObject* __WorldContext);                                                                 // [0x1325ea0] Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.ShowLoadingScreen
	// void ShowLoadingScreen(FText MapName, FText ServerName, class UObject* __WorldContext);                                  // [0x1325ea0] Static|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.GetTeamJoinableStates
	// void GetTeamJoinableStates(class UObject* __WorldContext, bool& CanJoinAllies, bool& CanJoinAxis, int32_t& AlliedPlayers, int32_t& AxisPlayers); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.GetTeamPlayerAmount
	// void GetTeamPlayerAmount(class UObject* __WorldContext, int32_t& AlliedPlayers, int32_t& AxisPlayers);                   // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.GetActivePlayerCount
	// void GetActivePlayerCount(class UObject* __WorldContext, int32_t& PlayerCount);                                          // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.SetWeaponInLoadout
	// void SetWeaponInLoadout(TEnumAsByte<E_Selectables> Selection, int32_t SelectedItemIndex, class UObject* __WorldContext); // [0x1325ea0] Static|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.GetFinalClassName
	// void GetFinalClassName(TEnumAsByte<E_Units> Class, class UObject* __WorldContext, FText& Name);                          // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.GetCrosshairTypeIndex
	// void GetCrosshairTypeIndex(TEnumAsByte<E_CrosshairTypes> Selection, class UObject* __WorldContext, int32_t& Index);      // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.FormatKeybindName
	// FText FormatKeybindName(FText KeybindName, class UObject* __WorldContext);                                               // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.GetCurrencyIcon(Events)
	// void GetCurrencyIcon_Events_(TEnumAsByte<E_CurrencyTypes> Currency, class UObject* __WorldContext, class UTexture2D*& LargeIcon, class UTexture2D*& SmallIcon); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.GetSelectableStatsAsText
	// void GetSelectableStatsAsText(FST_Selectable Selectable, class UObject* __WorldContext, FText& Stats);                   // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.PostSpecialActionNotification
	// void PostSpecialActionNotification(FText Message, FLinearColor Color, FName Tag, FText KilledPlayerUsername, class UObject* __WorldContext); // [0x1325ea0] Static|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.PostGamestateNotification
	// void PostGamestateNotification(FText NotificationMessage, class UTexture2D* NotificationIcon, FLinearColor Color, class UObject* __WorldContext); // [0x1325ea0] Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/WidgetFunctions.WidgetFunctions_C.GetCrosshairStyle
	// void GetCrosshairStyle(class UObject* __WorldContext, FSlateBrush& CrosshairNormal, FSlateBrush& CrosshairHit);          // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Blueprints/Vehicles/ActorRefCountDown.ActorRefCountDown_C
/// Size: 0x00D4 (212 bytes) (0x0000B0 - 0x0000D4) align 8 MaxSize: 0x00D4
class UActorRefCountDown_C : public UActorComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B0   (0x0008)  
	class AActor*                                      Actor;                                                      // 0x00B8   (0x0008)  
	SDK_UNDEFINED(16,617) /* FMulticastInlineDelegate */ __um(CountDownEnded);                                     // 0x00C0   (0x0010)  
	float                                              CountDownTime;                                              // 0x00D0   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/ActorRefCountDown.ActorRefCountDown_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/ActorRefCountDown.ActorRefCountDown_C.CountDownEnd
	// void CountDownEnd();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/ActorRefCountDown.ActorRefCountDown_C.ExecuteUbergraph_ActorRefCountDown
	// void ExecuteUbergraph_ActorRefCountDown(int32_t EntryPoint);                                                             // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Blueprints/Vehicles/ActorRefCountDown.ActorRefCountDown_C.CountDownEnded__DelegateSignature
	// void CountDownEnded__DelegateSignature(class AActor* ActorRef);                                                          // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/PawnDataComponent.PawnDataComponent_C
/// Size: 0x021D (541 bytes) (0x0001F8 - 0x00021D) align 16 MaxSize: 0x021D
class UPawnDataComponent_C : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_8[0x8];                                       // 0x01F8   (0x0008)  MISSED
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x0200   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0201   (0x0007)  MISSED
	SDK_UNDEFINED(16,618) /* FMulticastInlineDelegate */ __um(TeamChanged);                                        // 0x0208   (0x0010)  
	int32_t                                            PlayerIndex;                                                // 0x0218   (0x0004)  
	bool                                               TeamSet;                                                    // 0x021C   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/PawnDataComponent.PawnDataComponent_C.OnRep_Team
	// void OnRep_Team();                                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/PawnDataComponent.PawnDataComponent_C.TeamChanged__DelegateSignature
	// void TeamChanged__DelegateSignature();                                                                                   // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Struct /Game/Blueprints/Structs/ST_PlayerStats.ST_PlayerStats
/// Size: 0x0068 (104 bytes) (0x000000 - 0x000068) align 8 MaxSize: 0x0068
struct FST_PlayerStats
{ 
	FString                                            Username_11_71DD23E54AAF2301D1C8FBB7BF020142;               // 0x0000   (0x0010)  
	int32_t                                            PlayerRank_53_283B917A4ED56611E62414AA11299031;             // 0x0010   (0x0004)  
	int32_t                                            PlayerIndex_12_BA857691428E16262C9A09B6000C837E;            // 0x0014   (0x0004)  
	int32_t                                            TotalKills_28_8B2411AA43440BC058BE0DBE58B713D8;             // 0x0018   (0x0004)  
	int32_t                                            TotalDeaths_29_EB6FF23B4F7137D118746FAF3ED141B4;            // 0x001C   (0x0004)  
	int32_t                                            TotalScore_27_8748313F49BF897E78050D9CBCA554E4;             // 0x0020   (0x0004)  
	TEnumAsByte<E_Teams>                               Team_15_8CB70CB042C78A0D44A55BAEBC456D54;                   // 0x0024   (0x0001)  
	bool                                               IsPlayer_17_6D479119438082EF932EF2AB8070AC8C;               // 0x0025   (0x0001)  
	bool                                               DisconnectedAlsoUsedForInactiveBots_65_BFEA053F4FE754F00122D684459967F2; // 0x0026   (0x0001)  
	bool                                               IsSelf_23_939B634F4024BC00902561B12C59FA01;                 // 0x0027   (0x0001)  
	TEnumAsByte<E_Units>                               PlayerClass_26_D48DC6774EDC301872826DA8F9260DF1;            // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0029   (0x0003)  MISSED
	int32_t                                            AlliedSoldierScore_32_4B2C132847CA069C25F99EBCB828D0C4;     // 0x002C   (0x0004)  
	int32_t                                            AlliedGunnerScore_34_F945500E4DE0B2616B1A36958A85FC27;      // 0x0030   (0x0004)  
	int32_t                                            AlliedCommandoScore_36_79188F514FC3A7442C6F3B8B6737DC8B;    // 0x0034   (0x0004)  
	int32_t                                            AxisSoldierScore_40_B528264F4E91B6282F0DA6AE63082CD7;       // 0x0038   (0x0004)  
	int32_t                                            AxisGunnerScore_41_79E3CA144F7C76842691108AE4413178;        // 0x003C   (0x0004)  
	int32_t                                            AxisCommandoScore_42_CEFB18AB478256CDC90D79AFE9E4C32E;      // 0x0040   (0x0004)  
	int32_t                                            AlliedTankScore_49_00F184FF44E957F44EFA228D8A2D83BA;        // 0x0044   (0x0004)  
	int32_t                                            AxisTankScore_50_D25C1B95411BB7860A42E5A7928A9C2A;          // 0x0048   (0x0004)  
	int32_t                                            AlliedPlaneScore_45_D558A6EC4ADEF583903E9B96683C9F6A;       // 0x004C   (0x0004)  
	int32_t                                            AxisPlaneScore_46_6E9BB49B4CB8338461015E81CB75898A;         // 0x0050   (0x0004)  
	int32_t                                            ManuallyCollectedEventTokens_57_3184A1F942211AF4D8896F90D8B37939; // 0x0054   (0x0004)  
	int32_t                                            AssistKills_60_44D5822D429A6DBB6EF39BAD5B3B0130;            // 0x0058   (0x0004)  
	bool                                               IsAlive_63_D853133641B5D7D6C4E72AA0F3768E4B;                // 0x005C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x005D   (0x0003)  MISSED
	int32_t                                            HealingScore_70_5FA70D6840CEC7F1D65C2D8820A9653D;           // 0x0060   (0x0004)  
	int32_t                                            PVPScore_73_FC40F1374803604DD1F1259AFB103C92;               // 0x0064   (0x0004)  
};

/// Struct /Game/Blueprints/Structs/ST_MapVote.ST_MapVote
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FST_MapVote
{ 
	FString                                            MapName_3_A1C8573249839866F394689B36B5D9D1;                 // 0x0000   (0x0010)  
	TArray<FString>                                    Voters_9_53A78AD347AC166A922CD4BBC68F9F1B;                  // 0x0010   (0x0010)  
};

/// Class /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C
/// Size: 0x04A9 (1193 bytes) (0x000270 - 0x0004A9) align 8 MaxSize: 0x04A9
class ABP_GameStateBase_C : public AGameStateBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0270   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0278   (0x0008)  
	int32_t                                            AlliedControlledObjectives;                                 // 0x0280   (0x0004)  
	int32_t                                            AxisControlledObjectives;                                   // 0x0284   (0x0004)  
	TEnumAsByte<E_Teams>                               VictoriousTeam;                                             // 0x0288   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0289   (0x0003)  MISSED
	float                                              NewGameStartTimer;                                          // 0x028C   (0x0004)  
	bool                                               GameHasEnded;                                               // 0x0290   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0291   (0x0003)  MISSED
	float                                              XPMultiplier;                                               // 0x0294   (0x0004)  
	float                                              EndOfGameNewGameStartTime;                                  // 0x0298   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x029C   (0x0004)  MISSED
	TArray<FST_PlayerStats>                            PlayerStats;                                                // 0x02A0   (0x0010)  
	TEnumAsByte<E_Scenarios>                           ActiveScenario;                                             // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x02B1   (0x0007)  MISSED
	class UW_KillFeed_C*                               KillFeed;                                                   // 0x02B8   (0x0008)  
	bool                                               TODScenarioSet;                                             // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x02C1   (0x0007)  MISSED
	SDK_UNDEFINED(16,619) /* FMulticastInlineDelegate */ __um(ScenarioSet);                                        // 0x02C8   (0x0010)  
	TEnumAsByte<E_AITeamPlayStyles>                    AI_AxisPlayStyle;                                           // 0x02D8   (0x0001)  
	TEnumAsByte<E_AITeamPlayStyles>                    AI_AlliedPlayStyle;                                         // 0x02D9   (0x0001)  
	unsigned char                                      UnknownData05_6[0x2];                                       // 0x02DA   (0x0002)  MISSED
	float                                              Delta_Seconds;                                              // 0x02DC   (0x0004)  
	bool                                               FullAxisSupremacy;                                          // 0x02E0   (0x0001)  
	bool                                               FullAlliedSupremacy;                                        // 0x02E1   (0x0001)  
	unsigned char                                      UnknownData06_6[0x6];                                       // 0x02E2   (0x0006)  MISSED
	class ABP_DecalManager_C*                          DecalManager;                                               // 0x02E8   (0x0008)  
	float                                              AI_DefensivePositionRadius;                                 // 0x02F0   (0x0004)  
	unsigned char                                      UnknownData07_6[0x4];                                       // 0x02F4   (0x0004)  MISSED
	TArray<FName>                                      ShuffledAlliedNames;                                        // 0x02F8   (0x0010)  
	TArray<FName>                                      ShuffledAxisNames;                                          // 0x0308   (0x0010)  
	int32_t                                            AlliedBotSpawnCounter;                                      // 0x0318   (0x0004)  
	int32_t                                            AxisBotSpawnCounter;                                        // 0x031C   (0x0004)  
	TArray<FST_MapVote>                                MapVotes;                                                   // 0x0320   (0x0010)  
	SDK_UNDEFINED(16,620) /* FMulticastInlineDelegate */ __um(MapVotesChanged);                                    // 0x0330   (0x0010)  
	bool                                               EnableBots;                                                 // 0x0340   (0x0001)  
	bool                                               EnableMaxDecalRenderDistance;                               // 0x0341   (0x0001)  
	unsigned char                                      UnknownData08_6[0x6];                                       // 0x0342   (0x0006)  MISSED
	FString                                            ServerName;                                                 // 0x0348   (0x0010)  
	bool                                               EnableBOTBalance;                                           // 0x0358   (0x0001)  
	bool                                               DefendRandomObjectiveOnSupremacy;                           // 0x0359   (0x0001)  
	bool                                               PushTowardsObjectiveDuringCombat;                           // 0x035A   (0x0001)  
	unsigned char                                      UnknownData09_6[0x5];                                       // 0x035B   (0x0005)  MISSED
	class ABP_MapCenter_C*                             MapCenter;                                                  // 0x0360   (0x0008)  
	FString                                            ServerHostName;                                             // 0x0368   (0x0010)  
	TArray<class ABP_SpawnableBase_C*>                 Spawnables_Objectives_;                                     // 0x0378   (0x0010)  
	TArray<class ABP_PlayerState_C*>                   Spectators;                                                 // 0x0388   (0x0010)  
	TArray<class ABP_Character_C*>                     AliveAlliedCharacters;                                      // 0x0398   (0x0010)  
	TArray<class ABP_Character_C*>                     AliveAxisCharacters;                                        // 0x03A8   (0x0010)  
	TArray<class ABP_PlaneBase_C*>                     ActivePlanes;                                               // 0x03B8   (0x0010)  
	bool                                               EnableRespawn;                                              // 0x03C8   (0x0001)  
	unsigned char                                      UnknownData10_6[0x3];                                       // 0x03C9   (0x0003)  MISSED
	int32_t                                            MaxPlayersPerTeam;                                          // 0x03CC   (0x0004)  
	class ABP_PlayerState_C*                           PlayerToVoteKick;                                           // 0x03D0   (0x0008)  
	int32_t                                            VotekickYesCount;                                           // 0x03D8   (0x0004)  
	int32_t                                            VotekickNoCount;                                            // 0x03DC   (0x0004)  
	int32_t                                            VoteKickTimer;                                              // 0x03E0   (0x0004)  
	unsigned char                                      UnknownData11_6[0x4];                                       // 0x03E4   (0x0004)  MISSED
	TArray<class APlayerState*>                        YesVotedPlayers;                                            // 0x03E8   (0x0010)  
	TArray<class APlayerState*>                        NoVotedPlayers;                                             // 0x03F8   (0x0010)  
	SDK_UNDEFINED(16,621) /* FMulticastInlineDelegate */ __um(NewVoteKickStarted);                                 // 0x0408   (0x0010)  
	bool                                               TeamBalanceEnabled;                                         // 0x0418   (0x0001)  
	unsigned char                                      UnknownData12_6[0x7];                                       // 0x0419   (0x0007)  MISSED
	TArray<FText>                                      GameRulesAndWelcomeMessages;                                // 0x0420   (0x0010)  
	TArray<FLinearColor>                               GameRulesAndMessagesColors;                                 // 0x0430   (0x0010)  
	int32_t                                            MaxRecons;                                                  // 0x0440   (0x0004)  
	int32_t                                            MaxHeavies;                                                 // 0x0444   (0x0004)  
	int32_t                                            MaxTroopers;                                                // 0x0448   (0x0004)  
	unsigned char                                      UnknownData13_6[0x4];                                       // 0x044C   (0x0004)  MISSED
	FText                                              RulesAndWelcomeMessages;                                    // 0x0450   (0x0018)  
	int32_t                                            VotedMapIndex;                                              // 0x0468   (0x0004)  
	unsigned char                                      UnknownData14_6[0x4];                                       // 0x046C   (0x0004)  MISSED
	TArray<class ABP_BaseController_C*>                Supporters;                                                 // 0x0470   (0x0010)  
	int32_t                                            SupporterAmount;                                            // 0x0480   (0x0004)  
	unsigned char                                      UnknownData15_6[0x4];                                       // 0x0484   (0x0004)  MISSED
	class UAudioComponent*                             CaptureAnnouncerSound;                                      // 0x0488   (0x0008)  
	class UAudioComponent*                             CaptureMusicSound;                                          // 0x0490   (0x0008)  
	FString                                            RandomLightingScenario;                                     // 0x0498   (0x0010)  
	bool                                               ServerUsesPassword;                                         // 0x04A8   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetAmountOfReconsForTeam
	// void GetAmountOfReconsForTeam(TEnumAsByte<E_Teams> Team, int32_t& ReconAmount);                                          // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.OnRep_RandomLightingScenario
	// void OnRep_RandomLightingScenario();                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.ProcessScoreAddition
	// void ProcessScoreAddition(int32_t ScoreAmount, int32_t Index, TEnumAsByte<E_Units> _IfVehicle_WhatType, bool AddToTotalScore, bool PVPScore); // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.UnregisterSupporter
	// void UnregisterSupporter(class ABP_BaseController_C*& Controller);                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.RegisterSupporter
	// void RegisterSupporter(class ABP_BaseController_C*& ControllerRef);                                                      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.CleanUpSpectatorReferenceArray
	// void CleanUpSpectatorReferenceArray();                                                                                   // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.OnRep_PlayerToVoteKick
	// void OnRep_PlayerToVoteKick();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.PermaBanPlayer
	// void PermaBanPlayer(class APlayerState* PlayerState, FString DisconnectErrorCode);                                       // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.TempBanPlayer
	// void TempBanPlayer(class APlayerState* PlayerState, FString DisconnectErrorCode);                                        // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.AddPlayerHealScore
	// void AddPlayerHealScore(int32_t PlayerIndex, int32_t HealScoreToAdd);                                                    // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.SetPlayerAliveStatus
	// void SetPlayerAliveStatus(int32_t PlayerIndex, bool IsAlive);                                                            // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.RegisterNewPlane
	// void RegisterNewPlane(class ABP_PlaneBase_C* Plane);                                                                     // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.RemoveSpectator
	// void RemoveSpectator(class ABP_PlayerState_C*& PlayerState);                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.AddSpectator
	// void AddSpectator(class ABP_PlayerState_C*& PlayerState);                                                                // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.SpawnLandingCraft
	// void SpawnLandingCraft(FTransform SpawnTransform, bool AI_Controlled, TEnumAsByte<E_Teams> Team, class ABP_LandingCraft_C*& LandingCraft); // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetNextScenario
	// void GetNextScenario(TEnumAsByte<E_Scenarios> CurrentScenario, TEnumAsByte<E_Scenarios>& NextScenario);                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.IncreaseEventToken
	// void IncreaseEventToken(int32_t PlayerIndex);                                                                            // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetPlayerWithHighestHealScore
	// void GetPlayerWithHighestHealScore(int32_t& PlayerIndex, bool& NoScore);                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.PermaRemoveAIControlledVehicles
	// void PermaRemoveAIControlledVehicles();                                                                                  // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.OnRep_MapVotes
	// void OnRep_MapVotes();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetVotesForMap
	// void GetVotesForMap(FString Map, int32_t& MapVotes);                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.AddMapVote
	// void AddMapVote(FString Map, FString VoterName);                                                                         // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetVotedForMap
	// void GetVotedForMap(FString& Map);                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetPlayerWithMostPlaneScore
	// void GetPlayerWithMostPlaneScore(int32_t& PlayerIndex, bool& NoScore);                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetPlayerWithMostTankScore
	// void GetPlayerWithMostTankScore(int32_t& PlayerIndex, bool& NoScore);                                                    // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetPlayerWithMostKills
	// void GetPlayerWithMostKills(int32_t& PlayerIndex);                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetPlayerWithHighestScore
	// void GetPlayerWithHighestScore(int32_t& PlayerIndex);                                                                    // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.UpdatePlayerClass
	// void UpdatePlayerClass(int32_t PlayerIndex, TEnumAsByte<E_Units> PlayerClass);                                           // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.DoesTeamHaveAllObjectives?
	// void DoesTeamHaveAllObjectives_(TEnumAsByte<E_Teams> Team, bool& HasAllObjectives);                                      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.SetScenario
	// void SetScenario();                                                                                                      // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetRandomAvailableFlag
	// void GetRandomAvailableFlag(TEnumAsByte<E_Teams> Team, class ABP_Flag_C*& Flag);                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.RemoveLowestScoreBotFromTeam
	// void RemoveLowestScoreBotFromTeam(TEnumAsByte<E_Teams> Team);                                                            // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetTeamBalance
	// void GetTeamBalance(int32_t& AlliedCharacters, int32_t& AxisCharacters);                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.OnRep_ActiveScenario
	// void OnRep_ActiveScenario();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.UpdatePlayerTeam
	// void UpdatePlayerTeam(int32_t PlayerIndex, TEnumAsByte<E_Teams> Team);                                                   // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.AddPlayerScore
	// void AddPlayerScore(int32_t ScoreAmount, int32_t PlayerIndex, TEnumAsByte<E_Units> IfVehicle_WhatType_, bool IsPVPScore); // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.AddPlayerDeath
	// void AddPlayerDeath(int32_t PlayerIndex);                                                                                // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.AddPlayerKill
	// void AddPlayerKill(int32_t KillerPlayerIndex, int32_t VictimPlayerIndex, bool AIVehicle, FString AIVehicleName, TEnumAsByte<E_Teams> AIVehicleTeam, bool IsAssistKill); // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.RemoveAliveCharacter
	// void RemoveAliveCharacter(class ABP_Character_C*& Character, TEnumAsByte<E_Teams> Team);                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.AddAliveCharacter
	// void AddAliveCharacter(class ABP_Character_C*& Character, TEnumAsByte<E_Teams> Team);                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.OnRep_VictoriousTeam
	// void OnRep_VictoriousTeam();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.EndGame
	// void EndGame(TEnumAsByte<E_Teams> VictoriousTeam);                                                                       // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.GetControlledObjectivesFromTeam
	// void GetControlledObjectivesFromTeam(TEnumAsByte<E_Teams> Team, int32_t& ObjectiveCount);                                // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.RegisterSpawnable(Objective)
	// void RegisterSpawnable_Objective_(class ABP_SpawnableBase_C*& Objective);                                                // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.UnregisterCharacter
	// void UnregisterCharacter(int32_t PlayerIndex);                                                                           // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.RegisterCharacter
	// void RegisterCharacter(class ABP_Character_C* Character, TEnumAsByte<E_Teams> Team);                                     // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.SpawnAICharacter
	// void SpawnAICharacter(int32_t Amount, TEnumAsByte<E_Teams> Team, bool IsNewCharacter, class ABP_Character_C* OldCharacterRef); // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.RespawnActor
	// void RespawnActor(FTransform SpawnTransform, class UClass* Class, bool AIControlled, TEnumAsByte<E_Teams> Team, TEnumAsByte<E_VehicleSkinThemes> VehicleSkinTheme, class ABP_VehicleSwapBoard_Base_C* VehicleSwapBoardRef, bool UseAIWhenNotControlledByPlayer); // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.OnKill
	// void OnKill(TEnumAsByte<E_Teams> Team);                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.OnGameHasEnded
	// void OnGameHasEnded();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.MC_ShareChatMessage
	// void MC_ShareChatMessage(FText UserName, FText Message, bool SpecialMessage, TEnumAsByte<E_Teams> Team);                 // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.MC_KillFeedAdd
	// void MC_KillFeedAdd(FST_PlayerStats KillerStats, FST_PlayerStats VictimStats);                                           // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.UpdateSky
	// void UpdateSky();                                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.StartVoteKick
	// void StartVoteKick(class ABP_PlayerState_C* PlayerToVoteKick, int32_t VoteKickTimer);                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.CastVote
	// void CastVote(bool Yes, class APlayerState*& PlayerState);                                                               // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.AnnounceSoundEnd
	// void AnnounceSoundEnd();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.AnnounceObjectiveCapture
	// void AnnounceObjectiveCapture(TEnumAsByte<E_Teams> Team);                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.LoadLightingScenarioLevel
	// void LoadLightingScenarioLevel();                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.ExecuteUbergraph_BP_GameStateBase
	// void ExecuteUbergraph_BP_GameStateBase(int32_t EntryPoint);                                                              // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.NewVoteKickStarted__DelegateSignature
	// void NewVoteKickStarted__DelegateSignature();                                                                            // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.MapVotesChanged__DelegateSignature
	// void MapVotesChanged__DelegateSignature();                                                                               // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameStateBase.BP_GameStateBase_C.ScenarioSet__DelegateSignature
	// void ScenarioSet__DelegateSignature();                                                                                   // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/Gamestates/BP_GameState_Elimination.BP_GameState_Elimination_C
/// Size: 0x04BC (1212 bytes) (0x0004A9 - 0x0004BC) align 8 MaxSize: 0x04BC
class ABP_GameState_Elimination_C : public ABP_GameStateBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x04A9   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x04B0   (0x0008)  
	int32_t                                            RoundTimer_InSeconds_;                                      // 0x04B8   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Gamestates/BP_GameState_Elimination.BP_GameState_Elimination_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameState_Elimination.BP_GameState_Elimination_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameState_Elimination.BP_GameState_Elimination_C.StartNewRound
	// void StartNewRound();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameState_Elimination.BP_GameState_Elimination_C.ExecuteUbergraph_BP_GameState_Elimination
	// void ExecuteUbergraph_BP_GameState_Elimination(int32_t EntryPoint);                                                      // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Gamestates/BP_Gamestate_DualRocket.BP_Gamestate_DualRocket_C
/// Size: 0x04E8 (1256 bytes) (0x0004A9 - 0x0004E8) align 8 MaxSize: 0x04E8
class ABP_Gamestate_DualRocket_C : public ABP_GameStateBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x04A9   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x04B0   (0x0008)  
	class ABP_Rocket_C*                                RocketRef;                                                  // 0x04B8   (0x0008)  
	int32_t                                            AxisTimer;                                                  // 0x04C0   (0x0004)  
	int32_t                                            AlliedTimer;                                                // 0x04C4   (0x0004)  
	int32_t                                            MaxTeamTimerAmount;                                         // 0x04C8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x04CC   (0x0004)  MISSED
	TArray<class ABP_Rocket_C*>                        Rockets;                                                    // 0x04D0   (0x0010)  
	int32_t                                            AlliedTimeDepletionAmount;                                  // 0x04E0   (0x0004)  
	int32_t                                            AxisTimeDepletionAmount;                                    // 0x04E4   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Gamestates/BP_Gamestate_DualRocket.BP_Gamestate_DualRocket_C.ReduceTickets
	// void ReduceTickets(TEnumAsByte<E_Teams> Team, int32_t Amount);                                                           // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_Gamestate_DualRocket.BP_Gamestate_DualRocket_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_Gamestate_DualRocket.BP_Gamestate_DualRocket_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_Gamestate_DualRocket.BP_Gamestate_DualRocket_C.ExecuteUbergraph_BP_Gamestate_DualRocket
	// void ExecuteUbergraph_BP_Gamestate_DualRocket(int32_t EntryPoint);                                                       // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Gamestates/BP_GameState_Conquest.BP_GameState_Conquest_C
/// Size: 0x04D8 (1240 bytes) (0x0004A9 - 0x0004D8) align 8 MaxSize: 0x04D8
class ABP_GameState_Conquest_C : public ABP_GameStateBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x04A9   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x04B0   (0x0008)  
	int32_t                                            AlliedTickets;                                              // 0x04B8   (0x0004)  
	int32_t                                            AxisTickets;                                                // 0x04BC   (0x0004)  
	int32_t                                            MaxTeamTicketAmount;                                        // 0x04C0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x04C4   (0x0004)  MISSED
	class UAudioComponent*                             CaptureAnnouncerSound;                                      // 0x04C8   (0x0008)  
	class UAudioComponent*                             CaptureMusicSound;                                          // 0x04D0   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Gamestates/BP_GameState_Conquest.BP_GameState_Conquest_C.ReduceTickets
	// void ReduceTickets(TEnumAsByte<E_Teams> Team, int32_t Amount);                                                           // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameState_Conquest.BP_GameState_Conquest_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameState_Conquest.BP_GameState_Conquest_C.OnKill
	// void OnKill(TEnumAsByte<E_Teams> Team);                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_GameState_Conquest.BP_GameState_Conquest_C.ExecuteUbergraph_BP_GameState_Conquest
	// void ExecuteUbergraph_BP_GameState_Conquest(int32_t EntryPoint);                                                         // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Gamestates/BP_Gamestate_CaptureAndHold.BP_Gamestate_CaptureAndHold_C
/// Size: 0x04E1 (1249 bytes) (0x0004A9 - 0x0004E1) align 8 MaxSize: 0x04E1
class ABP_Gamestate_CaptureAndHold_C : public ABP_GameStateBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x04A9   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x04B0   (0x0008)  
	class ABP_CaptureAndHoldObjectiveBase_C*           ObjectiveRef;                                               // 0x04B8   (0x0008)  
	int32_t                                            AxisTimer;                                                  // 0x04C0   (0x0004)  
	int32_t                                            AlliedTimer;                                                // 0x04C4   (0x0004)  
	int32_t                                            MaxTeamTimerAmount;                                         // 0x04C8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x04CC   (0x0004)  MISSED
	class UAudioComponent*                             CaptureAnnouncerSound;                                      // 0x04D0   (0x0008)  
	class UAudioComponent*                             CaptureMusicSound;                                          // 0x04D8   (0x0008)  
	bool                                               UseAltSpawns;                                               // 0x04E0   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Gamestates/BP_Gamestate_CaptureAndHold.BP_Gamestate_CaptureAndHold_C.ReduceTickets
	// void ReduceTickets(TEnumAsByte<E_Teams> Team, int32_t Amount);                                                           // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_Gamestate_CaptureAndHold.BP_Gamestate_CaptureAndHold_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_Gamestate_CaptureAndHold.BP_Gamestate_CaptureAndHold_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Gamestates/BP_Gamestate_CaptureAndHold.BP_Gamestate_CaptureAndHold_C.ExecuteUbergraph_BP_Gamestate_CaptureAndHold
	// void ExecuteUbergraph_BP_Gamestate_CaptureAndHold(int32_t EntryPoint);                                                   // [0x1325ea0] Final|HasDefaults    
};

/// Struct /Game/Blueprints/Gamemodes/ST_UserIDBanCheck.ST_UserIDBanCheck
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FST_UserIDBanCheck
{ 
	FString                                            UserID_4_0FFE6D2D4F7D29F9607CEB8559ACE1A5;                  // 0x0000   (0x0010)  
	class AController*                                 ControllerRef_6_F897C4AA4B87B714A5206FA9E3B6231B;           // 0x0010   (0x0008)  
};

/// Class /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C
/// Size: 0x0334 (820 bytes) (0x0002C0 - 0x000334) align 8 MaxSize: 0x0334
class ABP_GameModeBase_C : public AGameModeBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02C0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C8   (0x0008)  
	TArray<FSessionPropertyKeyPair>                    LastFetchedExtraSessionSettings;                            // 0x02D0   (0x0010)  
	int32_t                                            ConnectedPlayerAmount;                                      // 0x02E0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02E4   (0x0004)  MISSED
	TArray<FST_UserIDBanCheck>                         ToBeBanCheckedIDs;                                          // 0x02E8   (0x0010)  
	TArray<FString>                                    LatestCommunityBanList;                                     // 0x02F8   (0x0010)  
	TArray<FString>                                    LatestCommunityStatBanList;                                 // 0x0308   (0x0010)  
	bool                                               BanListReady;                                               // 0x0318   (0x0001)  
	bool                                               StatBanListReady;                                           // 0x0319   (0x0001)  
	bool                                               UsesPassword;                                               // 0x031A   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x031B   (0x0005)  MISSED
	TArray<class AController*>                         ConnectedControllers;                                       // 0x0320   (0x0010)  
	int32_t                                            MaxPlayers;                                                 // 0x0330   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.CheckUserSteamLevel
	// void CheckUserSteamLevel();                                                                                              // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.CheckIfPlayerIsBannedOnHost
	// void CheckIfPlayerIsBannedOnHost(FString UniqueUserID, class AController* Player);                                       // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.OnCallback_51E0242441E539B2A26CA696B1B5033B
	// void OnCallback_51E0242441E539B2A26CA696B1B5033B();                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.OnCallback_04A00BC149EE18F59439E3BFA5612CA0
	// void OnCallback_04A00BC149EE18F59439E3BFA5612CA0();                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.K2_OnLogout
	// void K2_OnLogout(class AController* ExitingController);                                                                  // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.K2_PostLogin
	// void K2_PostLogin(class APlayerController* NewPlayer);                                                                   // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.UpdateSessionInt
	// void UpdateSessionInt(FString PropertyKey, int32_t Value);                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.UpdateSessionString
	// void UpdateSessionString(FString PropertyKey, FString StringValue);                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.CheckIfPlayerIsCommunityBanned
	// void CheckIfPlayerIsCommunityBanned();                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.BanEnforcePlayer
	// void BanEnforcePlayer(class AController* Player);                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.FetchLatestBanLists
	// void FetchLatestBanLists();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.BanListFetched
	// void BanListFetched(class UVaRestRequestJSON* Request);                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.StatBanListFetched
	// void StatBanListFetched(class UVaRestRequestJSON* Request);                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.BootPlayer
	// void BootPlayer(class AController* Player, FString DisconnectErrorCode, bool FastBoot);                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Gamemodes/BP_GameModeBase.BP_GameModeBase_C.ExecuteUbergraph_BP_GameModeBase
	// void ExecuteUbergraph_BP_GameModeBase(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Struct /Game/Blueprints/Structs/ST_UnitProgress.ST_UnitProgress
/// Size: 0x0014 (20 bytes) (0x000000 - 0x000014) align 8 MaxSize: 0x0014
struct FST_UnitProgress
{ 
	FString                                            UnitAPIName_6_48EAEE4E4461D6D6AAA02F98C3073822;             // 0x0000   (0x0010)  
	int32_t                                            Xp_11_D588E55147AF9D52BAB24FBE524C62BA;                     // 0x0010   (0x0004)  
};

/// Struct /Game/Blueprints/Structs/ST_EventProgress.ST_EventProgress
/// Size: 0x0004 (4 bytes) (0x000000 - 0x000004) align 4 MaxSize: 0x0004
struct FST_EventProgress
{ 
	int32_t                                            Pumpkins_2_904192FD49275DECAE90A5B56DB4B5EF;                // 0x0000   (0x0004)  
};

/// Struct /Game/Blueprints/CosmeticItems/ST_TokenAmount.ST_TokenAmount
/// Size: 0x0014 (20 bytes) (0x000000 - 0x000014) align 8 MaxSize: 0x0014
struct FST_TokenAmount
{ 
	FDataTableRowHandle                                TokenEvent_7_0EDE68B147468AF2A2C375896D00F5F0;              // 0x0000   (0x0010)  
	int32_t                                            TokenAmount_5_1ED1664847A4E74FCB69008C789267FA;             // 0x0010   (0x0004)  
};

/// Class /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C
/// Size: 0x063C (1596 bytes) (0x000570 - 0x00063C) align 8 MaxSize: 0x063C
class ABP_BaseController_C : public AClientAuthoritativePlayerController
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0570   (0x0008)  
	bool                                               bStatsReady;                                                // 0x0578   (0x0001)  
	bool                                               bSteamInventoryReady;                                       // 0x0579   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x057A   (0x0006)  MISSED
	TArray<FST_UnitProgress>                           UnitProgress;                                               // 0x0580   (0x0010)  
	SDK_UNDEFINED(16,622) /* FMulticastInlineDelegate */ __um(StatsRefreshed);                                     // 0x0590   (0x0010)  
	FST_EventProgress                                  EventProgess;                                               // 0x05A0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x05A4   (0x0004)  MISSED
	SDK_UNDEFINED(16,623) /* FMulticastInlineDelegate */ __um(SteamInventoryRefreshed);                            // 0x05A8   (0x0010)  
	int32_t                                            Token_Pumpkins;                                             // 0x05B8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x05BC   (0x0004)  MISSED
	SDK_UNDEFINED(16,624) /* FMulticastInlineDelegate */ __um(ChestCrafted);                                       // 0x05C0   (0x0010)  
	class UW_SteamProcessingPopup_C*                   SteamProcessPopupRef;                                       // 0x05D0   (0x0008)  
	SDK_UNDEFINED(16,625) /* FMulticastInlineDelegate */ __um(ChestOpened);                                        // 0x05D8   (0x0010)  
	class APostProcessVolume*                          PostProcessVolume;                                          // 0x05E8   (0x0008)  
	bool                                               DLC_Supporter;                                              // 0x05F0   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x05F1   (0x0007)  MISSED
	TArray<FSteamItemDetails>                          SteamInventoryPro;                                          // 0x05F8   (0x0010)  
	FSteamInventoryResult                              LastInventoryHandlePro;                                     // 0x0608   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x060C   (0x0004)  MISSED
	TArray<FSteamItemDetails>                          LatestItems;                                                // 0x0610   (0x0010)  
	TArray<FST_TokenAmount>                            EventTokens;                                                // 0x0620   (0x0010)  
	FTimerHandle                                       SteamRefreshTimerHandler;                                   // 0x0630   (0x0008)  
	int32_t                                            CoinAmount;                                                 // 0x0638   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.GetDropType
	// void GetDropType(FSteamItemDef& SteamItemDef);                                                                           // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.GetChestAmount
	// void GetChestAmount(int32_t& ChestAmount);                                                                               // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.ConsolidateItemsOfID
	// void ConsolidateItemsOfID(int32_t ID);                                                                                   // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.CheckLocalSupporterDLCState
	// void CheckLocalSupporterDLCState(bool& isSupporter);                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.InitOptions
	// void InitOptions();                                                                                                      // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.ShowSteamProcessPopup
	// void ShowSteamProcessPopup(FText Message);                                                                               // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.UpdateInventoryWithLatestResult
	// void UpdateInventoryWithLatestResult(TArray<FSteamItemDetails>& ResultArray);                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.GetItemInstanceID
	// void GetItemInstanceID(int32_t ID, FSteamItemInstanceID& InstanceID);                                                    // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.Get Stacked Item ID Amount
	// void GetStackedItemIDAmount(int32_t ItemId, int32_t& Amount);                                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.InpActEvt_I_K2Node_InputKeyEvent
	// void InpActEvt_I_K2Node_InputKeyEvent(FKey Key);                                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.GetStats
	// void GetStats();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.RequestStats
	// void RequestStats();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.TriggerItemDrop
	// void TriggerItemDrop();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.CraftChest
	// void CraftChest(int32_t Bundle, int32_t MaterialID, int32_t MaterialQuantity, TEnumAsByte<E_ChestTypes> ChestType);      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.OpenChest
	// void OpenChest(int32_t Generator, int32_t ChestID);                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.RefreshCachedSteamInventory
	// void RefreshCachedSteamInventory();                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.RefreshInventoryFromResult
	// void RefreshInventoryFromResult(FSteamInventoryResult ResultHandle);                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.S_ParseSupporterDLCState
	// void S_ParseSupporterDLCState();                                                                                         // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.ReceiveDestroyed
	// void ReceiveDestroyed();                                                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.ForceStackItems
	// void ForceStackItems();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.StatsReady
	// void StatsReady();                                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.ReimburseOldChests
	// void ReimburseOldChests(int32_t OldChestReimburseBundle, int32_t OldChestID);                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.ExecuteUbergraph_BP_BaseController
	// void ExecuteUbergraph_BP_BaseController(int32_t EntryPoint);                                                             // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.ChestOpened__DelegateSignature
	// void ChestOpened__DelegateSignature();                                                                                   // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.ChestCrafted__DelegateSignature
	// void ChestCrafted__DelegateSignature(TEnumAsByte<E_ChestTypes> ChestType);                                               // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.SteamInventoryRefreshed__DelegateSignature
	// void SteamInventoryRefreshed__DelegateSignature();                                                                       // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_BaseController.BP_BaseController_C.StatsRefreshed__DelegateSignature
	// void StatsRefreshed__DelegateSignature();                                                                                // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C
/// Size: 0x07B0 (1968 bytes) (0x00063C - 0x0007B0) align 8 MaxSize: 0x07B0
class ABP_MainMenuController_C : public ABP_BaseController_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x063C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0640   (0x0008)  
	class ABP_Character_C*                             CharacterRef;                                               // 0x0648   (0x0008)  
	int32_t                                            Level;                                                      // 0x0650   (0x0004)  
	bool                                               LMBPressed;                                                 // 0x0654   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0655   (0x0003)  MISSED
	class UW_MainMenu_C*                               MainMenuWidget;                                             // 0x0658   (0x0008)  
	bool                                               ShiftPressed;                                               // 0x0660   (0x0001)  
	bool                                               CommaPressed;                                               // 0x0661   (0x0001)  
	unsigned char                                      UnknownData02_6[0x6];                                       // 0x0662   (0x0006)  MISSED
	FBlueprintSessionResult                            SessionToJoin;                                              // 0x0668   (0x0108)  
	FString                                            SessionJoinFailureReason;                                   // 0x0770   (0x0010)  
	FString                                            SessionPasswordToUse;                                       // 0x0780   (0x0010)  
	class AActor*                                      EquipCam;                                                   // 0x0790   (0x0008)  
	bool                                               ViewMannequinFace;                                          // 0x0798   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0799   (0x0007)  MISSED
	class AActor*                                      EquipCamBodyLoc;                                            // 0x07A0   (0x0008)  
	class AActor*                                      EquipCamFaceLoc;                                            // 0x07A8   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.InpActEvt_L_K2Node_InputKeyEvent
	// void InpActEvt_L_K2Node_InputKeyEvent(FKey Key);                                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent
	// void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent(FKey Key);                                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.InpActEvt_LeftShift_K2Node_InputKeyEvent
	// void InpActEvt_LeftShift_K2Node_InputKeyEvent(FKey Key);                                                                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.InpActEvt_Comma_K2Node_InputKeyEvent
	// void InpActEvt_Comma_K2Node_InputKeyEvent(FKey Key);                                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.InpActEvt_Up_K2Node_InputKeyEvent
	// void InpActEvt_Up_K2Node_InputKeyEvent(FKey Key);                                                                        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.InpActEvt_Down_K2Node_InputKeyEvent
	// void InpActEvt_Down_K2Node_InputKeyEvent(FKey Key);                                                                      // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.OnFailure_7533E10741BEB90CC30BFBA5C61786C6
	// void OnFailure_7533E10741BEB90CC30BFBA5C61786C6();                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.OnSuccess_7533E10741BEB90CC30BFBA5C61786C6
	// void OnSuccess_7533E10741BEB90CC30BFBA5C61786C6();                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.OnFailure_90CFDAAF4E6B5F0ABB74ABAC49A70155
	// void OnFailure_90CFDAAF4E6B5F0ABB74ABAC49A70155(FString JoinFailReason);                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.OnSuccess_90CFDAAF4E6B5F0ABB74ABAC49A70155
	// void OnSuccess_90CFDAAF4E6B5F0ABB74ABAC49A70155(FString JoinFailReason);                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent
	// void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent(FKey Key);                                                             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent
	// void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent(FKey Key);                                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.HostGame
	// void HostGame(FString ServerName, FString Password_Optional_, int32_t MapIndex, int32_t BotAmount, int32_t TicketAmount, float AIDifficulty, bool EnableTeamBalance, int32_t MaxRecons, int32_t MaxTroopers, int32_t MaxHeavies, int32_t MaxPlayers); // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.JoinInviteSession
	// void JoinInviteSession(bool bWasSuccessful, int32_t LocalPlayerNum, FString InvitedBy, FBlueprintSessionResult& Session); // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.JoinGameSession
	// void JoinGameSession(FBlueprintSessionResult BPSession);                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.StatsReady
	// void StatsReady();                                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_MainMenuController.BP_MainMenuController_C.ExecuteUbergraph_BP_MainMenuController
	// void ExecuteUbergraph_BP_MainMenuController(int32_t EntryPoint);                                                         // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Characters/BP_BuffDebuffBase.BP_BuffDebuffBase_C
/// Size: 0x0268 (616 bytes) (0x000220 - 0x000268) align 8 MaxSize: 0x0268
class ABP_BuffDebuffBase_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0228   (0x0008)  
	class ABP_Character_C*                             Character;                                                  // 0x0230   (0x0008)  
	class APawn*                                       Attacker;                                                   // 0x0238   (0x0008)  
	class APawn*                                       BuffApplier;                                                // 0x0240   (0x0008)  
	class ABP_SkillBase_C*                             LinkedSkill_Optional_;                                      // 0x0248   (0x0008)  
	float                                              BuffScaler;                                                 // 0x0250   (0x0004)  
	bool                                               IsDebuff_;                                                  // 0x0254   (0x0001)  
	bool                                               MakeVulnerable;                                             // 0x0255   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0256   (0x0002)  MISSED
	SDK_UNDEFINED(16,626) /* FMulticastInlineDelegate */ __um(BuffEnded);                                          // 0x0258   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/Characters/BP_BuffDebuffBase.BP_BuffDebuffBase_C.OnRep_Character
	// void OnRep_Character();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_BuffDebuffBase.BP_BuffDebuffBase_C.OnRep_BuffScaler
	// void OnRep_BuffScaler();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_BuffDebuffBase.BP_BuffDebuffBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_BuffDebuffBase.BP_BuffDebuffBase_C.RemoveBuff
	// void RemoveBuff();                                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_BuffDebuffBase.BP_BuffDebuffBase_C.Refresh
	// void Refresh();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_BuffDebuffBase.BP_BuffDebuffBase_C.BuffScalerRepNotify
	// void BuffScalerRepNotify();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_BuffDebuffBase.BP_BuffDebuffBase_C.EndBuff
	// void EndBuff();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_BuffDebuffBase.BP_BuffDebuffBase_C.CharacterSet
	// void CharacterSet();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_BuffDebuffBase.BP_BuffDebuffBase_C.ExecuteUbergraph_BP_BuffDebuffBase
	// void ExecuteUbergraph_BP_BuffDebuffBase(int32_t EntryPoint);                                                             // [0x1325ea0] Final                
	// Function /Game/Blueprints/Characters/BP_BuffDebuffBase.BP_BuffDebuffBase_C.BuffEnded__DelegateSignature
	// void BuffEnded__DelegateSignature();                                                                                     // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/Skills/BP_Shield.BP_Shield_C
/// Size: 0x02E1 (737 bytes) (0x000268 - 0x0002E1) align 8 MaxSize: 0x02E1
class ABP_Shield_C : public ABP_BuffDebuffBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0268   (0x0008)  
	class UPointLightComponent*                        PointLight3;                                                // 0x0270   (0x0008)  
	class UPointLightComponent*                        PointLight2;                                                // 0x0278   (0x0008)  
	class UPointLightComponent*                        PointLight1;                                                // 0x0280   (0x0008)  
	class UPointLightComponent*                        PointLight;                                                 // 0x0288   (0x0008)  
	class UStaticMeshComponent*                        Shield;                                                     // 0x0290   (0x0008)  
	float                                              Appear_NewTrack_1_5B266732424204837AE389B7F2A44323;         // 0x0298   (0x0004)  
	float                                              Appear_NewTrack_0_5B266732424204837AE389B7F2A44323;         // 0x029C   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Appear__Direction_5B266732424204837AE389B7F2A44323;         // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02A1   (0x0007)  MISSED
	class UTimelineComponent*                          Appear;                                                     // 0x02A8   (0x0008)  
	float                                              Shatter_NewTrack_1_A7436F7D41F9B544D844EAB7C3301E76;        // 0x02B0   (0x0004)  
	float                                              Shatter_NewTrack_0_A7436F7D41F9B544D844EAB7C3301E76;        // 0x02B4   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Shatter__Direction_A7436F7D41F9B544D844EAB7C3301E76;        // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02B9   (0x0007)  MISSED
	class UTimelineComponent*                          Shatter;                                                    // 0x02C0   (0x0008)  
	int32_t                                            ShieldHP;                                                   // 0x02C8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02CC   (0x0004)  MISSED
	class UMaterialInstanceDynamic*                    ShieldMID;                                                  // 0x02D0   (0x0008)  
	class UMaterialInstanceDynamic*                    ShieldMeshMID;                                              // 0x02D8   (0x0008)  
	bool                                               IsSmallerShield;                                            // 0x02E0   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.OnRep_IsSmallerShield
	// void OnRep_IsSmallerShield();                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.OnRep_ShieldHP
	// void OnRep_ShieldHP();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.Appear__FinishedFunc
	// void Appear__FinishedFunc();                                                                                             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.Appear__UpdateFunc
	// void Appear__UpdateFunc();                                                                                               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.Shatter__FinishedFunc
	// void Shatter__FinishedFunc();                                                                                            // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.Shatter__UpdateFunc
	// void Shatter__UpdateFunc();                                                                                              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.MC_EndShield
	// void MC_EndShield();                                                                                                     // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.CharacterSet
	// void CharacterSet();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.EndBuff
	// void EndBuff();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.MC_BreakShield
	// void MC_BreakShield();                                                                                                   // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.DamageOnCharacter
	// void DamageOnCharacter(int32_t UnAlteredDamageAmount, class APawn* Attacker);                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.SetShieldMaterial
	// void SetShieldMaterial();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.SetShieldHP
	// void SetShieldHP();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Skills/BP_Shield.BP_Shield_C.ExecuteUbergraph_BP_Shield
	// void ExecuteUbergraph_BP_Shield(int32_t EntryPoint);                                                                     // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/BP_SpawnableBase.BP_SpawnableBase_C
/// Size: 0x0257 (599 bytes) (0x000220 - 0x000257) align 8 MaxSize: 0x0257
class ABP_SpawnableBase_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UWidgetComponent*                            Widget_SpawnPointSelect;                                    // 0x0228   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0230   (0x0008)  
	FText                                              SpawnPointName;                                             // 0x0238   (0x0018)  
	bool                                               CanSpawnOn;                                                 // 0x0250   (0x0001)  
	TEnumAsByte<E_SpawnTypes>                          SpawnType;                                                  // 0x0251   (0x0001)  
	TEnumAsByte<E_Teams>                               ControllingTeam;                                            // 0x0252   (0x0001)  
	bool                                               Uncontestable;                                              // 0x0253   (0x0001)  
	bool                                               CanBeCapturedByAllies;                                      // 0x0254   (0x0001)  
	bool                                               CanBeCapturedByAxis;                                        // 0x0255   (0x0001)  
	bool                                               CanOnlyBecapturedOnce;                                      // 0x0256   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/BP_SpawnableBase.BP_SpawnableBase_C.OnRep_ControllingTeam
	// void OnRep_ControllingTeam();                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_SpawnableBase.BP_SpawnableBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/BP_SpawnableBase.BP_SpawnableBase_C.ControllingTeamChanged
	// void ControllingTeamChanged();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_SpawnableBase.BP_SpawnableBase_C.ExecuteUbergraph_BP_SpawnableBase
	// void ExecuteUbergraph_BP_SpawnableBase(int32_t EntryPoint);                                                              // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/BP_MobileVehicleSpawnPoint.BP_MobileVehicleSpawnPoint_C
/// Size: 0x0260 (608 bytes) (0x000257 - 0x000260) align 8 MaxSize: 0x0260
class ABP_MobileVehicleSpawnPoint_C : public ABP_SpawnableBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x1];                                       // 0x0257   (0x0001)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0258   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/BP_MobileVehicleSpawnPoint.BP_MobileVehicleSpawnPoint_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/BP_MobileVehicleSpawnPoint.BP_MobileVehicleSpawnPoint_C.ExecuteUbergraph_BP_MobileVehicleSpawnPoint
	// void ExecuteUbergraph_BP_MobileVehicleSpawnPoint(int32_t EntryPoint);                                                    // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Objectives/BP_Flag.BP_Flag_C
/// Size: 0x02CE (718 bytes) (0x000257 - 0x0002CE) align 8 MaxSize: 0x02CE
class ABP_Flag_C : public ABP_SpawnableBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x1];                                       // 0x0257   (0x0001)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0258   (0x0008)  
	class USphereComponent*                            CaptureRadiusSphere;                                        // 0x0260   (0x0008)  
	class UAudioComponent*                             OldRadioSong;                                               // 0x0268   (0x0008)  
	class USkeletalMeshComponent*                      Flag;                                                       // 0x0270   (0x0008)  
	class UStaticMeshComponent*                        FlagPole;                                                   // 0x0278   (0x0008)  
	class UBillboardComponent*                         Billboard_FlagIcon;                                         // 0x0280   (0x0008)  
	class USphereComponent*                            SpawnRadius;                                                // 0x0288   (0x0008)  
	class UWidgetComponent*                            Widget_FlagInfo;                                            // 0x0290   (0x0008)  
	bool                                               IsNeutral;                                                  // 0x0298   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0299   (0x0003)  MISSED
	float                                              FlagCaptureProgress;                                        // 0x029C   (0x0004)  
	TEnumAsByte<E_Teams>                               CapturingTeam;                                              // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x02A1   (0x0003)  MISSED
	float                                              Delta_Seconds;                                              // 0x02A4   (0x0004)  
	float                                              CaptureRadius;                                              // 0x02A8   (0x0004)  
	float                                              CaptureSpeed;                                               // 0x02AC   (0x0004)  
	int32_t                                            CapturingPlayers;                                           // 0x02B0   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x02B4   (0x0004)  MISSED
	TArray<class APawn*>                               CapturingPawns;                                             // 0x02B8   (0x0010)  
	float                                              SpawnRadiusDistance;                                        // 0x02C8   (0x0004)  
	TEnumAsByte<E_Teams>                               InitialControllingTeam;                                     // 0x02CC   (0x0001)  
	bool                                               IsContested;                                                // 0x02CD   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Objectives/BP_Flag.BP_Flag_C.GrantScoreToCapturingPawns
	// void GrantScoreToCapturingPawns();                                                                                       // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Objectives/BP_Flag.BP_Flag_C.GetCapturingTeam
	// void GetCapturingTeam(bool& IsBeingCaptured, TEnumAsByte<E_Teams>& CapturingTeam);                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Objectives/BP_Flag.BP_Flag_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Objectives/BP_Flag.BP_Flag_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Objectives/BP_Flag.BP_Flag_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Objectives/BP_Flag.BP_Flag_C.MC_Capture
	// void MC_Capture(TEnumAsByte<E_Teams> Team);                                                                              // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Objectives/BP_Flag.BP_Flag_C.ControllingTeamChanged
	// void ControllingTeamChanged();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Objectives/BP_Flag.BP_Flag_C.RefreshFlag
	// void RefreshFlag();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Objectives/BP_Flag.BP_Flag_C.ExecuteUbergraph_BP_Flag
	// void ExecuteUbergraph_BP_Flag(int32_t EntryPoint);                                                                       // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Objectives/BP_CaptureAndHoldObjectiveBase.BP_CaptureAndHoldObjectiveBase_C
/// Size: 0x02E8 (744 bytes) (0x0002CE - 0x0002E8) align 8 MaxSize: 0x02E8
class ABP_CaptureAndHoldObjectiveBase_C : public ABP_Flag_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x2];                                       // 0x02CE   (0x0002)  MISSED
	class UTexture2D*                                  AxisIcon;                                                   // 0x02D0   (0x0008)  
	class UTexture2D*                                  AlliedIcon;                                                 // 0x02D8   (0x0008)  
	class UTexture2D*                                  NeutralIcon;                                                // 0x02E0   (0x0008)  
};

/// Class /Game/Blueprints/Objectives/BP_Rocket.BP_Rocket_C
/// Size: 0x0328 (808 bytes) (0x0002CE - 0x000328) align 8 MaxSize: 0x0328
class ABP_Rocket_C : public ABP_Flag_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x2];                                       // 0x02CE   (0x0002)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02D0   (0x0008)  
	class UCapsuleComponent*                           Capsule;                                                    // 0x02D8   (0x0008)  
	class UStaticMeshComponent*                        SpotlightBeam4;                                             // 0x02E0   (0x0008)  
	class UStaticMeshComponent*                        SpotlightBeam3;                                             // 0x02E8   (0x0008)  
	class UStaticMeshComponent*                        SpotlightBeam2;                                             // 0x02F0   (0x0008)  
	class UStaticMeshComponent*                        SpotlightBeam1;                                             // 0x02F8   (0x0008)  
	class UStaticMeshComponent*                        V2;                                                         // 0x0300   (0x0008)  
	class USpotLightComponent*                         SpotLight3;                                                 // 0x0308   (0x0008)  
	class USpotLightComponent*                         SpotLight2;                                                 // 0x0310   (0x0008)  
	class USpotLightComponent*                         SpotLight1;                                                 // 0x0318   (0x0008)  
	class USpotLightComponent*                         SpotLight;                                                  // 0x0320   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Objectives/BP_Rocket.BP_Rocket_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Objectives/BP_Rocket.BP_Rocket_C.ControllingTeamChanged
	// void ControllingTeamChanged();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Objectives/BP_Rocket.BP_Rocket_C.ExecuteUbergraph_BP_Rocket
	// void ExecuteUbergraph_BP_Rocket(int32_t EntryPoint);                                                                     // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C
/// Size: 0x0710 (1808 bytes) (0x00063C - 0x000710) align 8 MaxSize: 0x0710
class ABP_Controller_C : public ABP_BaseController_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x063C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0640   (0x0008)  
	class UAudioComponent*                             OutOfCombatAlarm;                                           // 0x0648   (0x0008)  
	class ABP_Character_C*                             CharacterRef;                                               // 0x0650   (0x0008)  
	class UW_TeamSelect_C*                             TeamSelectWidget;                                           // 0x0658   (0x0008)  
	class UW_HUD_C*                                    HUDWidget;                                                  // 0x0660   (0x0008)  
	class UUserWidget*                                 ActiveSpawnMenu;                                            // 0x0668   (0x0008)  
	class UW_IngameMenu_C*                             IngameMenu;                                                 // 0x0670   (0x0008)  
	class UW_ChatOverlay_C*                            ChatOverlay;                                                // 0x0678   (0x0008)  
	class UUserWidget*                                 CustomCommandWidget;                                        // 0x0680   (0x0008)  
	class ABP_MapCam_C*                                MapCam_SpawnSelect_;                                        // 0x0688   (0x0008)  
	class ABP_FreeCam_C*                               SpectatorCamRef;                                            // 0x0690   (0x0008)  
	bool                                               IngameMenuOpen;                                             // 0x0698   (0x0001)  
	bool                                               IsRegistered;                                               // 0x0699   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x069A   (0x0002)  MISSED
	int32_t                                            PlayerIndex;                                                // 0x069C   (0x0004)  
	FVector2D                                          DynamicCrosshairScreenLocation;                             // 0x06A0   (0x0008)  
	float                                              CurrentCrosshairScale;                                      // 0x06A8   (0x0004)  
	FVector                                            VehicleExitTeleportLocation;                                // 0x06AC   (0x000C)  
	int32_t                                            DamageNumberIndex_Looped_;                                  // 0x06B8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x06BC   (0x0004)  MISSED
	TArray<class ABP_WorldDamageNumber_C*>             CurrentActiveDamageNumberActors;                            // 0x06C0   (0x0010)  
	class UW_ScoreBoard_C*                             ScoreBoardWidget;                                           // 0x06D0   (0x0008)  
	TEnumAsByte<E_CombatZoneTypes>                     CurrentCombatZoneState;                                     // 0x06D8   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x06D9   (0x0003)  MISSED
	float                                              DeltaTime;                                                  // 0x06DC   (0x0004)  
	TEnumAsByte<E_CombatZoneTypes>                     CurrentZoneTypePawnIsIn;                                    // 0x06E0   (0x0001)  
	bool                                               InAllowedCombatZone;                                        // 0x06E1   (0x0001)  
	unsigned char                                      UnknownData04_6[0x2];                                       // 0x06E2   (0x0002)  MISSED
	float                                              OutOfCombatZoneCountdown;                                   // 0x06E4   (0x0004)  
	float                                              VoteKickCooldownTimer;                                      // 0x06E8   (0x0004)  
	bool                                               OnVoteKickCooldown;                                         // 0x06EC   (0x0001)  
	TEnumAsByte<E_VoteOptions>                         OwnVotekickVoteChoice;                                      // 0x06ED   (0x0001)  
	unsigned char                                      UnknownData05_6[0x2];                                       // 0x06EE   (0x0002)  MISSED
	class ABP_MugShotDummy_C*                          MugshotDummy;                                               // 0x06F0   (0x0008)  
	TEnumAsByte<E_Teams>                               LastUsedTeam;                                               // 0x06F8   (0x0001)  
	bool                                               TransitioningToNewMap;                                      // 0x06F9   (0x0001)  
	unsigned char                                      UnknownData06_6[0x6];                                       // 0x06FA   (0x0006)  MISSED
	class ABP_DamageNumberNew_C*                       DamageNumberActor;                                          // 0x0700   (0x0008)  
	class UW_DamageNumberNew_C*                        DamageNumberOffscreenWidget;                                // 0x0708   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.UpdateInGameRichPresence
	// void UpdateInGameRichPresence();                                                                                         // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.CleanUpUI
	// void CleanUpUI();                                                                                                        // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.GetCurrentZoneType
	// void GetCurrentZoneType(TEnumAsByte<E_CombatZoneTypes>& ZoneType);                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.KickPlayer
	// void KickPlayer(FString PlayerName, FText& Response);                                                                    // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.CheckForChatCommand
	// void CheckForChatCommand(FText ChatMessage, bool IsHost, bool& CommandFound_, FText& ResponseMessage, bool& Broadcast);  // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.SwitchSpawnMenu
	// void SwitchSpawnMenu(TEnumAsByte<E_Menus> Menu, bool FirstTimeInMatch, class UUserWidget*& menuWidget);                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.InpActEvt_Escape_K2Node_InputKeyEvent
	// void InpActEvt_Escape_K2Node_InputKeyEvent(FKey Key);                                                                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.InpActEvt_F6_K2Node_InputKeyEvent
	// void InpActEvt_F6_K2Node_InputKeyEvent(FKey Key);                                                                        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.InpActEvt_SpaceBar_K2Node_InputKeyEvent
	// void InpActEvt_SpaceBar_K2Node_InputKeyEvent(FKey Key);                                                                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.InpActEvt_Scoreboard_K2Node_InputActionEvent
	// void InpActEvt_Scoreboard_K2Node_InputActionEvent(FKey Key);                                                             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.InpActEvt_PageDown_K2Node_InputKeyEvent
	// void InpActEvt_PageDown_K2Node_InputKeyEvent(FKey Key);                                                                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.InpActEvt_Delete_K2Node_InputKeyEvent
	// void InpActEvt_Delete_K2Node_InputKeyEvent(FKey Key);                                                                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.InpActEvt_F1_K2Node_InputKeyEvent
	// void InpActEvt_F1_K2Node_InputKeyEvent(FKey Key);                                                                        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.InpActEvt_F2_K2Node_InputKeyEvent
	// void InpActEvt_F2_K2Node_InputKeyEvent(FKey Key);                                                                        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.InpActEvt_L_K2Node_InputKeyEvent
	// void InpActEvt_L_K2Node_InputKeyEvent(FKey Key);                                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.InpActEvt_Use Chat_K2Node_InputActionEvent
	// void InpActEvt_UseChat_K2Node_InputActionEvent(FKey Key);                                                                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_EnterVehicle
	// void S_EnterVehicle(class ABP_VehicleBase_C* Vehicle, class UPawnDataComponent_C* PawnData);                             // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_EnterCharacter
	// void S_EnterCharacter(bool teleport, FVector TeleportLocation, class ABP_VehicleBase_C* Vehicle_LeaveEmptyIfInSeat_);    // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_JoinTeam
	// void S_JoinTeam(TEnumAsByte<E_Teams> Team);                                                                              // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_Spawn
	// void S_Spawn(FST_SpawnInfo SpawnInfo, class ABP_VehicleBase_C* VehicleToEnterAfterSpawn_Optional_, class ABP_VehicleSeat_C* VehicleSeatToEnterAfterSpawn_Optional_); // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.OC_DisplayDamageNumbers
	// void OC_DisplayDamageNumbers(FVector HitLocation, int32_t DamageAmount, bool CriticalHit_, class AActor* HitActor, bool IsLow, TEnumAsByte<E_DamageTypes> DamageType); // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.CloseIngameMenu
	// void CloseIngameMenu();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.OC_ShowLoadingScreen
	// void OC_ShowLoadingScreen(FText MapName, FText ServerName);                                                              // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.OC_SpawnSelect
	// void OC_SpawnSelect(TEnumAsByte<E_Teams> Team);                                                                          // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_SendChatMessage
	// void S_SendChatMessage(FText Message);                                                                                   // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.ReceiveChatMessage
	// void ReceiveChatMessage(FText UserName, FText Message, bool SpecialMessage, TEnumAsByte<E_Teams> Team);                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_Suicide
	// void S_Suicide();                                                                                                        // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.OC_CreateHUD
	// void OC_CreateHUD();                                                                                                     // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.ReceiveDestroyed
	// void ReceiveDestroyed();                                                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.Respawn
	// void Respawn();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_ToggleSpectatorCam
	// void S_ToggleSpectatorCam();                                                                                             // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.IncreaseDamageNumberLoop
	// void IncreaseDamageNumberLoop();                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_LaunchOtherCharacter
	// void S_LaunchOtherCharacter(class ABP_Character_C* Character, FVector LaunchVelocity, class APawn* LaunchInflicter, bool DealImpactDamage); // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_AddMapVote
	// void S_AddMapVote(FString Map);                                                                                          // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.OC_TeleportFromSpecCam
	// void OC_TeleportFromSpecCam();                                                                                           // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_EnterVehicleSeat
	// void S_EnterVehicleSeat(class ABP_VehicleSeat_C* VehicleSeat);                                                           // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_RegisterAsSpecatorForPlayer
	// void S_RegisterAsSpecatorForPlayer(class ABP_Character_C* PlayerToSpectate);                                             // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.EnterSpectatorCam
	// void EnterSpectatorCam();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.OC_EnterSpectatorCam
	// void OC_EnterSpectatorCam();                                                                                             // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_SpawnSpectorCam
	// void S_SpawnSpectorCam();                                                                                                // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.OC_OpenCustomCommandWidget
	// void OC_OpenCustomCommandWidget(class UClass* WidgetClass);                                                              // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.CloseCustomWidget
	// void CloseCustomWidget();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_StartVoteKick
	// void S_StartVoteKick(class ABP_PlayerState_C* PlayerToVoteKick);                                                         // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_SendVote
	// void S_SendVote(bool Yes);                                                                                               // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.NewVoteKickStarted
	// void NewVoteKickStarted();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.RemoveSelfFromSpectators
	// void RemoveSelfFromSpectators();                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.S_ApplyOutOfZoneDamage
	// void S_ApplyOutOfZoneDamage();                                                                                           // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.ClearVehicleSeat
	// void ClearVehicleSeat();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.CreateDamageNumber
	// void CreateDamageNumber(FST_DamageInformation DamageInfo, FVector DamageLocation, bool WithinView, class UClass* EquipableClass_optional_); // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Controllers/BP_Controller.BP_Controller_C.ExecuteUbergraph_BP_Controller
	// void ExecuteUbergraph_BP_Controller(int32_t EntryPoint);                                                                 // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Characters/BP_Poison.BP_Poison_C
/// Size: 0x0280 (640 bytes) (0x000268 - 0x000280) align 8 MaxSize: 0x0280
class ABP_Poison_C : public ABP_BuffDebuffBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0268   (0x0008)  
	class UAudioComponent*                             Audio;                                                      // 0x0270   (0x0008)  
	class UParticleSystemComponent*                    ParticleSystem;                                             // 0x0278   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Characters/BP_Poison.BP_Poison_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Poison.BP_Poison_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Poison.BP_Poison_C.Refresh
	// void Refresh();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Poison.BP_Poison_C.EndBuff
	// void EndBuff();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Poison.BP_Poison_C.ExecuteUbergraph_BP_Poison
	// void ExecuteUbergraph_BP_Poison(int32_t EntryPoint);                                                                     // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Characters/BP_Burning.BP_Burning_C
/// Size: 0x028C (652 bytes) (0x000268 - 0x00028C) align 8 MaxSize: 0x028C
class ABP_Burning_C : public ABP_BuffDebuffBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0268   (0x0008)  
	class UPointLightComponent*                        PointLight;                                                 // 0x0270   (0x0008)  
	class UAudioComponent*                             Audio;                                                      // 0x0278   (0x0008)  
	class UParticleSystemComponent*                    ParticleSystem;                                             // 0x0280   (0x0008)  
	int32_t                                            BurnHits;                                                   // 0x0288   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Characters/BP_Burning.BP_Burning_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Burning.BP_Burning_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Burning.BP_Burning_C.Refresh
	// void Refresh();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Burning.BP_Burning_C.EndBuff
	// void EndBuff();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Burning.BP_Burning_C.ExecuteUbergraph_BP_Burning
	// void ExecuteUbergraph_BP_Burning(int32_t EntryPoint);                                                                    // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Vehicles/BP_VehicleSeat.BP_VehicleSeat_C
/// Size: 0x028B (651 bytes) (0x000248 - 0x00028B) align 8 MaxSize: 0x028B
class ABP_VehicleSeat_C : public ABP_InteractableBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0248   (0x0008)  
	class UArrowComponent*                             UsernameLocation;                                           // 0x0250   (0x0008)  
	class UArrowComponent*                             Arrow;                                                      // 0x0258   (0x0008)  
	class UCapsuleComponent*                           PlayerPosition;                                             // 0x0260   (0x0008)  
	bool                                               Occupied;                                                   // 0x0268   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0269   (0x0007)  MISSED
	class ABP_Character_C*                             OccupyingCharacter;                                         // 0x0270   (0x0008)  
	bool                                               EnableDucking;                                              // 0x0278   (0x0001)  
	bool                                               HidePlayer;                                                 // 0x0279   (0x0001)  
	bool                                               HideCrosshair;                                              // 0x027A   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x027B   (0x0005)  MISSED
	class ABP_Character_C*                             OldOccupyingCharacter;                                      // 0x0280   (0x0008)  
	bool                                               OverrideCharacterXRotation;                                 // 0x0288   (0x0001)  
	bool                                               OverrideCharacterYRotation;                                 // 0x0289   (0x0001)  
	bool                                               CanUseCharacterArsenal;                                     // 0x028A   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat.BP_VehicleSeat_C.OnRep_Occupied
	// void OnRep_Occupied();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat.BP_VehicleSeat_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat.BP_VehicleSeat_C.InputXRotate
	// void InputXRotate(float XRotateAmount);                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat.BP_VehicleSeat_C.InputYRotate
	// void InputYRotate(float YRotateAmount);                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat.BP_VehicleSeat_C.StartPrimaryUse(Client)
	// void StartPrimaryUse_Client_();                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat.BP_VehicleSeat_C.StopPrimaryUse(client)
	// void StopPrimaryUse_client_();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat.BP_VehicleSeat_C.StartSecondaryUse(Client)
	// void StartSecondaryUse_Client_();                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat.BP_VehicleSeat_C.StopSecondaryUse(Client)
	// void StopSecondaryUse_Client_();                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat.BP_VehicleSeat_C.ExecuteUbergraph_BP_VehicleSeat
	// void ExecuteUbergraph_BP_VehicleSeat(int32_t EntryPoint);                                                                // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C
/// Size: 0x02E9 (745 bytes) (0x00028B - 0x0002E9) align 8 MaxSize: 0x02E9
class ABP_Passenger_GunBase_C : public ABP_VehicleSeat_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x5];                                       // 0x028B   (0x0005)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0290   (0x0008)  
	class UCameraComponent*                            Camera;                                                     // 0x0298   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x02A0   (0x0008)  
	class UArrowComponent*                             BackwardCamLoc;                                             // 0x02A8   (0x0008)  
	class UArrowComponent*                             BackwardBase;                                               // 0x02B0   (0x0008)  
	class UChildActorComponent*                        MobileSpawnPoint;                                           // 0x02B8   (0x0008)  
	class UArrowComponent*                             BarrelCamLocation;                                          // 0x02C0   (0x0008)  
	class UAudioComponent*                             MgFiringSound;                                              // 0x02C8   (0x0008)  
	class UArrowComponent*                             Muzzle;                                                     // 0x02D0   (0x0008)  
	bool                                               Firing;                                                     // 0x02D8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02D9   (0x0003)  MISSED
	FRotator                                           SharedRotation;                                             // 0x02DC   (0x000C)  
	bool                                               ForwardCamActive;                                           // 0x02E8   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.InputXRotate
	// void InputXRotate(float XRotateAmount);                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.InputYRotate
	// void InputYRotate(float YRotateAmount);                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.StartPrimaryUse(Client)
	// void StartPrimaryUse_Client_();                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.StopPrimaryUse(client)
	// void StopPrimaryUse_client_();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.MC_FireMg
	// void MC_FireMg(int32_t UniqueProjectileID, FVector SpawnLocation, FVector FlightDirection, FVector AddedVelocity);       // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.FireMG
	// void FireMG(int32_t UniqueProjectileID, FVector SpawnLocation, FVector FlightDirection, FVector AddedVelocity);          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.S_ShareRotation
	// void S_ShareRotation(int32_t Pitch, int32_t Yaw);                                                                        // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.StartSecondaryUse(Client)
	// void StartSecondaryUse_Client_();                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.StopSecondaryUse(Client)
	// void StopSecondaryUse_Client_();                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.AttachToBarrel
	// void AttachToBarrel();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.S_FireMG
	// void S_FireMG(int32_t UniqueProjectileID, FVector SpawnLocation, FVector FlightDirection, FVector AddedVelocity);        // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Passenger_GunBase.BP_Passenger_GunBase_C.ExecuteUbergraph_BP_Passenger_GunBase
	// void ExecuteUbergraph_BP_Passenger_GunBase(int32_t EntryPoint);                                                          // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Vehicles/BP_VehicleSeat_TankPassenger.BP_VehicleSeat_TankPassenger_C
/// Size: 0x02A0 (672 bytes) (0x00028B - 0x0002A0) align 8 MaxSize: 0x02A0
class ABP_VehicleSeat_TankPassenger_C : public ABP_VehicleSeat_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x5];                                       // 0x028B   (0x0005)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0290   (0x0008)  
	class UArrowComponent*                             Arrow1;                                                     // 0x0298   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat_TankPassenger.BP_VehicleSeat_TankPassenger_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat_TankPassenger.BP_VehicleSeat_TankPassenger_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat_TankPassenger.BP_VehicleSeat_TankPassenger_C.InputXRotate
	// void InputXRotate(float XRotateAmount);                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleSeat_TankPassenger.BP_VehicleSeat_TankPassenger_C.ExecuteUbergraph_BP_VehicleSeat_TankPassenger
	// void ExecuteUbergraph_BP_VehicleSeat_TankPassenger(int32_t EntryPoint);                                                  // [0x1325ea0] Final|HasDefaults    
};

/// Struct /Game/Widgets/ST_VehicleSeatUIDot.ST_VehicleSeatUIDot
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FST_VehicleSeatUIDot
{ 
	FVector                                            UIPosition_5_3DACB0E04BAC22E65E01F5A9DF033610;              // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class ABP_VehicleSeat_C*                           SeatRef_3_8028422D422549C453760CB43D5C2619;                 // 0x0010   (0x0008)  
	class UW_PassengerSeatDot_C*                       SeatDotWidgetRef_8_7388186C448B300F9849D6BE37079375;        // 0x0018   (0x0008)  
};

/// Class /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C
/// Size: 0x0450 (1104 bytes) (0x000280 - 0x000450) align 16 MaxSize: 0x0450
class ABP_VehicleBase_C : public APawn
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0280   (0x0008)  
	class UArrowComponent*                             Arrow;                                                      // 0x0288   (0x0008)  
	class UStaticMeshComponent*                        PhysicsBaseMesh;                                            // 0x0290   (0x0008)  
	class UAudioComponent*                             VehicleRepairSound;                                         // 0x0298   (0x0008)  
	class USceneComponent*                             DriverSeatTransformNew;                                     // 0x02A0   (0x0008)  
	class USceneComponent*                             UsernameLocation;                                           // 0x02A8   (0x0008)  
	class UPawnDataComponent_C*                        PawnDataComponent;                                          // 0x02B0   (0x0008)  
	class USceneComponent*                             VehicleTransform_AttachToVehiclePhysics_;                   // 0x02B8   (0x0008)  
	int32_t                                            CurrentHealth;                                              // 0x02C0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02C4   (0x0004)  MISSED
	FText                                              VehicleName;                                                // 0x02C8   (0x0018)  
	bool                                               AI_Controlled;                                              // 0x02E0   (0x0001)  
	bool                                               ShouldUseAI;                                                // 0x02E1   (0x0001)  
	bool                                               UseAIWhenNotControlledByPlayer;                             // 0x02E2   (0x0001)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x02E3   (0x0001)  
	int32_t                                            MaxHealth_InitialHP_;                                       // 0x02E4   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x02E8   (0x0008)  MISSED
	FTransform                                         SpawnTransform;                                             // 0x02F0   (0x0030)  
	bool                                               Destroyed;                                                  // 0x0320   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0321   (0x0007)  MISSED
	class ABP_Controller_C*                            ControllerRef;                                              // 0x0328   (0x0008)  
	FVector                                            LastLocation;                                               // 0x0330   (0x000C)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x033C   (0x0004)  MISSED
	class ABP_Character_C*                             ControllingCharacter;                                       // 0x0340   (0x0008)  
	FVector                                            VehicleVelocity;                                            // 0x0348   (0x000C)  
	bool                                               CanRepair;                                                  // 0x0354   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x0355   (0x0003)  MISSED
	float                                              SmallCalDamageAmount;                                       // 0x0358   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x035C   (0x0004)  MISSED
	SDK_UNDEFINED(16,627) /* FMulticastInlineDelegate */ __um(DamageReceived);                                     // 0x0360   (0x0010)  
	float                                              VehicleZKillHeight;                                         // 0x0370   (0x0004)  
	float                                              WeakAOEDamageAmount;                                        // 0x0374   (0x0004)  
	float                                              MediumCalDamageAmount;                                      // 0x0378   (0x0004)  
	float                                              LargeCalStrongDamageAmount;                                 // 0x037C   (0x0004)  
	float                                              Anti_AirDamageAmount;                                       // 0x0380   (0x0004)  
	bool                                               EnableManualRepairing;                                      // 0x0384   (0x0001)  
	bool                                               UseAutoRepairInBase;                                        // 0x0385   (0x0001)  
	unsigned char                                      UnknownData06_6[0x2];                                       // 0x0386   (0x0002)  MISSED
	float                                              TimeToRepair;                                               // 0x0388   (0x0004)  
	bool                                               HidePilotingPlayer;                                         // 0x038C   (0x0001)  
	TEnumAsByte<E_VehicleAnimationTypes>               VehicleDriverAnimation;                                     // 0x038D   (0x0001)  
	unsigned char                                      UnknownData07_6[0x2];                                       // 0x038E   (0x0002)  MISSED
	float                                              AnimationTurningAmount;                                     // 0x0390   (0x0004)  
	bool                                               Possessed;                                                  // 0x0394   (0x0001)  
	unsigned char                                      UnknownData08_6[0x3];                                       // 0x0395   (0x0003)  MISSED
	float                                              WreckageTime;                                               // 0x0398   (0x0004)  
	float                                              RespawnTimePlayerVehicle;                                   // 0x039C   (0x0004)  
	float                                              RespawnTimeForAI;                                           // 0x03A0   (0x0004)  
	bool                                               WaitingForRemoval;                                          // 0x03A4   (0x0001)  
	bool                                               Repairing;                                                  // 0x03A5   (0x0001)  
	unsigned char                                      UnknownData09_6[0x2];                                       // 0x03A6   (0x0002)  MISSED
	float                                              RepairProgress;                                             // 0x03A8   (0x0004)  
	bool                                               IsLocalPlayerVehicle;                                       // 0x03AC   (0x0001)  
	bool                                               bIsPawnControlled;                                          // 0x03AD   (0x0001)  
	bool                                               HasBeenRespawned;                                           // 0x03AE   (0x0001)  
	unsigned char                                      UnknownData10_6[0x1];                                       // 0x03AF   (0x0001)  MISSED
	float                                              DeltaTime;                                                  // 0x03B0   (0x0004)  
	TEnumAsByte<E_VehicleSkinThemes>                   VehicleSkinTheme;                                           // 0x03B4   (0x0001)  
	unsigned char                                      UnknownData11_6[0x3];                                       // 0x03B5   (0x0003)  MISSED
	float                                              ExitLocationRightOffsetDistance;                            // 0x03B8   (0x0004)  
	float                                              CentralExitLocationHeight;                                  // 0x03BC   (0x0004)  
	float                                              ForceApplicationMultiplier;                                 // 0x03C0   (0x0004)  
	unsigned char                                      UnknownData12_6[0x4];                                       // 0x03C4   (0x0004)  MISSED
	FString                                            VehicleUsernameFallback_AI_;                                // 0x03C8   (0x0010)  
	bool                                               IsSelfDamage;                                               // 0x03D8   (0x0001)  
	bool                                               RecalculateDamageLocationEffectsLocally;                    // 0x03D9   (0x0001)  
	bool                                               RemoveVehicleAfterWhileWhenNotUsed;                         // 0x03DA   (0x0001)  
	unsigned char                                      UnknownData13_6[0x5];                                       // 0x03DB   (0x0005)  MISSED
	FText                                              VehicleCollisionKillSpecialMessage;                         // 0x03E0   (0x0018)  
	bool                                               IsNewVehicle;                                               // 0x03F8   (0x0001)  
	unsigned char                                      UnknownData14_6[0x7];                                       // 0x03F9   (0x0007)  MISSED
	class ABP_VehicleSwapBoard_Base_C*                 VehicleSwapBoard_Optional_;                                 // 0x0400   (0x0008)  
	bool                                               RecentlyDamaged;                                            // 0x0408   (0x0001)  
	bool                                               InRepairZoneReplicated;                                     // 0x0409   (0x0001)  
	bool                                               InRepairZoneServer;                                         // 0x040A   (0x0001)  
	unsigned char                                      UnknownData15_6[0x5];                                       // 0x040B   (0x0005)  MISSED
	TArray<class ABP_VehicleSeat_C*>                   VehicleSeats;                                               // 0x0410   (0x0010)  
	int32_t                                            MaxCollisionHitDamage;                                      // 0x0420   (0x0004)  
	unsigned char                                      UnknownData16_6[0x4];                                       // 0x0424   (0x0004)  MISSED
	class UTexture2D*                                  VehicleTopView_ForUI_;                                      // 0x0428   (0x0008)  
	TArray<FST_VehicleSeatUIDot>                       VehicleSeatUIDotLocations;                                  // 0x0430   (0x0010)  
	bool                                               CanBeTakenOverByAutoAI;                                     // 0x0440   (0x0001)  
	bool                                               DealImpactDamage;                                           // 0x0441   (0x0001)  
	unsigned char                                      UnknownData17_6[0x6];                                       // 0x0442   (0x0006)  MISSED
	class APawn*                                       ImpactDamageDealer;                                         // 0x0448   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.IsAnyPassengerSeatOccupied
	// void IsAnyPassengerSeatOccupied(bool& Yes);                                                                              // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.OnRep_RecentlyDamaged
	// void OnRep_RecentlyDamaged();                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.KillPlayersInSeatsAndCleanThemUp
	// void KillPlayersInSeatsAndCleanThemUp(class APawn* AttackerPawn);                                                        // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.GetAvailableVehicleSeat
	// void GetAvailableVehicleSeat(class ABP_VehicleSeat_C*& VehicleSeat);                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.GetAllSeats
	// void GetAllSeats(TArray<ABP_VehicleSeat_C*>& Seats);                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.GetExitLocation
	// void GetExitLocation(FVector& ExitLocation);                                                                             // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.OnRep_VehicleSkinTheme
	// void OnRep_VehicleSkinTheme();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.GetFreeSeats
	// void GetFreeSeats(TEnumAsByte<E_Teams> OwnTeam, TArray<ABP_VehicleSeat_C*>& FreeSeats, bool& OccupiedByEnemies);         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.GetPhysicsMesh
	// void GetPhysicsMesh(class UStaticMeshComponent*& ArrayElement);                                                          // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.IsOwnVehicle?
	// void IsOwnVehicle_(bool& OwnVehicle);                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.DamageSelf
	// void DamageSelf(int32_t Amount);                                                                                         // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.OnRep_Repairing
	// void OnRep_Repairing();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.OnRep_Respawning
	// void OnRep_Respawning();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.OnRep_Possessed
	// void OnRep_Possessed();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.OnRep_Health
	// void OnRep_Health();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.EnableAIController
	// void EnableAIController();                                                                                               // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.OnRep_AI_Controlled
	// void OnRep_AI_Controlled();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.GetVehicleHealthInformation
	// void GetVehicleHealthInformation(float& CurrentHealthPercentage, int32_t& CurrentHealthAmount, int32_t& MaxHealth);      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.OnRep_Destroyed
	// void OnRep_Destroyed();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.InpActEvt_Interact_K2Node_InputActionEvent
	// void InpActEvt_Interact_K2Node_InputActionEvent(FKey Key);                                                               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.InpActEvt_Repair_K2Node_InputActionEvent
	// void InpActEvt_Repair_K2Node_InputActionEvent(FKey Key);                                                                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.InpActEvt_Switch Seat_K2Node_InputActionEvent
	// void InpActEvt_SwitchSeat_K2Node_InputActionEvent(FKey Key);                                                             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.ApplyDamage
	// void ApplyDamage(int32_t DamageAmount, FVector DamageHitLocation, FVector DamageDirection, class APawn* AttackerPawn, class UClass* Debuff, TEnumAsByte<E_DamageTypes> DamageType, int32_t PlayerIndex, bool IsCriticalHit, bool IgnoreTeamProtection, FText SpecialKillMessage, bool ShouldBreakInvisibility, bool IsPiercingDamage, class UClass* ProjectileClass_optional_, class UClass* EquipableClass_optonal_); // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.S_RemoveVehicle
	// void S_RemoveVehicle(float Delay, class APawn* AttackerPawn);                                                            // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.MC_Damaged
	// void MC_Damaged(FVector DamageLocation, FVector DamageDirection, int32_t DamageAmount, TEnumAsByte<E_DamageTypes> DamageType, FVector DamageLocationRelative); // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.ReceivePossessed
	// void ReceivePossessed(class AController* NewController);                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.ReceiveUnpossessed
	// void ReceiveUnpossessed(class AController* OldController);                                                               // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.DestroyedRepNotify
	// void DestroyedRepNotify();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.OC_Damaged
	// void OC_Damaged(int32_t DamageAmount, FVector AttackerLocation);                                                         // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.S_DestroyVehicle
	// void S_DestroyVehicle();                                                                                                 // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.HealthRepNotify
	// void HealthRepNotify();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.IsPossessedEvent
	// void IsPossessedEvent();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.S_SetRepairing
	// void S_SetRepairing(bool Repairing);                                                                                     // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.S_SetRepaired
	// void S_SetRepaired();                                                                                                    // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.DamagedByPlane(Server)
	// void DamagedByPlane_Server_(class ABP_PlaneBase_C* Plane);                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.ResetRemove
	// void ResetRemove();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.S_DamageSelf
	// void S_DamageSelf(int32_t Amount);                                                                                       // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.S_AddPushForce
	// void S_AddPushForce(FVector Impulse, FVector SpinImpulse, FVector SpinLocation, bool DealImpactDamage, class APawn* ImpactDamageDealer); // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.OC_AddPushForce
	// void OC_AddPushForce(FVector Impulse, FVector SpinImpulse, FVector SpinLocation);                                        // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.AddPushForce
	// void AddPushForce(FVector Impulse, FVector SpinImpulse, FVector SpinLocation);                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.InitPawnDataTeam
	// void InitPawnDataTeam();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.RespawnVehicle
	// void RespawnVehicle();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.MC_WreckageDestroy
	// void MC_WreckageDestroy(FVector Location);                                                                               // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.AttemptToRemoveVehicle
	// void AttemptToRemoveVehicle();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.InitVehicleThemeSkin
	// void InitVehicleThemeSkin();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.S_VehicleCollisionHit
	// void S_VehicleCollisionHit(class AActor*& HitActor, FVector HitLocation, FVector DamageDirection);                       // [0x1325ea0] Net|NetReliableNetServer|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.S_EnterVehicleSeat
	// void S_EnterVehicleSeat();                                                                                               // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.SetInRepairZone
	// void SetInRepairZone(bool InRepairZone);                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.ExecuteUbergraph_BP_VehicleBase
	// void ExecuteUbergraph_BP_VehicleBase(int32_t EntryPoint);                                                                // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Blueprints/Vehicles/BP_VehicleBase.BP_VehicleBase_C.DamageReceived__DelegateSignature
	// void DamageReceived__DelegateSignature(int32_t DamageAmount, FVector AttackerLocation);                                  // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C
/// Size: 0x05B8 (1464 bytes) (0x000450 - 0x0005B8) align 16 MaxSize: 0x05B8
class ABP_Transport_C : public ABP_VehicleBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0450   (0x0008)  
	class UArrowComponent*                             DriverSeatAttachPoint;                                      // 0x0458   (0x0008)  
	class UParticleSystemComponent*                    Fire;                                                       // 0x0460   (0x0008)  
	class UNavModifierComponent*                       NavModifier;                                                // 0x0468   (0x0008)  
	class UBoxComponent*                               CharacterBlockVolumeWhenUnPossessed;                        // 0x0470   (0x0008)  
	class UCapsuleComponent*                           Capsule;                                                    // 0x0478   (0x0008)  
	class UStaticMeshComponent*                        LightConeMesh;                                              // 0x0480   (0x0008)  
	class UCapsuleComponent*                           CharacterKillVolume;                                        // 0x0488   (0x0008)  
	class UArrowComponent*                             FaceCam;                                                    // 0x0490   (0x0008)  
	class USpotLightComponent*                         SpotLight;                                                  // 0x0498   (0x0008)  
	class UAudioComponent*                             S_Honk;                                                     // 0x04A0   (0x0008)  
	class UParticleSystemComponent*                    P_MotorbikeExhaust;                                         // 0x04A8   (0x0008)  
	class UStaticMeshComponent*                        FrontWheel;                                                 // 0x04B0   (0x0008)  
	class UStaticMeshComponent*                        Bike_Front;                                                 // 0x04B8   (0x0008)  
	class UStaticMeshComponent*                        BackWheel;                                                  // 0x04C0   (0x0008)  
	class UParticleSystemComponent*                    SmokeBack2;                                                 // 0x04C8   (0x0008)  
	class UParticleSystemComponent*                    SmokeBack1;                                                 // 0x04D0   (0x0008)  
	class UAudioComponent*                             S_Drift;                                                    // 0x04D8   (0x0008)  
	class UAudioComponent*                             S_MotorBikeEngine;                                          // 0x04E0   (0x0008)  
	class USpringArmComponent*                         SpringArm;                                                  // 0x04E8   (0x0008)  
	class UCameraComponent*                            Camera;                                                     // 0x04F0   (0x0008)  
	class UStaticMeshComponent*                        TransportVehicleMesh;                                       // 0x04F8   (0x0008)  
	bool                                               ForwardPressed;                                             // 0x0500   (0x0001)  
	bool                                               ForwardPressedReplicated;                                   // 0x0501   (0x0001)  
	bool                                               TurnLeftPressed;                                            // 0x0502   (0x0001)  
	bool                                               TurnLeftPressedReplicated;                                  // 0x0503   (0x0001)  
	bool                                               TurnRightPressed;                                           // 0x0504   (0x0001)  
	bool                                               TurnRightPressedReplicated;                                 // 0x0505   (0x0001)  
	bool                                               BackwardPressed;                                            // 0x0506   (0x0001)  
	bool                                               BackwardPressedReplicated;                                  // 0x0507   (0x0001)  
	bool                                               HandBreaking;                                               // 0x0508   (0x0001)  
	bool                                               HandbreakingReplicated;                                     // 0x0509   (0x0001)  
	bool                                               InTheAir;                                                   // 0x050A   (0x0001)  
	bool                                               InAirReplicated;                                            // 0x050B   (0x0001)  
	bool                                               Started;                                                    // 0x050C   (0x0001)  
	bool                                               Honking;                                                    // 0x050D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x050E   (0x0002)  MISSED
	FTransform                                         VehicleTransform;                                           // 0x0510   (0x0030)  
	FVector                                            LastForwardDirection;                                       // 0x0540   (0x000C)  
	FVector                                            LastVelocity_Server_;                                       // 0x054C   (0x000C)  
	float                                              Delta_Seconds;                                              // 0x0558   (0x0004)  
	float                                              MovementSpeed;                                              // 0x055C   (0x0004)  
	float                                              ForwardBackwardAmount;                                      // 0x0560   (0x0004)  
	float                                              TurnAmount;                                                 // 0x0564   (0x0004)  
	float                                              ForwardDirectionAlignment;                                  // 0x0568   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x056C   (0x0004)  MISSED
	class UAudioComponent*                             GearSounds;                                                 // 0x0570   (0x0008)  
	float                                              LeanAmount;                                                 // 0x0578   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x057C   (0x0004)  MISSED
	class UAudioComponent*                             HonkSound;                                                  // 0x0580   (0x0008)  
	float                                              CollisionSpeedMultiplier;                                   // 0x0588   (0x0004)  
	float                                              FallDownwardForceAmount;                                    // 0x058C   (0x0004)  
	float                                              ForwardBackwardAmountReplicated;                            // 0x0590   (0x0004)  
	float                                              LastCollisionSpeedValue;                                    // 0x0594   (0x0004)  
	class ABP_Character_C*                             LastHitCharacter;                                           // 0x0598   (0x0008)  
	class UCurveFloat*                                 TurnSpeedCurve;                                             // 0x05A0   (0x0008)  
	bool                                               EnableLean_Tilt_;                                           // 0x05A8   (0x0001)  
	bool                                               ActivateTick;                                               // 0x05A9   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2];                                       // 0x05AA   (0x0002)  MISSED
	float                                              LastGroundSpeed;                                            // 0x05AC   (0x0004)  
	float                                              FinalSpeedCachedLocal;                                      // 0x05B0   (0x0004)  
	float                                              FinalSpeedCachedShared;                                     // 0x05B4   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.GetMovementInputStatus
	// void GetMovementInputStatus(bool& GoingForward, bool& GoingBackward, bool& TurningLeft, bool& TurningRight, bool& InAir); // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.OnRep_Honking
	// void OnRep_Honking();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.InpActEvt_SpaceBar_K2Node_InputKeyEvent
	// void InpActEvt_SpaceBar_K2Node_InputKeyEvent(FKey Key);                                                                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.InpActEvt_Break_K2Node_InputActionEvent
	// void InpActEvt_Break_K2Node_InputActionEvent(FKey Key);                                                                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.InpActEvt_Turn Left_K2Node_InputActionEvent
	// void InpActEvt_TurnLeft_K2Node_InputActionEvent(FKey Key);                                                               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.InpActEvt_Turn Right_K2Node_InputActionEvent
	// void InpActEvt_TurnRight_K2Node_InputActionEvent(FKey Key);                                                              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.InpActEvt_Horn_K2Node_InputActionEvent
	// void InpActEvt_Horn_K2Node_InputActionEvent(FKey Key);                                                                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.ReceivePossessed
	// void ReceivePossessed(class AController* NewController);                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.ReceiveUnpossessed
	// void ReceiveUnpossessed(class AController* OldController);                                                               // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.MC_Possessed
	// void MC_Possessed();                                                                                                     // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.MC_Unpossessed
	// void MC_Unpossessed();                                                                                                   // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_SetTurnLeft
	// void S_SetTurnLeft(bool TurnLeft);                                                                                       // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_SetTurnRight
	// void S_SetTurnRight(bool TurnRight);                                                                                     // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.ReceiveHit
	// void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, FVector HitLocation, FVector HitNormal, FVector NormalImpulse, FHitResult& Hit); // [0x1325ea0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.ResetAccelerationEffects
	// void ResetAccelerationEffects();                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.MC_Landed
	// void MC_Landed();                                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.DestroyedRepNotify
	// void DestroyedRepNotify();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.InitTransform
	// void InitTransform();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_Horn
	// void S_Horn(bool Honking);                                                                                               // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.BndEvt__BP_Transport_CharacterKillVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
	// void BndEvt__BP_Transport_CharacterKillVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x1325ea0] HasOutParms|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.IsPossessedEvent
	// void IsPossessedEvent();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.InitUnpossessedState
	// void InitUnpossessedState();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_Landed
	// void S_Landed();                                                                                                         // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_SetForwardPressed
	// void S_SetForwardPressed(bool ForwardPressed);                                                                           // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_SetBackwardPressed
	// void S_SetBackwardPressed(bool BackwardPressed);                                                                         // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_SetHandbreaking
	// void S_SetHandbreaking(bool HandBreaking);                                                                               // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_SetInAir
	// void S_SetInAir(bool InAir);                                                                                             // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_SetForwardBackwardAmount
	// void S_SetForwardBackwardAmount(float ForwardBackwardAmount);                                                            // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_ShareVehicleTransform
	// void S_ShareVehicleTransform(FTransform VehicleTransform);                                                               // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_SetLastOffsetAmount
	// void S_SetLastOffsetAmount(FVector LastVelocity_Server_);                                                                // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.MC_ActorHit
	// void MC_ActorHit(FVector Location);                                                                                      // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_ActorHit
	// void S_ActorHit(FVector Location);                                                                                       // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.InitVehicleThemeSkin
	// void InitVehicleThemeSkin();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.MC_Damaged
	// void MC_Damaged(FVector DamageLocation, FVector DamageDirection, int32_t DamageAmount, TEnumAsByte<E_DamageTypes> DamageType, FVector DamageLocationRelative); // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.InpAxisEvt_Accelerate_K2Node_InputAxisEvent
	// void InpAxisEvt_Accelerate_K2Node_InputAxisEvent(float AxisValue);                                                       // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.S_ShareFinalSpeed
	// void S_ShareFinalSpeed(float Speed);                                                                                     // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport.BP_Transport_C.ExecuteUbergraph_BP_Transport
	// void ExecuteUbergraph_BP_Transport(int32_t EntryPoint);                                                                  // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C
/// Size: 0x0518 (1304 bytes) (0x000450 - 0x000518) align 16 MaxSize: 0x0518
class ABP_AAGun_C : public ABP_VehicleBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0450   (0x0008)  
	class UArrowComponent*                             FaceCam;                                                    // 0x0458   (0x0008)  
	class UArrowComponent*                             Backward;                                                   // 0x0460   (0x0008)  
	class UAudioComponent*                             MoveSound;                                                  // 0x0468   (0x0008)  
	class UStaticMeshComponent*                        Crank;                                                      // 0x0470   (0x0008)  
	class UArrowComponent*                             DriverSeatTransform;                                        // 0x0478   (0x0008)  
	class USceneComponent*                             DriverSeatBase;                                             // 0x0480   (0x0008)  
	class UArrowComponent*                             UsernameLoc;                                                // 0x0488   (0x0008)  
	class UStaticMeshComponent*                        RetractingBarrel;                                           // 0x0490   (0x0008)  
	class UArrowComponent*                             ProjectileStart;                                            // 0x0498   (0x0008)  
	class UStaticMeshComponent*                        Barrel;                                                     // 0x04A0   (0x0008)  
	class UCameraComponent*                            Camera;                                                     // 0x04A8   (0x0008)  
	class UStaticMeshComponent*                        BaseGun;                                                    // 0x04B0   (0x0008)  
	class UStaticMeshComponent*                        Base;                                                       // 0x04B8   (0x0008)  
	float                                              BarrelRetract_NewTrack_0_55A83F5E4D7A1ED6BD057DB3D9C413FD;  // 0x04C0   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    BarrelRetract__Direction_55A83F5E4D7A1ED6BD057DB3D9C413FD;  // 0x04C4   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x04C5   (0x0003)  MISSED
	class UTimelineComponent*                          BarrelRetract;                                              // 0x04C8   (0x0008)  
	bool                                               Firing;                                                     // 0x04D0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x04D1   (0x0003)  MISSED
	FRotator                                           SharedRotation;                                             // 0x04D4   (0x000C)  
	float                                              DeltaSeconds;                                               // 0x04E0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x04E4   (0x0004)  MISSED
	TArray<class ABP_PlaneBase_C*>                     Planes;                                                     // 0x04E8   (0x0010)  
	float                                              AutoCalculatedProjectileDistance;                           // 0x04F8   (0x0004)  
	bool                                               Zoom;                                                       // 0x04FC   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x04FD   (0x0003)  MISSED
	FRotator                                           LastBarrelRotation;                                         // 0x0500   (0x000C)  
	FRotator                                           LastBackwardRotation;                                       // 0x050C   (0x000C)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.GetAutomaticPlaneDistance
	// void GetAutomaticPlaneDistance(float& Distance);                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.BarrelRetract__FinishedFunc
	// void BarrelRetract__FinishedFunc();                                                                                      // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.BarrelRetract__UpdateFunc
	// void BarrelRetract__UpdateFunc();                                                                                        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent
	// void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent(FKey Key);                                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent
	// void InpActEvt_RightMouseButton_K2Node_InputKeyEvent(FKey Key);                                                          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.FireAAGun
	// void FireAAGun(FVector StartLocation, FVector Direction, float maxTravelDistance, int32_t UniqueProjectileID);           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.S_ShareRotation
	// void S_ShareRotation(float Pitch, float Yaw);                                                                            // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.S_FireAAGun
	// void S_FireAAGun(FVector StartLocation, FVector Direction, float maxTravelDistance, int32_t UniqueProjectileID);         // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.MC_FireAAGun
	// void MC_FireAAGun(FVector StartLocation, FVector Direction, float maxTravelDistance, int32_t UniqueProjectileID);        // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.BarrelRetractAnimation
	// void BarrelRetractAnimation();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.S_SetMoveSound
	// void S_SetMoveSound(bool Enabled);                                                                                       // [0x1325ea0] Net|NetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.MC_SetMoveSound
	// void MC_SetMoveSound(bool Enabled);                                                                                      // [0x1325ea0] Net|NetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.DestroyedRepNotify
	// void DestroyedRepNotify();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.IsPossessedEvent
	// void IsPossessedEvent();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_AAGun.BP_AAGun_C.ExecuteUbergraph_BP_AAGun
	// void ExecuteUbergraph_BP_AAGun(int32_t EntryPoint);                                                                      // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C
/// Size: 0x0501 (1281 bytes) (0x000450 - 0x000501) align 16 MaxSize: 0x0501
class ABP_LandingCraft_C : public ABP_VehicleBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0450   (0x0008)  
	class UBoxComponent*                               PlayerDetectVolume;                                         // 0x0458   (0x0008)  
	class UStaticMeshComponent*                        Hatch;                                                      // 0x0460   (0x0008)  
	class UStaticMeshComponent*                        Cube;                                                       // 0x0468   (0x0008)  
	class UAudioComponent*                             EngineSound;                                                // 0x0470   (0x0008)  
	class UCapsuleComponent*                           Capsule2;                                                   // 0x0478   (0x0008)  
	class UCapsuleComponent*                           Capsule1;                                                   // 0x0480   (0x0008)  
	class UCapsuleComponent*                           Capsule;                                                    // 0x0488   (0x0008)  
	class UCameraComponent*                            Camera;                                                     // 0x0490   (0x0008)  
	class USpringArmComponent*                         SpringArm;                                                  // 0x0498   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x04A0   (0x0008)  
	class USkeletalMeshComponent*                      LandingCraftSkeleton;                                       // 0x04A8   (0x0008)  
	bool                                               ForwardPressed;                                             // 0x04B0   (0x0001)  
	bool                                               BackwardPressed;                                            // 0x04B1   (0x0001)  
	unsigned char                                      UnknownData00_6[0xE];                                       // 0x04B2   (0x000E)  MISSED
	FTransform                                         LandingCraftTransform;                                      // 0x04C0   (0x0030)  
	float                                              DeltaSeconds;                                               // 0x04F0   (0x0004)  
	bool                                               TurnLeftPressed;                                            // 0x04F4   (0x0001)  
	bool                                               TurnRightPressed;                                           // 0x04F5   (0x0001)  
	bool                                               OpenHatch;                                                  // 0x04F6   (0x0001)  
	bool                                               CloseHatch;                                                 // 0x04F7   (0x0001)  
	float                                              HatchRotation;                                              // 0x04F8   (0x0004)  
	int32_t                                            BoardedPlayers;                                             // 0x04FC   (0x0004)  
	bool                                               Landed;                                                     // 0x0500   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.OnRep_Landed
	// void OnRep_Landed();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.InpActEvt_Turn Left_K2Node_InputActionEvent
	// void InpActEvt_TurnLeft_K2Node_InputActionEvent(FKey Key);                                                               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.InpActEvt_Turn Right_K2Node_InputActionEvent
	// void InpActEvt_TurnRight_K2Node_InputActionEvent(FKey Key);                                                              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.IsPossessedEvent
	// void IsPossessedEvent();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.S_Forward
	// void S_Forward(bool ForwardPressed);                                                                                     // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.S_Backward
	// void S_Backward(bool BackwardPressed);                                                                                   // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.S_TurnLeft
	// void S_TurnLeft(bool TurnLeft);                                                                                          // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.S_TurnRight
	// void S_TurnRight(bool TurnRight);                                                                                        // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.S_OpenHatch
	// void S_OpenHatch(bool Open);                                                                                             // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.S_CloseHatch
	// void S_CloseHatch(bool Close);                                                                                           // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_LandingCraft.BP_LandingCraft_C.ExecuteUbergraph_BP_LandingCraft
	// void ExecuteUbergraph_BP_LandingCraft(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C
/// Size: 0x07EC (2028 bytes) (0x000450 - 0x0007EC) align 16 MaxSize: 0x07EC
class ABP_PlaneBase_C : public ABP_VehicleBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0450   (0x0008)  
	class UParticleSystemComponent*                    WreckageFlamesAndSmoke;                                     // 0x0458   (0x0008)  
	class UStaticMeshComponent*                        LeftBrokenWing;                                             // 0x0460   (0x0008)  
	class UStaticMeshComponent*                        RightBrokenWing;                                            // 0x0468   (0x0008)  
	class UStaticMeshComponent*                        BrokenFuselage;                                             // 0x0470   (0x0008)  
	class UAudioComponent*                             DivingSound;                                                // 0x0478   (0x0008)  
	class UAudioComponent*                             S_FastWindSheer;                                            // 0x0480   (0x0008)  
	class UAudioComponent*                             WarningAlarm;                                               // 0x0488   (0x0008)  
	class UAudioComponent*                             WEPEngineBoostSound;                                        // 0x0490   (0x0008)  
	class UAudioComponent*                             FastFlyingWind;                                             // 0x0498   (0x0008)  
	class UArrowComponent*                             FaceCam;                                                    // 0x04A0   (0x0008)  
	class UStaticMeshComponent*                        AI_FlyTargetDebugSphere;                                    // 0x04A8   (0x0008)  
	class UArrowComponent*                             AI_ArrowBase1;                                              // 0x04B0   (0x0008)  
	class UStaticMeshComponent*                        BackWheel;                                                  // 0x04B8   (0x0008)  
	class UParticleSystemComponent*                    Smoke;                                                      // 0x04C0   (0x0008)  
	class UAudioComponent*                             MGSound;                                                    // 0x04C8   (0x0008)  
	class UNiagaraComponent*                           NS_WingTipTrailRight;                                       // 0x04D0   (0x0008)  
	class UNiagaraComponent*                           NS_WingTipTrailLeft;                                        // 0x04D8   (0x0008)  
	class UAudioComponent*                             EngineSoundIdle;                                            // 0x04E0   (0x0008)  
	class UStaticMeshComponent*                        PlaneModel;                                                 // 0x04E8   (0x0008)  
	class UStaticMeshComponent*                        WheelRight;                                                 // 0x04F0   (0x0008)  
	class UStaticMeshComponent*                        WheelLeft;                                                  // 0x04F8   (0x0008)  
	class UAudioComponent*                             EngineSoundFar;                                             // 0x0500   (0x0008)  
	class UAudioComponent*                             EngineSoundFlying;                                          // 0x0508   (0x0008)  
	class USpringArmComponent*                         SpringArm;                                                  // 0x0510   (0x0008)  
	class UCameraComponent*                            Camera;                                                     // 0x0518   (0x0008)  
	class UStaticMeshComponent*                        PhysicsModel;                                               // 0x0520   (0x0008)  
	float                                              Gear_NewTrack_0_2B721E4044547183BD4B31A26B3DCF7B;           // 0x0528   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Gear__Direction_2B721E4044547183BD4B31A26B3DCF7B;           // 0x052C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x052D   (0x0003)  MISSED
	class UTimelineComponent*                          Gear;                                                       // 0x0530   (0x0008)  
	bool                                               ForwardPressed;                                             // 0x0538   (0x0001)  
	bool                                               BackwardPressed;                                            // 0x0539   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x053A   (0x0002)  MISSED
	float                                              Mouse_Y;                                                    // 0x053C   (0x0004)  
	float                                              Mouse_X;                                                    // 0x0540   (0x0004)  
	bool                                               StrafeLeft;                                                 // 0x0544   (0x0001)  
	bool                                               StrafeRight;                                                // 0x0545   (0x0001)  
	unsigned char                                      UnknownData02_6[0xA];                                       // 0x0546   (0x000A)  MISSED
	FTransform                                         PlaneTransform;                                             // 0x0550   (0x0030)  
	float                                              DesiredSpeed;                                               // 0x0580   (0x0004)  
	float                                              DeltaSeconds;                                               // 0x0584   (0x0004)  
	float                                              PlaneSpeed;                                                 // 0x0588   (0x0004)  
	float                                              ExtraPitchBasedSpeed;                                       // 0x058C   (0x0004)  
	float                                              FinalSpeed;                                                 // 0x0590   (0x0004)  
	float                                              MotorSpeed;                                                 // 0x0594   (0x0004)  
	bool                                               FreeCamPressed;                                             // 0x0598   (0x0001)  
	bool                                               BackwardCamPressed;                                         // 0x0599   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2];                                       // 0x059A   (0x0002)  MISSED
	float                                              Pitch;                                                      // 0x059C   (0x0004)  
	float                                              Roll;                                                       // 0x05A0   (0x0004)  
	bool                                               FireMainWeapon;                                             // 0x05A4   (0x0001)  
	bool                                               InAir;                                                      // 0x05A5   (0x0001)  
	bool                                               FlyingLow;                                                  // 0x05A6   (0x0001)  
	unsigned char                                      UnknownData04_6[0x1];                                       // 0x05A7   (0x0001)  MISSED
	float                                              MinSpeed;                                                   // 0x05A8   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x05AC   (0x0004)  MISSED
	TArray<class UStaticMeshComponent*>                Rotors;                                                     // 0x05B0   (0x0010)  
	TArray<class UStaticMeshComponent*>                RotorWashes;                                                // 0x05C0   (0x0010)  
	TArray<class UStaticMeshComponent*>                Rudders;                                                    // 0x05D0   (0x0010)  
	TArray<class UStaticMeshComponent*>                BackWingFlaps;                                              // 0x05E0   (0x0010)  
	TArray<class UStaticMeshComponent*>                FrontWingFlapsLeft;                                         // 0x05F0   (0x0010)  
	TArray<class UStaticMeshComponent*>                FrontWingFlapsRight;                                        // 0x0600   (0x0010)  
	TArray<class UStaticMeshComponent*>                BackWheels;                                                 // 0x0610   (0x0010)  
	TArray<class UStaticMeshComponent*>                Noses;                                                      // 0x0620   (0x0010)  
	TArray<class UArrowComponent*>                     MachineGunArrows;                                           // 0x0630   (0x0010)  
	float                                              PlaneControl;                                               // 0x0640   (0x0004)  
	float                                              GroundTaxiYaw;                                              // 0x0644   (0x0004)  
	float                                              GroundTaxiYawTarget;                                        // 0x0648   (0x0004)  
	bool                                               AlternateWeaponReloading;                                   // 0x064C   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x064D   (0x0003)  MISSED
	float                                              AlternateWeaponReloadTimer;                                 // 0x0650   (0x0004)  
	float                                              TargetCameraFOV;                                            // 0x0654   (0x0004)  
	TEnumAsByte<E_PlaneStrafingStates>                 StrafingState;                                              // 0x0658   (0x0001)  
	unsigned char                                      UnknownData07_6[0x3];                                       // 0x0659   (0x0003)  MISSED
	float                                              MinimumFlightSpeed;                                         // 0x065C   (0x0004)  
	float                                              GearDeploySpeed;                                            // 0x0660   (0x0004)  
	float                                              MaxPlanePitch;                                              // 0x0664   (0x0004)  
	float                                              MaxPlaneRoll;                                               // 0x0668   (0x0004)  
	float                                              StrafingSpeed;                                              // 0x066C   (0x0004)  
	float                                              GroundSlowDownSpeed;                                        // 0x0670   (0x0004)  
	float                                              GearRetractAngle;                                           // 0x0674   (0x0004)  
	float                                              InAirDetectionDistance;                                     // 0x0678   (0x0004)  
	float                                              BackWheelRetractAmount;                                     // 0x067C   (0x0004)  
	float                                              BackWheelAddition;                                          // 0x0680   (0x0004)  
	unsigned char                                      UnknownData08_6[0x4];                                       // 0x0684   (0x0004)  MISSED
	class UAudioComponent*                             FlyBySoundRef;                                              // 0x0688   (0x0008)  
	FVector                                            LastFlyByLoc;                                               // 0x0690   (0x000C)  
	unsigned char                                      UnknownData09_6[0x4];                                       // 0x069C   (0x0004)  MISSED
	class USoundBase*                                  FlyBySound;                                                 // 0x06A0   (0x0008)  
	class USoundBase*                                  FlyByAfterSound;                                            // 0x06A8   (0x0008)  
	bool                                               RollRight;                                                  // 0x06B0   (0x0001)  
	bool                                               RollLeft;                                                   // 0x06B1   (0x0001)  
	unsigned char                                      UnknownData10_6[0x2];                                       // 0x06B2   (0x0002)  MISSED
	float                                              FlyByTriggerDistance;                                       // 0x06B4   (0x0004)  
	float                                              AI_RollAmount;                                              // 0x06B8   (0x0004)  
	float                                              AI_PitchAmount;                                             // 0x06BC   (0x0004)  
	FVector                                            AI_FlyTargetLocation;                                       // 0x06C0   (0x000C)  
	float                                              AI_TargetDot;                                               // 0x06CC   (0x0004)  
	FVector                                            AI_FlyTargetLocationFinal;                                  // 0x06D0   (0x000C)  
	float                                              AI_DistanceToTarget;                                        // 0x06DC   (0x0004)  
	bool                                               AI_Evade;                                                   // 0x06E0   (0x0001)  
	unsigned char                                      UnknownData11_6[0x7];                                       // 0x06E1   (0x0007)  MISSED
	class AActor*                                      AI_Target;                                                  // 0x06E8   (0x0008)  
	float                                              AI_EvadePitch;                                              // 0x06F0   (0x0004)  
	float                                              AI_EvadeRoll;                                               // 0x06F4   (0x0004)  
	float                                              AI_EvadeRollSide;                                           // 0x06F8   (0x0004)  
	bool                                               AI_TargetInLOS;                                             // 0x06FC   (0x0001)  
	unsigned char                                      UnknownData12_6[0x3];                                       // 0x06FD   (0x0003)  MISSED
	class AActor*                                      AI_OldTarget;                                               // 0x0700   (0x0008)  
	float                                              AI_EvadeDuration;                                           // 0x0708   (0x0004)  
	float                                              AI_PostEvadeDiveAmount;                                     // 0x070C   (0x0004)  
	float                                              AI_TargetSide;                                              // 0x0710   (0x0004)  
	bool                                               LowHealth;                                                  // 0x0714   (0x0001)  
	bool                                               AI_ChasingPlane;                                            // 0x0715   (0x0001)  
	bool                                               AI_BeingChased;                                             // 0x0716   (0x0001)  
	unsigned char                                      UnknownData13_6[0x1];                                       // 0x0717   (0x0001)  MISSED
	float                                              AI_TargetNotInLOSTime;                                      // 0x0718   (0x0004)  
	float                                              SpeedMultiplier;                                            // 0x071C   (0x0004)  
	bool                                               WEPEnabled;                                                 // 0x0720   (0x0001)  
	unsigned char                                      UnknownData14_6[0x3];                                       // 0x0721   (0x0003)  MISSED
	float                                              WEPBoostAmount;                                             // 0x0724   (0x0004)  
	class ABP_PlaneBase_C*                             LastPlaneThatAttackedUs;                                    // 0x0728   (0x0008)  
	class ABP_PlaneBase_C*                             AI_DogFightPlaneTarget;                                     // 0x0730   (0x0008)  
	bool                                               IsStudioPlane;                                              // 0x0738   (0x0001)  
	unsigned char                                      UnknownData15_6[0x3];                                       // 0x0739   (0x0003)  MISSED
	float                                              TotalSpeed;                                                 // 0x073C   (0x0004)  
	float                                              AI_DistanceFromCenterOfMap;                                 // 0x0740   (0x0004)  
	float                                              AI_MaxFlyRange;                                             // 0x0744   (0x0004)  
	float                                              GlobalSpeedMultiplier;                                      // 0x0748   (0x0004)  
	float                                              WEPSoundAmount;                                             // 0x074C   (0x0004)  
	float                                              WindSheerAmount;                                            // 0x0750   (0x0004)  
	bool                                               UseInAirFlyBy;                                              // 0x0754   (0x0001)  
	unsigned char                                      UnknownData16_6[0x3];                                       // 0x0755   (0x0003)  MISSED
	int32_t                                            MachineGunBarrelCounter;                                    // 0x0758   (0x0004)  
	FVector                                            FinalMGProjectileDirection;                                 // 0x075C   (0x000C)  
	float                                              WaterHeight;                                                // 0x0768   (0x0004)  
	float                                              AI_BeingChasedRandomizedSpeed;                              // 0x076C   (0x0004)  
	float                                              AI_DistanceFromImpactCollision;                             // 0x0770   (0x0004)  
	float                                              AI_PerformRollManouvre_Side_;                               // 0x0774   (0x0004)  
	float                                              AI_DistanceBetweenOurAttackerAndUs;                         // 0x0778   (0x0004)  
	bool                                               AI_ChasedByPlayer;                                          // 0x077C   (0x0001)  
	bool                                               AI_CreateDistanceBetweenSelfAndTarget;                      // 0x077D   (0x0001)  
	unsigned char                                      UnknownData17_6[0x2];                                       // 0x077E   (0x0002)  MISSED
	FVector                                            LastVelocityBeforeDestroy;                                  // 0x0780   (0x000C)  
	float                                              DestroyedRemnantVelocity;                                   // 0x078C   (0x0004)  
	bool                                               RotateWreckageToVelocity;                                   // 0x0790   (0x0001)  
	bool                                               AlternateWheelRetractDirection;                             // 0x0791   (0x0001)  
	bool                                               EnableAlternatePlaneWeapon;                                 // 0x0792   (0x0001)  
	unsigned char                                      UnknownData18_6[0x5];                                       // 0x0793   (0x0005)  MISSED
	class UAudioComponent*                             FlyByAfterSoundRef;                                         // 0x0798   (0x0008)  
	int32_t                                            CurrentAlternateWeaponAmount;                               // 0x07A0   (0x0004)  
	int32_t                                            AlternateWeaponAmmoCount;                                   // 0x07A4   (0x0004)  
	float                                              AlternatePlaneWeaponReloadTime;                             // 0x07A8   (0x0004)  
	TEnumAsByte<E_AlternatePlaneWeapons>               AlternatePlaneWeapon;                                       // 0x07AC   (0x0001)  
	unsigned char                                      UnknownData19_6[0x3];                                       // 0x07AD   (0x0003)  MISSED
	int32_t                                            MgDirectDamageAmount;                                       // 0x07B0   (0x0004)  
	int32_t                                            MgAOEDamageAmount;                                          // 0x07B4   (0x0004)  
	float                                              MgFireCDTime;                                               // 0x07B8   (0x0004)  
	float                                              MgAOERadius;                                                // 0x07BC   (0x0004)  
	float                                              PlaneTransformUpdateSpeed;                                  // 0x07C0   (0x0004)  
	bool                                               WasRecentlyOwnVehicle;                                      // 0x07C4   (0x0001)  
	bool                                               WasRecentlyPawnControlled;                                  // 0x07C5   (0x0001)  
	bool                                               CanBeDestroyedWhenEmpty;                                    // 0x07C6   (0x0001)  
	unsigned char                                      UnknownData20_6[0x1];                                       // 0x07C7   (0x0001)  MISSED
	float                                              RotorWashTick;                                              // 0x07C8   (0x0004)  
	float                                              RotorWasTickSpeed;                                          // 0x07CC   (0x0004)  
	TEnumAsByte<E_DamageTypes>                         MGAOEDamageType;                                            // 0x07D0   (0x0001)  
	TEnumAsByte<E_DamageTypes>                         MGDirectDamageType;                                         // 0x07D1   (0x0001)  
	unsigned char                                      UnknownData21_6[0x6];                                       // 0x07D2   (0x0006)  MISSED
	class USoundBase*                                  SlowFireMGSound;                                            // 0x07D8   (0x0008)  
	float                                              MGImpactDecalSize;                                          // 0x07E0   (0x0004)  
	float                                              MGImpactParticleSize;                                       // 0x07E4   (0x0004)  
	float                                              MGTrailWidth;                                               // 0x07E8   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.OnRep_CurrentAlternateWeaponAmount
	// void OnRep_CurrentAlternateWeaponAmount();                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.QuantatizeTransform
	// void QuantatizeTransform(FVector Location, FRotator Rotation, FVector& QuantLocation, FRotator& QuantRotation);          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.GetAlternateWeaponAmmoInfo
	// void GetAlternateWeaponAmmoInfo(int32_t& Current, int32_t& Max);                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.GetAITargetFiringLocation
	// FVector GetAITargetFiringLocation();                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.GetPlaneTransformUpdateSpeed
	// float GetPlaneTransformUpdateSpeed();                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.IsCharacterInSeatOfThisPlane?
	// void IsCharacterInSeatOfThisPlane_(class ABP_Character_C* Character, bool& Yes);                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.OnRep_LowHealth
	// void OnRep_LowHealth();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.AI_GetPossibleCharacterTargets
	// void AI_GetPossibleCharacterTargets(TArray<ABP_Character_C*>& PossibleCharTargets);                                      // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.AI_MaintainRoll
	// void AI_MaintainRoll(float Roll);                                                                                        // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.AI_MaintainPitch
	// void AI_MaintainPitch(float Pitch, float& PitchResult);                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.OnRep_FireMainWeapon
	// void OnRep_FireMainWeapon();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.Gear__FinishedFunc
	// void Gear__FinishedFunc();                                                                                               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.Gear__UpdateFunc
	// void Gear__UpdateFunc();                                                                                                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpActEvt_Break_K2Node_InputActionEvent
	// void InpActEvt_Break_K2Node_InputActionEvent(FKey Key);                                                                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpActEvt_Strafe Left_K2Node_InputActionEvent
	// void InpActEvt_StrafeLeft_K2Node_InputActionEvent(FKey Key);                                                             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpActEvt_Strafe Right_K2Node_InputActionEvent
	// void InpActEvt_StrafeRight_K2Node_InputActionEvent(FKey Key);                                                            // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpActEvt_Look Behind_K2Node_InputActionEvent
	// void InpActEvt_LookBehind_K2Node_InputActionEvent(FKey Key);                                                             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpActEvt_Freelook (Orbit Camera)_K2Node_InputActionEvent
	// void InpActEvt_Freelook_OrbitCamera__K2Node_InputActionEvent(FKey Key);                                                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpActEvt_WEP (Speedboost)_K2Node_InputActionEvent
	// void InpActEvt_WEP_Speedboost__K2Node_InputActionEvent(FKey Key);                                                        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpActEvt_Machineguns_K2Node_InputActionEvent
	// void InpActEvt_Machineguns_K2Node_InputActionEvent(FKey Key);                                                            // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpActEvt_Zoom In (Plane)_K2Node_InputActionEvent
	// void InpActEvt_ZoomIn_Plane__K2Node_InputActionEvent(FKey Key);                                                          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpActEvt_Use Plane Alternate Weapon_K2Node_InputActionEvent
	// void InpActEvt_UsePlaneAlternateWeapon_K2Node_InputActionEvent(FKey Key);                                                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.ReceivePossessed
	// void ReceivePossessed(class AController* NewController);                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.ReceiveUnpossessed
	// void ReceiveUnpossessed(class AController* OldController);                                                               // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.RetractGear
	// void RetractGear();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.DropGear
	// void DropGear();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.MC_FireProjectile
	// void MC_FireProjectile(FVector FlightDirection, FTransform SpawnTransform, class UArrowComponent* Arrow, FVector WeaponProjectileExitLocation, int32_t UniqueProjectileID); // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.S_FireProjectile
	// void S_FireProjectile(FVector FlightDirection, FTransform SpawnTransform, class UArrowComponent* Arrow, FVector WeaponProjectileExitLocation, int32_t UniqueProjectileID); // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.ReceiveHit
	// void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, FVector HitLocation, FVector HitNormal, FVector NormalImpulse, FHitResult& Hit); // [0x1325ea0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.DestroyedRepNotify
	// void DestroyedRepNotify();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.MC_RefreshRotors
	// void MC_RefreshRotors();                                                                                                 // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.MC_Damaged
	// void MC_Damaged(FVector DamageLocation, FVector DamageDirection, int32_t DamageAmount, TEnumAsByte<E_DamageTypes> DamageType, FVector DamageLocationRelative); // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.FireProjectile
	// void FireProjectile(FVector FlightDirection, FTransform& SpawnTransform, class UArrowComponent* Arrow, FVector WeaponProjectileExitLocation, int32_t UniqueProjectileID); // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.S_SharePlaneTransform
	// void S_SharePlaneTransform(FVector Location, FRotator Rotation);                                                         // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.MC_SharePlaneTransform
	// void MC_SharePlaneTransform(FVector Location, FRotator Rotation);                                                        // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.S_SetStrafing
	// void S_SetStrafing(TEnumAsByte<E_PlaneStrafingStates> StrafingState);                                                    // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.MC_EngineStart
	// void MC_EngineStart();                                                                                                   // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.S_FireMainWeapon
	// void S_FireMainWeapon(bool Fire);                                                                                        // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.HealthRepNotify
	// void HealthRepNotify();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.IsPossessedEvent
	// void IsPossessedEvent();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.MC_TerrainCollision
	// void MC_TerrainCollision();                                                                                              // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.TerrainCollision(LocalEffects)
	// void TerrainCollision_LocalEffects_();                                                                                   // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.S_TerrainCollision
	// void S_TerrainCollision();                                                                                               // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.InpAxisEvt_Accelerate_K2Node_InputAxisEvent
	// void InpAxisEvt_Accelerate_K2Node_InputAxisEvent(float AxisValue);                                                       // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.S_DropBomb
	// void S_DropBomb(float Speed, FVector FlightDirection, FVector Location);                                                 // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.MC_BombDrop
	// void MC_BombDrop(FVector Location, float Speed, FVector FlightDirection);                                                // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.BombDrop
	// void BombDrop(FVector FlightDirection, float Speed, FVector Location);                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.AI_UsePlaneAlternateWeapon
	// void AI_UsePlaneAlternateWeapon();                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.AlternateWeaponCustom
	// void AlternateWeaponCustom();                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.S_SetWEP
	// void S_SetWEP(bool WEPEnabled);                                                                                          // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.S_SharePlaneTranformFiller
	// void S_SharePlaneTranformFiller(FVector Location, FRotator Rotation);                                                    // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.MC_SharePlaneTransformFiller
	// void MC_SharePlaneTransformFiller(FVector Location, FRotator Rotation);                                                  // [0x1325ea0] Net|NetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.AlternateWeaponAmountRepNotify
	// void AlternateWeaponAmountRepNotify();                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.S_SetAlternateWeaponReload
	// void S_SetAlternateWeaponReload(bool AlternateWeaponReloading);                                                          // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.AlternateWeaponReloaded(Server)
	// void AlternateWeaponReloaded_Server_();                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.MC_SetPitchRoll
	// void MC_SetPitchRoll(float Pitch, float Roll);                                                                           // [0x1325ea0] Net|NetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.S_SetPitchRoll
	// void S_SetPitchRoll(float Pitch, float Roll);                                                                            // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.S_MotorSpeed
	// void S_MotorSpeed(float MotorSpeed);                                                                                     // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.MC_MotorSpeed
	// void MC_MotorSpeed(float MotorSpeed);                                                                                    // [0x1325ea0] Net|NetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.AI_UseAlternateWeaponCustom
	// void AI_UseAlternateWeaponCustom();                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.GetRandomTarget
	// void GetRandomTarget();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.AttackPlane
	// void AttackPlane(class ABP_PlaneBase_C* Plane);                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.StopChasing
	// void StopChasing();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.StopBeingChased
	// void StopBeingChased();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.StopAttackAndFlyToRandomAirLocationOnMap
	// void StopAttackAndFlyToRandomAirLocationOnMap();                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.ForcePickRandomAirLocationInMap
	// void ForcePickRandomAirLocationInMap();                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.DamagedByPlane(Server)
	// void DamagedByPlane_Server_(class ABP_PlaneBase_C* Plane);                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.ResetFlyAwayTarget
	// void ResetFlyAwayTarget();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.PickRandomAirLocationInMap
	// void PickRandomAirLocationInMap();                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_PlaneBase.BP_PlaneBase_C.ExecuteUbergraph_BP_PlaneBase
	// void ExecuteUbergraph_BP_PlaneBase(int32_t EntryPoint);                                                                  // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Vehicles/BP_Beaufighter.BP_Beaufighter_C
/// Size: 0x0880 (2176 bytes) (0x0007EC - 0x000880) align 16 MaxSize: 0x0880
class ABP_Beaufighter_C : public ABP_PlaneBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x07EC   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x07F0   (0x0008)  
	class UChildActorComponent*                        BackSeatGun;                                                // 0x07F8   (0x0008)  
	class UAudioComponent*                             EngineBass;                                                 // 0x0800   (0x0008)  
	class UStaticMeshComponent*                        RotorRight;                                                 // 0x0808   (0x0008)  
	class UStaticMeshComponent*                        RotorLeft;                                                  // 0x0810   (0x0008)  
	class UParticleSystemComponent*                    Smoke2;                                                     // 0x0818   (0x0008)  
	class UStaticMeshComponent*                        RotorWashLeft;                                              // 0x0820   (0x0008)  
	class UStaticMeshComponent*                        FrontWingFlapRight;                                         // 0x0828   (0x0008)  
	class UStaticMeshComponent*                        FrontWingFlapLeft;                                          // 0x0830   (0x0008)  
	class UStaticMeshComponent*                        BackWingFlapRight;                                          // 0x0838   (0x0008)  
	class UStaticMeshComponent*                        BackWingFlapLeft;                                           // 0x0840   (0x0008)  
	class UStaticMeshComponent*                        Rudder;                                                     // 0x0848   (0x0008)  
	class UStaticMeshComponent*                        RotorWashRight;                                             // 0x0850   (0x0008)  
	class UArrowComponent*                             MGArrowLeft;                                                // 0x0858   (0x0008)  
	class UArrowComponent*                             MGArrowRight;                                               // 0x0860   (0x0008)  
	int32_t                                            RocketVolleyCounter;                                        // 0x0868   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x086C   (0x0004)  MISSED
	TArray<class ABP_VehicleRocket_C*>                 RocketRefs;                                                 // 0x0870   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_Beaufighter.BP_Beaufighter_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Beaufighter.BP_Beaufighter_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Beaufighter.BP_Beaufighter_C.ExecuteUbergraph_BP_Beaufighter
	// void ExecuteUbergraph_BP_Beaufighter(int32_t EntryPoint);                                                                // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Vehicles/BP_P51.BP_P51_C
/// Size: 0x08A8 (2216 bytes) (0x0007EC - 0x0008A8) align 16 MaxSize: 0x08A8
class ABP_P51_C : public ABP_PlaneBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x07EC   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x07F0   (0x0008)  
	class UStaticMeshComponent*                        RocketMesh6;                                                // 0x07F8   (0x0008)  
	class UStaticMeshComponent*                        RocketMesh5;                                                // 0x0800   (0x0008)  
	class UStaticMeshComponent*                        RocketMesh4;                                                // 0x0808   (0x0008)  
	class UStaticMeshComponent*                        RocketMesh3;                                                // 0x0810   (0x0008)  
	class UStaticMeshComponent*                        RocketMesh2;                                                // 0x0818   (0x0008)  
	class UStaticMeshComponent*                        RocketMesh1;                                                // 0x0820   (0x0008)  
	class UStaticMeshComponent*                        Nose;                                                       // 0x0828   (0x0008)  
	class UStaticMeshComponent*                        FrontWingFlapRight;                                         // 0x0830   (0x0008)  
	class UStaticMeshComponent*                        FrontWingFlapLeft;                                          // 0x0838   (0x0008)  
	class UStaticMeshComponent*                        BackWingFlapRight;                                          // 0x0840   (0x0008)  
	class UStaticMeshComponent*                        BackWingFlapLeft;                                           // 0x0848   (0x0008)  
	class UStaticMeshComponent*                        Rudder;                                                     // 0x0850   (0x0008)  
	class UStaticMeshComponent*                        RotorWash;                                                  // 0x0858   (0x0008)  
	class UStaticMeshComponent*                        Rotor;                                                      // 0x0860   (0x0008)  
	class UArrowComponent*                             MGArrowLeft;                                                // 0x0868   (0x0008)  
	class UArrowComponent*                             MGArrowRight;                                               // 0x0870   (0x0008)  
	TArray<class ABP_VehicleRocket_C*>                 RocketRefs;                                                 // 0x0878   (0x0010)  
	FVector                                            RocketFlightDirectionTemp;                                  // 0x0888   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0894   (0x0004)  MISSED
	TArray<class AActor*>                              RocketActorsToIgnoreTemp;                                   // 0x0898   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_P51.BP_P51_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_P51.BP_P51_C.InitVehicleThemeSkin
	// void InitVehicleThemeSkin();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_P51.BP_P51_C.AlternateWeaponCustom
	// void AlternateWeaponCustom();                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_P51.BP_P51_C.DestroyedRepNotify
	// void DestroyedRepNotify();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_P51.BP_P51_C.AI_UseAlternateWeaponCustom
	// void AI_UseAlternateWeaponCustom();                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_P51.BP_P51_C.AlternateWeaponAmountRepNotify
	// void AlternateWeaponAmountRepNotify();                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_P51.BP_P51_C.FireRocketProjectile
	// void FireRocketProjectile(FTransform FireTransform);                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_P51.BP_P51_C.MC_FireRocketProjectile
	// void MC_FireRocketProjectile(FTransform FireTransform);                                                                  // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_P51.BP_P51_C.S_FireRocketProjectile
	// void S_FireRocketProjectile(FTransform FireTransform);                                                                   // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_P51.BP_P51_C.S_ReduceRocketAmount
	// void S_ReduceRocketAmount();                                                                                             // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_P51.BP_P51_C.ExecuteUbergraph_BP_P51
	// void ExecuteUbergraph_BP_P51(int32_t EntryPoint);                                                                        // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C
/// Size: 0x0362 (866 bytes) (0x000220 - 0x000362) align 8 MaxSize: 0x0362
class ABP_EquipableBase_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UStaticMeshComponent*                        EffectMesh;                                                 // 0x0228   (0x0008)  
	class UArrowComponent*                             LeftHandLocation;                                           // 0x0230   (0x0008)  
	class UArrowComponent*                             ActualHandLocation;                                         // 0x0238   (0x0008)  
	class UStaticMeshComponent*                        MagazineMesh;                                               // 0x0240   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x0248   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0250   (0x0008)  
	float                                              EffectMeshFade_NewTrack_0_088F12CC4E95EB043BF708B8F8560554; // 0x0258   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    EffectMeshFade__Direction_088F12CC4E95EB043BF708B8F8560554; // 0x025C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x025D   (0x0003)  MISSED
	class UTimelineComponent*                          EffectMeshFade;                                             // 0x0260   (0x0008)  
	bool                                               Using;                                                      // 0x0268   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0269   (0x0003)  MISSED
	float                                              SwapAnimationSpeed;                                         // 0x026C   (0x0004)  
	float                                              FireAnimationSpeed;                                         // 0x0270   (0x0004)  
	float                                              WalkingPoseSprintBleedThroughAlpha;                         // 0x0274   (0x0004)  
	bool                                               UseIKForLeftHand;                                           // 0x0278   (0x0001)  
	bool                                               UseIKWhileSprinting;                                        // 0x0279   (0x0001)  
	bool                                               UseIKWhileInAir;                                            // 0x027A   (0x0001)  
	unsigned char                                      UnknownData02_6[0x5];                                       // 0x027B   (0x0005)  MISSED
	class UAnimMontage*                                WeaponSwapMontage;                                          // 0x0280   (0x0008)  
	TEnumAsByte<E_WeaponCrosshairStyles>               CrosshairStyle;                                             // 0x0288   (0x0001)  
	TEnumAsByte<E_WeaponPoses>                         EquipablePose;                                              // 0x0289   (0x0001)  
	bool                                               InacurateCloseby;                                           // 0x028A   (0x0001)  
	unsigned char                                      UnknownData03_6[0x5];                                       // 0x028B   (0x0005)  MISSED
	class ABP_Character_C*                             OwningCharacter;                                            // 0x0290   (0x0008)  
	int32_t                                            SkinIndex;                                                  // 0x0298   (0x0004)  
	bool                                               SkinLoaded_Client_;                                         // 0x029C   (0x0001)  
	bool                                               EnableSkins;                                                // 0x029D   (0x0001)  
	bool                                               MainlyWoodenWeapon_skins_;                                  // 0x029E   (0x0001)  
	bool                                               IsTemporaryEquipable;                                       // 0x029F   (0x0001)  
	bool                                               SlowDownWhenUsing_HaltSprint_;                              // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x02A1   (0x0003)  MISSED
	float                                              LaunchForceOnDamage;                                        // 0x02A4   (0x0004)  
	float                                              SpineRotationOffset;                                        // 0x02A8   (0x0004)  
	float                                              SpineRotationOffsetWhileAiming;                             // 0x02AC   (0x0004)  
	float                                              SpinePitchOffset;                                           // 0x02B0   (0x0004)  
	float                                              LeftArmPitchOffset;                                         // 0x02B4   (0x0004)  
	float                                              LeftArmPitchOffsetWhileAiming;                              // 0x02B8   (0x0004)  
	float                                              LeftArmPitchOffsetWhileSprinting;                           // 0x02BC   (0x0004)  
	float                                              LeftArmYawOffset;                                           // 0x02C0   (0x0004)  
	float                                              LeftArmYawOffsetWhileSprinting;                             // 0x02C4   (0x0004)  
	float                                              RightHandCloseAmount;                                       // 0x02C8   (0x0004)  
	float                                              LeftHandTiltAmount;                                         // 0x02CC   (0x0004)  
	float                                              LeftHandCloseAmount;                                        // 0x02D0   (0x0004)  
	float                                              LeftHandCloseAmountWhileAiming;                             // 0x02D4   (0x0004)  
	float                                              LeftHandCloseAmountWhileSprinting;                          // 0x02D8   (0x0004)  
	float                                              LeftHandThumbCloseAmount;                                   // 0x02DC   (0x0004)  
	float                                              LeftHandThumbCloseAmountWhileAiming;                        // 0x02E0   (0x0004)  
	float                                              LeftHandThumbCloseAmountWhileSprinting;                     // 0x02E4   (0x0004)  
	float                                              EquipSoundPitch;                                            // 0x02E8   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x02EC   (0x0004)  MISSED
	class UStaticMesh*                                 NonEmptyMesh;                                               // 0x02F0   (0x0008)  
	bool                                               CurrentlyEquiped;                                           // 0x02F8   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x02F9   (0x0003)  MISSED
	float                                              CanUseAfterSwapDelayTime;                                   // 0x02FC   (0x0004)  
	float                                              AI_AimTilt_Ballistics_;                                     // 0x0300   (0x0004)  
	unsigned char                                      UnknownData07_6[0x4];                                       // 0x0304   (0x0004)  MISSED
	class UStaticMesh*                                 EmptyMesh_DuringReload_;                                    // 0x0308   (0x0008)  
	class UAnimSequence*                               WeaponIdlePose;                                             // 0x0310   (0x0008)  
	class UAnimSequence*                               WeaponHipPose;                                              // 0x0318   (0x0008)  
	class UAnimSequence*                               WeaponAimPose;                                              // 0x0320   (0x0008)  
	class UAnimSequence*                               ReloadAnimation;                                            // 0x0328   (0x0008)  
	class UAnimSequence*                               WalkingPose;                                                // 0x0330   (0x0008)  
	class UAnimSequence*                               SprintPose;                                                 // 0x0338   (0x0008)  
	TEnumAsByte<E_EquipableSprintStyles>               SprintStyle;                                                // 0x0340   (0x0001)  
	unsigned char                                      UnknownData08_6[0x7];                                       // 0x0341   (0x0007)  MISSED
	class UAnimSequence*                               RightHandPose;                                              // 0x0348   (0x0008)  
	class UAnimSequence*                               LeftHandPose;                                               // 0x0350   (0x0008)  
	bool                                               EnableWeaponEffects;                                        // 0x0358   (0x0001)  
	bool                                               DisableTorsoYawWhileReloading;                              // 0x0359   (0x0001)  
	unsigned char                                      UnknownData09_6[0x2];                                       // 0x035A   (0x0002)  MISSED
	float                                              AimingFOVNew;                                               // 0x035C   (0x0004)  
	bool                                               EnableNeckTiltWhenAiming;                                   // 0x0360   (0x0001)  
	bool                                               CombineDamageNumbers;                                       // 0x0361   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.GetSkinIndex
	// void GetSkinIndex(int32_t& SkinIndex);                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.IsCurrentlyEquiped?
	// void IsCurrentlyEquiped_(bool& Equiped);                                                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.CheckIfOwnerOfThisWeapon
	// void CheckIfOwnerOfThisWeapon(bool& IsOwner);                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.OnRep_SkinIndex
	// void OnRep_SkinIndex();                                                                                                  // [0x1325ea0] HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.EffectMeshFade__FinishedFunc
	// void EffectMeshFade__FinishedFunc();                                                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.EffectMeshFade__UpdateFunc
	// void EffectMeshFade__UpdateFunc();                                                                                       // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.Use
	// void Use();                                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.StopUse
	// void StopUse();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.UsingStateChanged
	// void UsingStateChanged();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.WeaponUsed(NonAutoRepeating)
	// void WeaponUsed_NonAutoRepeating_();                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.EquipedStateChanged
	// void EquipedStateChanged(bool Equiped);                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.S_LoadSkin
	// void S_LoadSkin(int32_t SkinIndex);                                                                                      // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.HideWeapon
	// void HideWeapon();                                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.UnhideWeapon
	// void UnhideWeapon();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.Reload
	// void Reload();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.OC_Reload
	// void OC_Reload();                                                                                                        // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.S_SimpleProjectileHit
	// void S_SimpleProjectileHit(class AActor* HitActor, FVector HitLocation);                                                 // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_EquipableBase.BP_EquipableBase_C.ExecuteUbergraph_BP_EquipableBase
	// void ExecuteUbergraph_BP_EquipableBase(int32_t EntryPoint);                                                              // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C
/// Size: 0x03F0 (1008 bytes) (0x000362 - 0x0003F0) align 16 MaxSize: 0x03F0
class ABP_MeleeBase_C : public ABP_EquipableBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x6];                                       // 0x0362   (0x0006)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0368   (0x0008)  
	class UParticleSystemComponent*                    Poison;                                                     // 0x0370   (0x0008)  
	float                                              KnifeThrowMode_YLocation_9F3F43AA475D87E903958D80F259E3C0;  // 0x0378   (0x0004)  
	float                                              KnifeThrowMode_Rotation_9F3F43AA475D87E903958D80F259E3C0;   // 0x037C   (0x0004)  
	float                                              KnifeThrowMode_ZLocation_9F3F43AA475D87E903958D80F259E3C0;  // 0x0380   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    KnifeThrowMode__Direction_9F3F43AA475D87E903958D80F259E3C0; // 0x0384   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0385   (0x0003)  MISSED
	class UTimelineComponent*                          KnifeThrowMode;                                             // 0x0388   (0x0008)  
	TArray<class AActor*>                              HitActors;                                                  // 0x0390   (0x0010)  
	bool                                               CanSwapStates;                                              // 0x03A0   (0x0001)  
	bool                                               ThrowingMode;                                               // 0x03A1   (0x0001)  
	bool                                               SwappingStates;                                             // 0x03A2   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x03A3   (0x0001)  MISSED
	int32_t                                            AttackCounter;                                              // 0x03A4   (0x0004)  
	bool                                               OnCooldown;                                                 // 0x03A8   (0x0001)  
	bool                                               CanThrow;                                                   // 0x03A9   (0x0001)  
	unsigned char                                      UnknownData03_6[0x6];                                       // 0x03AA   (0x0006)  MISSED
	FTransform                                         InitialTransform;                                           // 0x03B0   (0x0030)  
	float                                              CoolDownTime;                                               // 0x03E0   (0x0004)  
	float                                              Delta_Seconds;                                              // 0x03E4   (0x0004)  
	class UClass*                                      MeleeProjectileClass;                                       // 0x03E8   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.CheckObstacle
	// void CheckObstacle(class ABP_Character_C* Character, bool& ObstacleDetected);                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.OnRep_OnCooldown
	// void OnRep_OnCooldown();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.KnifeThrowMode__FinishedFunc
	// void KnifeThrowMode__FinishedFunc();                                                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.KnifeThrowMode__UpdateFunc
	// void KnifeThrowMode__UpdateFunc();                                                                                       // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.Use
	// void Use();                                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.MC_MeleeHit
	// void MC_MeleeHit(class USceneComponent* AttachToComponent, FVector Location, bool FleshHit);                             // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.S_MeleeHit
	// void S_MeleeHit(FVector Location, class USceneComponent* AttachToComponent, bool FleshHit, class AActor*& HitActor);     // [0x1325ea0] Net|NetReliableNetServer|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.MeleeHit
	// void MeleeHit(class USceneComponent* AttachToComponent, bool FleshHit, FVector BackupLocation, class AActor*& HitActor); // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.EnterThrowMode
	// void EnterThrowMode();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.EnterStabMode
	// void EnterStabMode();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.S_SetOnCooldown
	// void S_SetOnCooldown(bool OnCooldown);                                                                                   // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.S_MeleeThrow
	// void S_MeleeThrow();                                                                                                     // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.MC_MeleeThrow
	// void MC_MeleeThrow();                                                                                                    // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.SpawnMeleeProjectile
	// void SpawnMeleeProjectile(FTransform SpawnTransform, FVector TravelDirection);                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.MC_SpawnMeleeProjectile
	// void MC_SpawnMeleeProjectile(FTransform SpawnTransform, FVector TravelDirection);                                        // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.S_SpawnMeleeProjectile
	// void S_SpawnMeleeProjectile(FTransform SpawnTransform, FVector TravelDirection);                                         // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.S_SimpleProjectileHit
	// void S_SimpleProjectileHit(class AActor* HitActor, FVector HitLocation);                                                 // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_MeleeBase.BP_MeleeBase_C.ExecuteUbergraph_BP_MeleeBase
	// void ExecuteUbergraph_BP_MeleeBase(int32_t EntryPoint);                                                                  // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C
/// Size: 0x03F4 (1012 bytes) (0x000362 - 0x0003F4) align 8 MaxSize: 0x03F4
class ABP_Throwablebase_C : public ABP_EquipableBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x6];                                       // 0x0362   (0x0006)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0368   (0x0008)  
	bool                                               Thrown;                                                     // 0x0370   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0371   (0x0003)  MISSED
	int32_t                                            ThrownGrenades;                                             // 0x0374   (0x0004)  
	bool                                               CanThrow;                                                   // 0x0378   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0379   (0x0007)  MISSED
	class UClass*                                      ThrowableProjectileClass;                                   // 0x0380   (0x0008)  
	class UClass*                                      TrapClass;                                                  // 0x0388   (0x0008)  
	int32_t                                            AOEDamage;                                                  // 0x0390   (0x0004)  
	float                                              AOERadius;                                                  // 0x0394   (0x0004)  
	float                                              ReloadTime;                                                 // 0x0398   (0x0004)  
	float                                              ThrowForce;                                                 // 0x039C   (0x0004)  
	class UParticleSystem*                             ImpactParticle;                                             // 0x03A0   (0x0008)  
	class USoundBase*                                  ImpactSound;                                                // 0x03A8   (0x0008)  
	class USoundBase*                                  ThrowSound;                                                 // 0x03B0   (0x0008)  
	float                                              ImpactParticleSizeMultiplier;                               // 0x03B8   (0x0004)  
	float                                              ImpactSoundPitch;                                           // 0x03BC   (0x0004)  
	float                                              ImpactDecalSize;                                            // 0x03C0   (0x0004)  
	TEnumAsByte<E_DamageTypes>                         AOEDamageType;                                              // 0x03C4   (0x0001)  
	bool                                               EnableLaunchOnDamage;                                       // 0x03C5   (0x0001)  
	bool                                               IsSkill;                                                    // 0x03C6   (0x0001)  
	unsigned char                                      UnknownData03_6[0x1];                                       // 0x03C7   (0x0001)  MISSED
	int32_t                                            ThrowableAmount;                                            // 0x03C8   (0x0004)  
	bool                                               Loaded;                                                     // 0x03CC   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x03CD   (0x0003)  MISSED
	float                                              ReloadTimer;                                                // 0x03D0   (0x0004)  
	bool                                               ShouldBreakInvisbility;                                     // 0x03D4   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x03D5   (0x0003)  MISSED
	int32_t                                            LastPreferedEquipable;                                      // 0x03D8   (0x0004)  
	int32_t                                            FinalChosenEquipableToSwapTo;                               // 0x03DC   (0x0004)  
	class UAnimMontage*                                ThrowAnimation;                                             // 0x03E0   (0x0008)  
	float                                              ProjectileSpawnDelay;                                       // 0x03E8   (0x0004)  
	int32_t                                            ServerCallCount;                                            // 0x03EC   (0x0004)  
	float                                              SwapToPreferedEquipableDelay;                               // 0x03F0   (0x0004)  


	/// Functions
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.GetReloadInfo
	// void GetReloadInfo(bool& Reloading, float& ReloadPercentage);                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.OnRep_Thrown
	// void OnRep_Thrown();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.Use
	// void Use();                                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.S_ThrowGrenades
	// void S_ThrowGrenades(FVector ThrowDirection, FVector SSpawnLocation, FST_ThrowableData ThrowableData);                   // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.MC_GrenadeThrow
	// void MC_GrenadeThrow();                                                                                                  // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.S_GrenadeThrow
	// void S_GrenadeThrow();                                                                                                   // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.GrenadeThrow
	// void GrenadeThrow();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.EndUsage
	// void EndUsage();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.S_ResetThrowable
	// void S_ResetThrowable();                                                                                                 // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_Throwablebase.BP_Throwablebase_C.ExecuteUbergraph_BP_Throwablebase
	// void ExecuteUbergraph_BP_Throwablebase(int32_t EntryPoint);                                                              // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Equipables/Throwables/BP_TNT.BP_TNT_C
/// Size: 0x03F4 (1012 bytes) (0x0003F4 - 0x0003F4) align 8 MaxSize: 0x03F4
class ABP_TNT_C : public ABP_Throwablebase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/Throwables/BP_SingleGrenadeAllied.BP_SingleGrenadeAllied_C
/// Size: 0x03F4 (1012 bytes) (0x0003F4 - 0x0003F4) align 8 MaxSize: 0x03F4
class ABP_SingleGrenadeAllied_C : public ABP_Throwablebase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/Throwables/BP_PoisonTrapThrowable_Allied.BP_PoisonTrapThrowable_Allied_C
/// Size: 0x03F4 (1012 bytes) (0x0003F4 - 0x0003F4) align 8 MaxSize: 0x03F4
class ABP_PoisonTrapThrowable_Allied_C : public ABP_SingleGrenadeAllied_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/Throwables/BP_GrenadeVolleyAllied.BP_GrenadeVolleyAllied_C
/// Size: 0x0408 (1032 bytes) (0x0003F4 - 0x000408) align 8 MaxSize: 0x0408
class ABP_GrenadeVolleyAllied_C : public ABP_Throwablebase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x03F4   (0x0004)  MISSED
	class UStaticMeshComponent*                        StaticMesh2;                                                // 0x03F8   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh1;                                                // 0x0400   (0x0008)  
};

/// Class /Game/Blueprints/Equipables/Throwables/AxisCounterparts/BP_SingleGrenadeAxis.BP_SingleGrenadeAxis_C
/// Size: 0x03F4 (1012 bytes) (0x0003F4 - 0x0003F4) align 8 MaxSize: 0x03F4
class ABP_SingleGrenadeAxis_C : public ABP_SingleGrenadeAllied_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/Throwables/AxisCounterparts/BP_PoisonTrapThrowable_Axis.BP_PoisonTrapThrowable_Axis_C
/// Size: 0x03F4 (1012 bytes) (0x0003F4 - 0x0003F4) align 8 MaxSize: 0x03F4
class ABP_PoisonTrapThrowable_Axis_C : public ABP_PoisonTrapThrowable_Allied_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/Throwables/AxisCounterparts/BP_GrenadeVolleyAxis.BP_GrenadeVolleyAxis_C
/// Size: 0x0408 (1032 bytes) (0x000408 - 0x000408) align 8 MaxSize: 0x0408
class ABP_GrenadeVolleyAxis_C : public ABP_GrenadeVolleyAllied_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/MeleeWeapons/BP_Bayonet.BP_Bayonet_C
/// Size: 0x03F0 (1008 bytes) (0x0003F0 - 0x0003F0) align 16 MaxSize: 0x03F0
class ABP_Bayonet_C : public ABP_MeleeBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/MeleeWeapons/BP_Dagger.BP_Dagger_C
/// Size: 0x03F0 (1008 bytes) (0x0003F0 - 0x0003F0) align 16 MaxSize: 0x03F0
class ABP_Dagger_C : public ABP_Bayonet_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C
/// Size: 0x03B4 (948 bytes) (0x000362 - 0x0003B4) align 8 MaxSize: 0x03B4
class ABP_HealingSyringe_C : public ABP_EquipableBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x6];                                       // 0x0362   (0x0006)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0368   (0x0008)  
	class UStaticMeshComponent*                        Syringe_Head;                                               // 0x0370   (0x0008)  
	class UArrowComponent*                             Arrow;                                                      // 0x0378   (0x0008)  
	bool                                               Loaded;                                                     // 0x0380   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0381   (0x0003)  MISSED
	float                                              ReloadTimer;                                                // 0x0384   (0x0004)  
	float                                              ReloadTime;                                                 // 0x0388   (0x0004)  
	int32_t                                            CurrentAmmo;                                                // 0x038C   (0x0004)  
	int32_t                                            MaxAmmo;                                                    // 0x0390   (0x0004)  
	bool                                               ShowSyringeHead;                                            // 0x0394   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0395   (0x0003)  MISSED
	TArray<FHitResult>                                 LastHits;                                                   // 0x0398   (0x0010)  
	FVector                                            Travel_Direction;                                           // 0x03A8   (0x000C)  


	/// Functions
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.OnRep_Loaded
	// void OnRep_Loaded();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.Use
	// void Use();                                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.S_HealEffects
	// void S_HealEffects(FVector HealLocation, class ABP_Character_C* Character);                                              // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.MC_HealEffects
	// void MC_HealEffects(FVector HealLocation, class ABP_Character_C* Character);                                             // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.LaunchHealProjectile
	// void LaunchHealProjectile(int32_t RemainingAmmo);                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.S_SetLoadedState
	// void S_SetLoadedState(bool Loaded);                                                                                      // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.Reload
	// void Reload();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.OC_Reload
	// void OC_Reload();                                                                                                        // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.S_LaunchInjector
	// void S_LaunchInjector();                                                                                                 // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.MC_LaunchInjector
	// void MC_LaunchInjector();                                                                                                // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.S_SetSyringeHeadVisibility
	// void S_SetSyringeHeadVisibility(bool ShowSyringeHead);                                                                   // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/Tools/BP_HealingSyringe.BP_HealingSyringe_C.ExecuteUbergraph_BP_HealingSyringe
	// void ExecuteUbergraph_BP_HealingSyringe(int32_t EntryPoint);                                                             // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Equipables/Tools/BP_HealingSyringe_Axis.BP_HealingSyringe_Axis_C
/// Size: 0x03B4 (948 bytes) (0x0003B4 - 0x0003B4) align 8 MaxSize: 0x03B4
class ABP_HealingSyringe_Axis_C : public ABP_HealingSyringe_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/Throwables/BP_Keg.BP_Keg_C
/// Size: 0x03F4 (1012 bytes) (0x0003F4 - 0x0003F4) align 8 MaxSize: 0x03F4
class ABP_Keg_C : public ABP_Throwablebase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C
/// Size: 0x0605 (1541 bytes) (0x000362 - 0x000605) align 16 MaxSize: 0x0605
class ABP_RangedWeaponBase_C : public ABP_EquipableBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x6];                                       // 0x0362   (0x0006)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0368   (0x0008)  
	class UArrowComponent*                             SightLocation_Scope_;                                       // 0x0370   (0x0008)  
	class UAudioComponent*                             FireSound;                                                  // 0x0378   (0x0008)  
	class UPointLightComponent*                        PointLight;                                                 // 0x0380   (0x0008)  
	class UArrowComponent*                             BulletEjectLocation;                                        // 0x0388   (0x0008)  
	class UAudioComponent*                             ReloadSound;                                                // 0x0390   (0x0008)  
	class UArrowComponent*                             ProjectileStartLocation;                                    // 0x0398   (0x0008)  
	float                                              MuzzleFlashLight_NewTrack_0_8181B19A45124201F29B1282F21B2AFA; // 0x03A0   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    MuzzleFlashLight__Direction_8181B19A45124201F29B1282F21B2AFA; // 0x03A4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x03A5   (0x0003)  MISSED
	class UTimelineComponent*                          MuzzleFlashLight;                                           // 0x03A8   (0x0008)  
	class USoundBase*                                  SingleShotFireSound;                                        // 0x03B0   (0x0008)  
	class USoundBase*                                  ClipEmptySound;                                             // 0x03B8   (0x0008)  
	class USoundBase*                                  ImpactSound;                                                // 0x03C0   (0x0008)  
	class USoundBase*                                  InsertMagSoundEffect;                                       // 0x03C8   (0x0008)  
	class USoundBase*                                  RemoveMagSoundEffect;                                       // 0x03D0   (0x0008)  
	class USoundBase*                                  FinishedReloadSoundEffect;                                  // 0x03D8   (0x0008)  
	class UParticleSystem*                             FireParticleEffect;                                         // 0x03E0   (0x0008)  
	int32_t                                            Ammo;                                                       // 0x03E8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x03EC   (0x0004)  MISSED
	class UParticleSystem*                             ImpactParticleEffect;                                       // 0x03F0   (0x0008)  
	class UParticleSystem*                             VehicleImpactParticle;                                      // 0x03F8   (0x0008)  
	class UAnimMontage*                                FireAnimation;                                              // 0x0400   (0x0008)  
	class UAnimMontage*                                HipFireMontageAnimation;                                    // 0x0408   (0x0008)  
	bool                                               UseHitScan;                                                 // 0x0410   (0x0001)  
	TEnumAsByte<E_WeaponRange>                         WeaponRange;                                                // 0x0411   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2];                                       // 0x0412   (0x0002)  MISSED
	int32_t                                            MagazineSize;                                               // 0x0414   (0x0004)  
	bool                                               FullyLoaded;                                                // 0x0418   (0x0001)  
	bool                                               PreLoaded;                                                  // 0x0419   (0x0001)  
	unsigned char                                      UnknownData04_6[0x2];                                       // 0x041A   (0x0002)  MISSED
	float                                              ReloadTimer;                                                // 0x041C   (0x0004)  
	int32_t                                            DirectDamageAmount;                                         // 0x0420   (0x0004)  
	TEnumAsByte<E_DamageTypes>                         DirectDamageType;                                           // 0x0424   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x0425   (0x0003)  MISSED
	int32_t                                            ProjectileAmount_PerShot_;                                  // 0x0428   (0x0004)  
	float                                              FireRateCD;                                                 // 0x042C   (0x0004)  
	float                                              ReloadTime_Cooldown_;                                       // 0x0430   (0x0004)  
	bool                                               EnableRecoil;                                               // 0x0434   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x0435   (0x0003)  MISSED
	float                                              RecoilAmount_HipFire_;                                      // 0x0438   (0x0004)  
	float                                              RecoilAmount_WhileAiming_;                                  // 0x043C   (0x0004)  
	bool                                               EnableSidewaysRecoil;                                       // 0x0440   (0x0001)  
	bool                                               UseRandomRecoil;                                            // 0x0441   (0x0001)  
	unsigned char                                      UnknownData07_6[0x2];                                       // 0x0442   (0x0002)  MISSED
	float                                              SpreadAmount;                                               // 0x0444   (0x0004)  
	float                                              HipFireSpreadAmountMultiplier;                              // 0x0448   (0x0004)  
	float                                              HipFireExtraAddedRandomSpread;                              // 0x044C   (0x0004)  
	int32_t                                            AOEDamageAmount;                                            // 0x0450   (0x0004)  
	float                                              AOERadius;                                                  // 0x0454   (0x0004)  
	TEnumAsByte<E_DamageTypes>                         AOEDamageType;                                              // 0x0458   (0x0001)  
	bool                                               IgnoreAOERadius_AlwaysDealFullDMG_;                         // 0x0459   (0x0001)  
	bool                                               EnableDamageMultiplierOnAOE;                                // 0x045A   (0x0001)  
	unsigned char                                      UnknownData08_6[0x1];                                       // 0x045B   (0x0001)  MISSED
	float                                              WeaponAimZoomFOV;                                           // 0x045C   (0x0004)  
	float                                              ProjectileSpeed;                                            // 0x0460   (0x0004)  
	float                                              Delta_Seconds;                                              // 0x0464   (0x0004)  
	bool                                               Firing;                                                     // 0x0468   (0x0001)  
	unsigned char                                      UnknownData09_6[0x3];                                       // 0x0469   (0x0003)  MISSED
	float                                              ProjectileDropRate;                                         // 0x046C   (0x0004)  
	class UClass*                                      ProjectileClass;                                            // 0x0470   (0x0008)  
	bool                                               UseSimpleDirectionCalculation;                              // 0x0478   (0x0001)  
	bool                                               EnableHeadshots;                                            // 0x0479   (0x0001)  
	bool                                               EnableSpreadMultiplier_FromSkills_;                         // 0x047A   (0x0001)  
	bool                                               EnableAutoFire;                                             // 0x047B   (0x0001)  
	bool                                               CanOverrideFireRate;                                        // 0x047C   (0x0001)  
	bool                                               BoltActionRifle;                                            // 0x047D   (0x0001)  
	bool                                               ScopedWeapon;                                               // 0x047E   (0x0001)  
	bool                                               EnableAimInaccuracyForAI;                                   // 0x047F   (0x0001)  
	float                                              AI_MaxAimInaccuracy;                                        // 0x0480   (0x0004)  
	bool                                               EnableRandomAIFireCD;                                       // 0x0484   (0x0001)  
	bool                                               EnableBulletEjectAfterEachShot;                             // 0x0485   (0x0001)  
	unsigned char                                      UnknownData10_6[0x2];                                       // 0x0486   (0x0002)  MISSED
	float                                              OtherPlayerWeaponSoundVolume;                               // 0x0488   (0x0004)  
	float                                              ownWeaponSoundVolume;                                       // 0x048C   (0x0004)  
	bool                                               CanFire;                                                    // 0x0490   (0x0001)  
	bool                                               EnableBulletEjectWhenEmpty;                                 // 0x0491   (0x0001)  
	unsigned char                                      UnknownData11_6[0x2];                                       // 0x0492   (0x0002)  MISSED
	float                                              BulletEjectAfterEmptyDelay;                                 // 0x0494   (0x0004)  
	bool                                               AttachToLeftHandWhileReloading;                             // 0x0498   (0x0001)  
	bool                                               CreateBulletTrail;                                          // 0x0499   (0x0001)  
	bool                                               UseLongTrail;                                               // 0x049A   (0x0001)  
	bool                                               EnableWeaponCockAnimation;                                  // 0x049B   (0x0001)  
	bool                                               EnableAimSway;                                              // 0x049C   (0x0001)  
	bool                                               EnableDryFireSoundWhenEmpty;                                // 0x049D   (0x0001)  
	unsigned char                                      UnknownData12_6[0x2];                                       // 0x049E   (0x0002)  MISSED
	class UClass*                                      FireCameraShake;                                            // 0x04A0   (0x0008)  
	float                                              MuzzleSize;                                                 // 0x04A8   (0x0004)  
	float                                              MuzzleHeightAboveBarrelOffset;                              // 0x04AC   (0x0004)  
	float                                              ImpactParticleSize;                                         // 0x04B0   (0x0004)  
	float                                              ImpactDecalSize;                                            // 0x04B4   (0x0004)  
	float                                              FireCameraShakeAmount;                                      // 0x04B8   (0x0004)  
	bool                                               WeaponInMainHand;                                           // 0x04BC   (0x0001)  
	bool                                               WeaponAttachedToLeftHand;                                   // 0x04BD   (0x0001)  
	unsigned char                                      UnknownData13_6[0x2];                                       // 0x04BE   (0x0002)  MISSED
	float                                              MuzzleLightIntensity;                                       // 0x04C0   (0x0004)  
	float                                              MuzzleLightMaxRandomIntensity;                              // 0x04C4   (0x0004)  
	bool                                               RecentlyFiredAll;                                           // 0x04C8   (0x0001)  
	bool                                               SingleFireRequest;                                          // 0x04C9   (0x0001)  
	unsigned char                                      UnknownData14_6[0x2];                                       // 0x04CA   (0x0002)  MISSED
	FVector                                            FinalFlightDirection;                                       // 0x04CC   (0x000C)  
	float                                              FireDelayAfterSprint;                                       // 0x04D8   (0x0004)  
	float                                              AnimationRecoilAmount;                                      // 0x04DC   (0x0004)  
	float                                              AnimationHandRecoilAmount;                                  // 0x04E0   (0x0004)  
	float                                              ReloadPercentageUntilHideMag;                               // 0x04E4   (0x0004)  
	float                                              ReloadPercentageUntilShowMagAgain;                          // 0x04E8   (0x0004)  
	float                                              WeaponReloadSpeedMultiplier_NonFramebasedReloads_;          // 0x04EC   (0x0004)  
	FVector                                            EjectedBulletCaseSize;                                      // 0x04F0   (0x000C)  
	unsigned char                                      UnknownData15_6[0x4];                                       // 0x04FC   (0x0004)  MISSED
	class UParticleSystem*                             ProjectileTracerType;                                       // 0x0500   (0x0008)  
	float                                              FireRateSpeedPercentage;                                    // 0x0508   (0x0004)  
	bool                                               EnableFireArmAnimation;                                     // 0x050C   (0x0001)  
	unsigned char                                      UnknownData16_6[0x3];                                       // 0x050D   (0x0003)  MISSED
	float                                              FireArmAnimationPitchOffset;                                // 0x0510   (0x0004)  
	float                                              ServerFireCallTimeSpan;                                     // 0x0514   (0x0004)  
	int32_t                                            ServerFireCalls;                                            // 0x0518   (0x0004)  
	unsigned char                                      UnknownData17_6[0x4];                                       // 0x051C   (0x0004)  MISSED
	TArray<FVector>                                    ProjectileDirectionsTemp;                                   // 0x0520   (0x0010)  
	TArray<int32_t>                                    ProjectileIDs;                                              // 0x0530   (0x0010)  
	bool                                               AttachMuzzleToWeapon;                                       // 0x0540   (0x0001)  
	unsigned char                                      UnknownData18_6[0xF];                                       // 0x0541   (0x000F)  MISSED
	FTransform                                         OriginalRelativeTransform_WeaponMesh;                       // 0x0550   (0x0030)  
	FTransform                                         OriginalRelativeTransform_LeftHandLoc;                      // 0x0580   (0x0030)  
	FTransform                                         LeftHandSocketTransform;                                    // 0x05B0   (0x0030)  
	float                                              FireRateDCForValidation;                                    // 0x05E0   (0x0004)  
	float                                              FireSpineAnimationAmount;                                   // 0x05E4   (0x0004)  
	bool                                               EnableReloadMeshStates;                                     // 0x05E8   (0x0001)  
	TEnumAsByte<E_ScopeType>                           ScopeType;                                                  // 0x05E9   (0x0001)  
	bool                                               ReloadLockedFromFiring;                                     // 0x05EA   (0x0001)  
	unsigned char                                      UnknownData19_6[0x5];                                       // 0x05EB   (0x0005)  MISSED
	class UParticleSystemComponent*                    MuzzleParticle;                                             // 0x05F0   (0x0008)  
	class UParticleSystemComponent*                    MuzzleSmokeParticle;                                        // 0x05F8   (0x0008)  
	float                                              ReloadSoundDelay;                                           // 0x0600   (0x0004)  
	bool                                               UseFireEffectFrameDelay;                                    // 0x0604   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.IsGunPointingFOrward
	// bool IsGunPointingFOrward();                                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.GetFinalFireRate
	// void GetFinalFireRate(float& FireRate);                                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.GetMuzzleDistanceFromBarrel
	// float GetMuzzleDistanceFromBarrel();                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.GetFireAnimation
	// void GetFireAnimation(class UAnimMontage*& FireMontage);                                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.IsWeaponPointingFoward
	// bool IsWeaponPointingFoward();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.OnRep_LatestReloadPercentageAmount(ForAnimation)
	// void OnRep_LatestReloadPercentageAmount_ForAnimation_();                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.OnRep_PreLoaded
	// void OnRep_PreLoaded();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.IsRecentlyFired(All)
	// void IsRecentlyFired_All_(bool& RecentlyFired);                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.IsLoaded?
	// void IsLoaded_(bool& IsLoaded);                                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.GetReloadInfo
	// void GetReloadInfo(bool& Reloading, float& ReloadPercentage, bool& PreLoaded, bool& FullyLoaded);                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.OnRep_Loaded
	// void OnRep_Loaded();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.GetAmmoPercentage
	// void GetAmmoPercentage(float& AmmoPercentage, int32_t& AmmoAmount, int32_t& MaxAmmo);                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.OnRep_Firing
	// void OnRep_Firing();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.MuzzleFlashLight__FinishedFunc
	// void MuzzleFlashLight__FinishedFunc();                                                                                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.MuzzleFlashLight__UpdateFunc
	// void MuzzleFlashLight__UpdateFunc();                                                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.FireProjectile
	// void FireProjectile(FTransform SpawnTransform, bool lastRound, float ProjectileCollisionImmuneDistance, bool IsInstantHit, FHitResult HitResult, TArray<FVector>& ProjectileDirections, TArray<int32_t>& UniqueProjectileID); // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.Fire
	// void Fire(FVector CameraDirection, FVector StartLocation, FVector CameraLocation, float RandomOffset);                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.MC_ClipEmpty
	// void MC_ClipEmpty();                                                                                                     // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.S_Fire
	// void S_Fire(FTransform SpawnTransform, bool lastRound, float ProjectileCollisionImmuneDistance, bool IsInstantHit, FHitResult HitResult, FST_RangedWeaponData WeaponData, TArray<FVector>& ProjectileDirections, TArray<int32_t>& UniqueProjectileID); // [0x1325ea0] Net|NetReliableNetServer|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.MC_FireProjectile
	// void MC_FireProjectile(FTransform SpawnTransform, bool lastRound, float ProjectileCollisionImmuneDistance, bool IsInstantHit, FHitResult HitResult, TArray<FVector>& ProjectileDirections, TArray<int32_t>& UniqueProjectileID); // [0x1325ea0] Net|NetReliableNetMulticast|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.S_SetFiring
	// void S_SetFiring(bool Firing);                                                                                           // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.S_ClipEmpty
	// void S_ClipEmpty();                                                                                                      // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.S_SetLoaded
	// void S_SetLoaded(bool Loaded);                                                                                           // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.SetCanFire
	// void SetCanFire(bool CanFire);                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.AttachWeaponToRightHand
	// void AttachWeaponToRightHand();                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.WeaponUsed(NonAutoRepeating)
	// void WeaponUsed_NonAutoRepeating_();                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.AttachWeaponToLeftHand
	// void AttachWeaponToLeftHand();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.SingleMuzzleLightFlash
	// void SingleMuzzleLightFlash();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.RevertWeaponSocket
	// void RevertWeaponSocket();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.AttemptSingleFire
	// void AttemptSingleFire();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.EquipedStateChanged
	// void EquipedStateChanged(bool Equiped);                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.InstantReload
	// void InstantReload();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.S_SetPreloaded
	// void S_SetPreloaded(bool PreLoaded);                                                                                     // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.MC_ShareCorrectReloadTimerFromClient
	// void MC_ShareCorrectReloadTimerFromClient(float ReloadTimer);                                                            // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.ShareCorrectReloadTimerFromClient
	// void ShareCorrectReloadTimerFromClient();                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.S_ShareCorrectReloadTimerFromClient
	// void S_ShareCorrectReloadTimerFromClient(float ReloadTimer);                                                             // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.HasBeenUnequiped
	// void HasBeenUnequiped();                                                                                                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.ResetBulletEjectWhenEmpty
	// void ResetBulletEjectWhenEmpty();                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.DryFire
	// void DryFire();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.Reload
	// void Reload();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.OC_Reload
	// void OC_Reload();                                                                                                        // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.ResetDryFire
	// void ResetDryFire();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.WeaponSwappedAway
	// void WeaponSwappedAway();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.PlayReloadSound
	// void PlayReloadSound(float Duration);                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.StopMuzzleLight
	// void StopMuzzleLight();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/BP_RangedWeaponBase.BP_RangedWeaponBase_C.ExecuteUbergraph_BP_RangedWeaponBase
	// void ExecuteUbergraph_BP_RangedWeaponBase(int32_t EntryPoint);                                                           // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_TrenchGun.BP_TrenchGun_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_TrenchGun_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_TommyGun.BP_TommyGun_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_TommyGun_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_Thompson.BP_Thompson_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Thompson_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_SingleBarrelShotgun.BP_SingleBarrelShotgun_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_SingleBarrelShotgun_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_SawedOffShotgun.BP_SawedOffShotgun_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_SawedOffShotgun_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_PocketSMG_Allied.BP_PocketSMG_Allied_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_PocketSMG_Allied_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_M1Garand.BP_M1Garand_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_M1Garand_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_M1_Scoped.BP_M1_Scoped_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_M1_Scoped_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_LewisGun.BP_LewisGun_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_LewisGun_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_LeeEnfield_NoScope.BP_LeeEnfield_NoScope_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_LeeEnfield_NoScope_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_LeeEnfield.BP_LeeEnfield_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_LeeEnfield_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_HydeCarbine.BP_HydeCarbine_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_HydeCarbine_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_Drilling.BP_Drilling_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Drilling_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_Colt45_Silenced.BP_Colt45_Silenced_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Colt45_Silenced_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_Colt45.BP_Colt45_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Colt45_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_Browning.BP_Browning_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Browning_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_BoysATRifle.BP_BoysATRifle_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_BoysATRifle_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_Bazooka.BP_Bazooka_C
/// Size: 0x0618 (1560 bytes) (0x000605 - 0x000618) align 16 MaxSize: 0x0618
class ABP_Bazooka_C : public ABP_RangedWeaponBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x3];                                       // 0x0605   (0x0003)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0608   (0x0008)  
	class UStaticMeshComponent*                        RpgProjectileHalfWay;                                       // 0x0610   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Equipables/RangedWeapons/BP_Bazooka.BP_Bazooka_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/RangedWeapons/BP_Bazooka.BP_Bazooka_C.WeaponSwappedAway
	// void WeaponSwappedAway();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Equipables/RangedWeapons/BP_Bazooka.BP_Bazooka_C.ExecuteUbergraph_BP_Bazooka
	// void ExecuteUbergraph_BP_Bazooka(int32_t EntryPoint);                                                                    // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_Bar.BP_Bar_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Bar_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_357Magnum.BP_357Magnum_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_357Magnum_C : public ABP_RangedWeaponBase_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_ZB37.BP_ZB37_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_ZB37_C : public ABP_Browning_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_ZB26.BP_ZB26_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_ZB26_C : public ABP_Bar_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_Stg44.BP_Stg44_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Stg44_C : public ABP_HydeCarbine_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/BP_M4BattleRifle.BP_M4BattleRifle_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_M4BattleRifle_C : public ABP_Stg44_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_SilencedLuger.BP_SilencedLuger_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_SilencedLuger_C : public ABP_Colt45_Silenced_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_PocketSMG_Axis.BP_PocketSMG_Axis_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_PocketSMG_Axis_C : public ABP_PocketSMG_Allied_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_PanzerShreck.BP_PanzerShreck_C
/// Size: 0x0618 (1560 bytes) (0x000618 - 0x000618) align 16 MaxSize: 0x0618
class ABP_PanzerShreck_C : public ABP_Bazooka_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_Mp40.BP_Mp40_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Mp40_C : public ABP_Thompson_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_MG34.BP_MG34_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_MG34_C : public ABP_LewisGun_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_MauserTankGewehr.BP_MauserTankGewehr_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_MauserTankGewehr_C : public ABP_BoysATRifle_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_MauserC96.BP_MauserC96_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_MauserC96_C : public ABP_357Magnum_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_Luger.BP_Luger_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Luger_C : public ABP_Colt45_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_Kar98_NoScope.BP_Kar98_NoScope_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Kar98_NoScope_C : public ABP_LeeEnfield_NoScope_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_Kar98.BP_Kar98_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Kar98_C : public ABP_LeeEnfield_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_Gewehr43_Scoped.BP_Gewehr43_Scoped_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Gewehr43_Scoped_C : public ABP_M1_Scoped_C
{ 
public:
};

/// Class /Game/Blueprints/Equipables/RangedWeapons/AxisCounterparts/BP_Gewehr43.BP_Gewehr43_C
/// Size: 0x0605 (1541 bytes) (0x000605 - 0x000605) align 16 MaxSize: 0x0605
class ABP_Gewehr43_C : public ABP_M1Garand_C
{ 
public:
};

/// Struct /Game/Blueprints/Characters/ST_CharacterData.ST_CharacterData
/// Size: 0x0012 (18 bytes) (0x000000 - 0x000012) align 4 MaxSize: 0x0012
struct FST_CharacterData
{ 
	float                                              MWS_4_2412E7334610008A00BC749B81A063D4;                     // 0x0000   (0x0004)  
	float                                              JZV_6_1F6E4DD245564E6ABA5B9D8BC0EDDC8E;                     // 0x0004   (0x0004)  
	float                                              CD_11_FBCB2A07460E29C0D3B926ADED4D88DA;                     // 0x0008   (0x0004)  
	int32_t                                            BD_14_1CDC53D74334ECDE286A65815C9FC186;                     // 0x000C   (0x0004)  
	bool                                               AHD_20_F979D307409D6F55675DC8AD31306F57;                    // 0x0010   (0x0001)  
	bool                                               Valid_8_F591744346C708AF7829F9B3399F52DE;                   // 0x0011   (0x0001)  
};

/// Class /Game/Blueprints/Characters/BP_Character.BP_Character_C
/// Size: 0x0C81 (3201 bytes) (0x0004C0 - 0x000C81) align 16 MaxSize: 0x0C81
class ABP_Character_C : public AClientAuthoritativeCharacter
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x04C0   (0x0008)  
	class UArrowComponent*                             SwayTransform;                                              // 0x04C8   (0x0008)  
	class USkeletalMeshComponent*                      GlovesSkeletal;                                             // 0x04D0   (0x0008)  
	class USkeletalMeshComponent*                      HatSkeletal;                                                // 0x04D8   (0x0008)  
	class USpringArmComponent*                         CameraBoom;                                                 // 0x04E0   (0x0008)  
	class USkeletalMeshComponent*                      LowerFaceSkeletal;                                          // 0x04E8   (0x0008)  
	class UArrowComponent*                             FaceCamLoc;                                                 // 0x04F0   (0x0008)  
	class USkeletalMeshComponent*                      Waist;                                                      // 0x04F8   (0x0008)  
	class UPawnSensingComponent*                       PawnSensing;                                                // 0x0500   (0x0008)  
	class USkeletalMeshComponent*                      Sniper_Aim_Sway;                                            // 0x0508   (0x0008)  
	class UCameraComponent*                            FollowCamera;                                               // 0x0510   (0x0008)  
	class USpringArmComponent*                         FrontCamSpringArm;                                          // 0x0518   (0x0008)  
	class UArrowComponent*                             GroinAnchor;                                                // 0x0520   (0x0008)  
	class UBoxComponent*                               HeadCollider;                                               // 0x0528   (0x0008)  
	class USkeletalMeshComponent*                      Feet;                                                       // 0x0530   (0x0008)  
	class USkeletalMeshComponent*                      Back;                                                       // 0x0538   (0x0008)  
	class USkeletalMeshComponent*                      Torso;                                                      // 0x0540   (0x0008)  
	class USkeletalMeshComponent*                      FacialHair;                                                 // 0x0548   (0x0008)  
	class UStaticMeshComponent*                        LowerFace;                                                  // 0x0550   (0x0008)  
	class UStaticMeshComponent*                        UpperFace;                                                  // 0x0558   (0x0008)  
	class UStaticMeshComponent*                        Parachute;                                                  // 0x0560   (0x0008)  
	class USkeletalMeshComponent*                      Legs;                                                       // 0x0568   (0x0008)  
	class UStaticMeshComponent*                        Hat;                                                        // 0x0570   (0x0008)  
	class USkeletalMeshComponent*                      CharacterMesh;                                              // 0x0578   (0x0008)  
	class UArrowComponent*                             Actor_Rotation;                                             // 0x0580   (0x0008)  
	class UArrowComponent*                             VehicleSeatCameraAnchor;                                    // 0x0588   (0x0008)  
	class UCameraComponent*                            FrontCamera;                                                // 0x0590   (0x0008)  
	class UArrowComponent*                             ArrowForCameraPitchOffset;                                  // 0x0598   (0x0008)  
	class USceneComponent*                             UsernameLocation;                                           // 0x05A0   (0x0008)  
	class UPawnDataComponent_C*                        PawnDataComponent;                                          // 0x05A8   (0x0008)  
	float                                              HitEffect_NewTrack_0_E043E0274DE7A84B93081385BD6651CF;      // 0x05B0   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    HitEffect__Direction_E043E0274DE7A84B93081385BD6651CF;      // 0x05B4   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x05B5   (0x0003)  MISSED
	class UTimelineComponent*                          HitEffect;                                                  // 0x05B8   (0x0008)  
	float                                              DashOverDistance_NewTrack_0_851D435B492B7C2187B81FB53FED2C22; // 0x05C0   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    DashOverDistance__Direction_851D435B492B7C2187B81FB53FED2C22; // 0x05C4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x05C5   (0x0003)  MISSED
	class UTimelineComponent*                          DashOverDistance;                                           // 0x05C8   (0x0008)  
	float                                              FireAnimationArms_NewTrack_0_8670176B4024F7CC168FE983270F3DA9; // 0x05D0   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    FireAnimationArms__Direction_8670176B4024F7CC168FE983270F3DA9; // 0x05D4   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x05D5   (0x0003)  MISSED
	class UTimelineComponent*                          FireAnimationArms;                                          // 0x05D8   (0x0008)  
	float                                              Timeline_1_NewTrack_0_D8E2316D42E8AAC66C62C19F5D83BA45;     // 0x05E0   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Timeline_1__Direction_D8E2316D42E8AAC66C62C19F5D83BA45;     // 0x05E4   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x05E5   (0x0003)  MISSED
	class UTimelineComponent*                          Timeline;                                                   // 0x05E8   (0x0008)  
	float                                              ParachuteDeploy_NewTrack_0_2BFF20F84400E6DA91A68D9C5FD24DBF; // 0x05F0   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    ParachuteDeploy__Direction_2BFF20F84400E6DA91A68D9C5FD24DBF; // 0x05F4   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x05F5   (0x0003)  MISSED
	class UTimelineComponent*                          ParachuteDeploy;                                            // 0x05F8   (0x0008)  
	float                                              Delta_Seconds;                                              // 0x0600   (0x0004)  
	bool                                               AI_Controlled;                                              // 0x0604   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x0605   (0x0003)  MISSED
	FDataTableRowHandle                                CoreWeapon;                                                 // 0x0608   (0x0010)  
	FDataTableRowHandle                                Equipable1;                                                 // 0x0618   (0x0010)  
	FDataTableRowHandle                                Equipable2;                                                 // 0x0628   (0x0010)  
	FDataTableRowHandle                                Explosive;                                                  // 0x0638   (0x0010)  
	class ABP_EquipableBase_C*                         CoreWeaponEquipable;                                        // 0x0648   (0x0008)  
	class ABP_EquipableBase_C*                         FirstEquipable;                                             // 0x0650   (0x0008)  
	class ABP_EquipableBase_C*                         SecondEquipable;                                            // 0x0658   (0x0008)  
	class ABP_Controller_C*                            ControllerRef_OnlyValidOnServer_;                           // 0x0660   (0x0008)  
	class UCharacter_Idle_Skeleton_AnimBlueprint_New_C* AnimInstance;                                              // 0x0668   (0x0008)  
	class ABP_Username_C*                              UsernameRef;                                                // 0x0670   (0x0008)  
	class AActor*                                      InteractableRef;                                            // 0x0678   (0x0008)  
	TEnumAsByte<E_Units>                               CharacterClass;                                             // 0x0680   (0x0001)  
	bool                                               IsDead;                                                     // 0x0681   (0x0001)  
	bool                                               IsLocalCharacter_Own_;                                      // 0x0682   (0x0001)  
	unsigned char                                      UnknownData06_6[0x5];                                       // 0x0683   (0x0005)  MISSED
	FText                                              KillerName;                                                 // 0x0688   (0x0018)  
	FString                                            UserName;                                                   // 0x06A0   (0x0010)  
	int32_t                                            CurrentHealth;                                              // 0x06B0   (0x0004)  
	bool                                               AI_CanFireWeapon;                                           // 0x06B4   (0x0001)  
	bool                                               AI_CanAttackPlanes;                                         // 0x06B5   (0x0001)  
	bool                                               AI_CanAttackVehicles;                                       // 0x06B6   (0x0001)  
	bool                                               AI_MovementFailed;                                          // 0x06B7   (0x0001)  
	bool                                               AI_MeleeEquiped;                                            // 0x06B8   (0x0001)  
	unsigned char                                      UnknownData07_6[0x7];                                       // 0x06B9   (0x0007)  MISSED
	class AActor*                                      AI_Target;                                                  // 0x06C0   (0x0008)  
	class ABP_EquipableBase_C*                         ExplosiveEquipable;                                         // 0x06C8   (0x0008)  
	class ABP_EquipableBase_C*                         ActiveEquipable;                                            // 0x06D0   (0x0008)  
	int32_t                                            ActiveEquipableIndex;                                       // 0x06D8   (0x0004)  
	bool                                               PrimaryFirePressed;                                         // 0x06DC   (0x0001)  
	unsigned char                                      UnknownData08_6[0x3];                                       // 0x06DD   (0x0003)  MISSED
	float                                              AI_RandomFireInaccuracy;                                    // 0x06E0   (0x0004)  
	unsigned char                                      UnknownData09_6[0x4];                                       // 0x06E4   (0x0004)  MISSED
	class ABP_VehicleBase_C*                           VehicleRef;                                                 // 0x06E8   (0x0008)  
	int32_t                                            MaxHealth;                                                  // 0x06F0   (0x0004)  
	unsigned char                                      UnknownData10_6[0x4];                                       // 0x06F4   (0x0004)  MISSED
	SDK_UNDEFINED(16,628) /* FMulticastInlineDelegate */ __um(DamageRecieved_ClientOnly_);                         // 0x06F8   (0x0010)  
	bool                                               BurningBulletsEnabled;                                      // 0x0708   (0x0001)  
	bool                                               PoisonDamageEnabled;                                        // 0x0709   (0x0001)  
	bool                                               Invisible;                                                  // 0x070A   (0x0001)  
	bool                                               IsBurning;                                                  // 0x070B   (0x0001)  
	bool                                               IsPoisoned;                                                 // 0x070C   (0x0001)  
	unsigned char                                      UnknownData11_6[0x3];                                       // 0x070D   (0x0003)  MISSED
	float                                              Skill1CooldownTime;                                         // 0x0710   (0x0004)  
	float                                              Skill2CooldownTime;                                         // 0x0714   (0x0004)  
	float                                              Skill1CooldownTimer;                                        // 0x0718   (0x0004)  
	float                                              Skill2CooldownTimer;                                        // 0x071C   (0x0004)  
	bool                                               Skill1onCD;                                                 // 0x0720   (0x0001)  
	bool                                               Skill2onCD;                                                 // 0x0721   (0x0001)  
	unsigned char                                      UnknownData12_6[0x6];                                       // 0x0722   (0x0006)  MISSED
	FDataTableRowHandle                                Skill1;                                                     // 0x0728   (0x0010)  
	FDataTableRowHandle                                Skill2;                                                     // 0x0738   (0x0010)  
	bool                                               Skill1Active;                                               // 0x0748   (0x0001)  
	bool                                               Skill2Active;                                               // 0x0749   (0x0001)  
	unsigned char                                      UnknownData13_6[0x6];                                       // 0x074A   (0x0006)  MISSED
	class ABP_SkillBase_C*                             Skill1Ref;                                                  // 0x0750   (0x0008)  
	class ABP_SkillBase_C*                             Skill2Ref;                                                  // 0x0758   (0x0008)  
	float                                              DamageMultiplier;                                           // 0x0760   (0x0004)  
	unsigned char                                      UnknownData14_6[0x4];                                       // 0x0764   (0x0004)  MISSED
	SDK_UNDEFINED(16,629) /* FMulticastInlineDelegate */ __um(UnAlteredDamageReceived_Server_);                    // 0x0768   (0x0010)  
	SDK_UNDEFINED(16,630) /* FMulticastInlineDelegate */ __um(DamagedEnemy);                                       // 0x0778   (0x0010)  
	SDK_UNDEFINED(16,631) /* FMulticastInlineDelegate */ __um(BreakInvisibility);                                  // 0x0788   (0x0010)  
	bool                                               AimingMode;                                                 // 0x0798   (0x0001)  
	bool                                               CanUseEquipable;                                            // 0x0799   (0x0001)  
	unsigned char                                      UnknownData15_6[0x2];                                       // 0x079A   (0x0002)  MISSED
	int32_t                                            Kills;                                                      // 0x079C   (0x0004)  
	int32_t                                            Deaths;                                                     // 0x07A0   (0x0004)  
	int32_t                                            Score;                                                      // 0x07A4   (0x0004)  
	float                                              AI_RandomLookAroundSpeed;                                   // 0x07A8   (0x0004)  
	FVector                                            AI_TargetVehicleVelocity;                                   // 0x07AC   (0x000C)  
	float                                              DamageReceiveMultiplier;                                    // 0x07B8   (0x0004)  
	unsigned char                                      UnknownData16_6[0x4];                                       // 0x07BC   (0x0004)  MISSED
	TArray<class ABP_BuffDebuffBase_C*>                BuffDebuffs;                                                // 0x07C0   (0x0010)  
	int32_t                                            CoreWeaponIndex;                                            // 0x07D0   (0x0004)  
	int32_t                                            Weapon1Index;                                               // 0x07D4   (0x0004)  
	int32_t                                            Weapon2Index;                                               // 0x07D8   (0x0004)  
	int32_t                                            ExplosiveIndex;                                             // 0x07DC   (0x0004)  
	float                                              Forward_Axis_Value;                                         // 0x07E0   (0x0004)  
	float                                              Right_Axis_Value;                                           // 0x07E4   (0x0004)  
	float                                              WalkSpeedMultiplier;                                        // 0x07E8   (0x0004)  
	float                                              AimSpeedMultiplier;                                         // 0x07EC   (0x0004)  
	TEnumAsByte<E_MovementModes>                       MovementType;                                               // 0x07F0   (0x0001)  
	bool                                               WantsToSprint;                                              // 0x07F1   (0x0001)  
	bool                                               Sprinting;                                                  // 0x07F2   (0x0001)  
	unsigned char                                      UnknownData17_6[0x1];                                       // 0x07F3   (0x0001)  MISSED
	float                                              SingularDamageBoost;                                        // 0x07F4   (0x0004)  
	SDK_UNDEFINED(16,632) /* FMulticastInlineDelegate */ __um(HasFiredAWeapon);                                    // 0x07F8   (0x0010)  
	bool                                               Skill1Loaded;                                               // 0x0808   (0x0001)  
	bool                                               Skill2Loaded;                                               // 0x0809   (0x0001)  
	bool                                               HideEquipables;                                             // 0x080A   (0x0001)  
	unsigned char                                      UnknownData18_6[0x5];                                       // 0x080B   (0x0005)  MISSED
	class ABP_EquipableBase_C*                         TempThrowableRef_skill_;                                    // 0x0810   (0x0008)  
	int32_t                                            Skill1Index;                                                // 0x0818   (0x0004)  
	int32_t                                            Skill2Index;                                                // 0x081C   (0x0004)  
	bool                                               RecentlyDamaged;                                            // 0x0820   (0x0001)  
	unsigned char                                      UnknownData19_6[0x3];                                       // 0x0821   (0x0003)  MISSED
	float                                              FireDelay;                                                  // 0x0824   (0x0004)  
	SDK_UNDEFINED(16,633) /* FMulticastInlineDelegate */ __um(EquipableSwitched);                                  // 0x0828   (0x0010)  
	bool                                               InFPSView;                                                  // 0x0838   (0x0001)  
	bool                                               EnterFiringCloseView;                                       // 0x0839   (0x0001)  
	bool                                               UsingEquipable;                                             // 0x083A   (0x0001)  
	bool                                               IsSwappingLocal;                                            // 0x083B   (0x0001)  
	bool                                               SecondaryFirePressed;                                       // 0x083C   (0x0001)  
	bool                                               CanEnableCameraLag;                                         // 0x083D   (0x0001)  
	unsigned char                                      UnknownData20_6[0x2];                                       // 0x083E   (0x0002)  MISSED
	class ABP_VehicleSeat_C*                           VehicleSeat;                                                // 0x0840   (0x0008)  
	SDK_UNDEFINED(16,634) /* FMulticastInlineDelegate */ __um(WeaponSwapped);                                      // 0x0848   (0x0010)  
	class APawn*                                       CurrentTarget;                                              // 0x0858   (0x0008)  
	FRotator                                           AI_RandomStationaryLookAtRotation;                          // 0x0860   (0x000C)  
	unsigned char                                      UnknownData21_6[0x4];                                       // 0x086C   (0x0004)  MISSED
	TArray<FName>                                      AI_AvailableSkills;                                         // 0x0870   (0x0010)  
	class APawn*                                       AI_SensedPawn;                                              // 0x0880   (0x0008)  
	bool                                               SprintBlocked;                                              // 0x0888   (0x0001)  
	unsigned char                                      UnknownData22_6[0x3];                                       // 0x0889   (0x0003)  MISSED
	float                                              HeightAboveGround;                                          // 0x088C   (0x0004)  
	bool                                               ParachuteOpen;                                              // 0x0890   (0x0001)  
	bool                                               SpeedBoostActive;                                           // 0x0891   (0x0001)  
	unsigned char                                      UnknownData23_6[0x6];                                       // 0x0892   (0x0006)  MISSED
	class APawn*                                       AI_LastTargetThatAttackedUs;                                // 0x0898   (0x0008)  
	class APawn*                                       PawnThatKilledUs;                                           // 0x08A0   (0x0008)  
	class APawn*                                       LastPawnThatAttackedUs;                                     // 0x08A8   (0x0008)  
	FVector                                            LightDirectionSaved;                                        // 0x08B0   (0x000C)  
	bool                                               OutfitLoaded;                                               // 0x08BC   (0x0001)  
	bool                                               MeshMaterialLoaded;                                         // 0x08BD   (0x0001)  
	bool                                               HatLoaded;                                                  // 0x08BE   (0x0001)  
	bool                                               InShadow;                                                   // 0x08BF   (0x0001)  
	bool                                               LookAtKiller;                                               // 0x08C0   (0x0001)  
	bool                                               RecentlyUsedWeapon;                                         // 0x08C1   (0x0001)  
	bool                                               Unkillable_ForTesting_;                                     // 0x08C2   (0x0001)  
	unsigned char                                      UnknownData24_6[0x5];                                       // 0x08C3   (0x0005)  MISSED
	SDK_UNDEFINED(16,635) /* FMulticastInlineDelegate */ __um(Skill1Ready);                                        // 0x08C8   (0x0010)  
	SDK_UNDEFINED(16,636) /* FMulticastInlineDelegate */ __um(Skill2Ready);                                        // 0x08D8   (0x0010)  
	int32_t                                            BonusDamageAmount;                                          // 0x08E8   (0x0004)  
	FVector                                            TeleportLocation;                                           // 0x08EC   (0x000C)  
	float                                              AimFocusAmount;                                             // 0x08F8   (0x0004)  
	FRotator                                           DeathCamRotation;                                           // 0x08FC   (0x000C)  
	FST_CharacterCustomization                         CharacterCustomization;                                     // 0x0908   (0x004C)  
	bool                                               ClassSet;                                                   // 0x0954   (0x0001)  
	bool                                               UsingScopedWeapon;                                          // 0x0955   (0x0001)  
	unsigned char                                      UnknownData25_6[0x2];                                       // 0x0956   (0x0002)  MISSED
	int32_t                                            LastNonThrowableEquipable;                                  // 0x0958   (0x0004)  
	float                                              SpreadMultiplier;                                           // 0x095C   (0x0004)  
	bool                                               Shielded;                                                   // 0x0960   (0x0001)  
	unsigned char                                      UnknownData26_6[0x3];                                       // 0x0961   (0x0003)  MISSED
	float                                              CharacterKillHeight;                                        // 0x0964   (0x0004)  
	float                                              TotalLeftRightAxisValue;                                    // 0x0968   (0x0004)  
	float                                              BackwardAxisValue;                                          // 0x096C   (0x0004)  
	float                                              TotalForwardBackwardAxisValue;                              // 0x0970   (0x0004)  
	float                                              LeftAxisValue;                                              // 0x0974   (0x0004)  
	class ABP_VehicleBase_C*                           VehicleBeneathUs;                                           // 0x0978   (0x0008)  
	FVector                                            AI_TargetCenterLocation;                                    // 0x0980   (0x000C)  
	float                                              GunBlockDistance;                                           // 0x098C   (0x0004)  
	float                                              VerticalCameraOffset_GunBlock_;                             // 0x0990   (0x0004)  
	float                                              HorizontalCameraOffset_GunBlock_;                           // 0x0994   (0x0004)  
	bool                                               AI_CanUseUtility_Explosive_;                                // 0x0998   (0x0001)  
	bool                                               TempHideEquipables;                                         // 0x0999   (0x0001)  
	unsigned char                                      UnknownData27_6[0x6];                                       // 0x099A   (0x0006)  MISSED
	class APawn*                                       LastLaunchInflicter;                                        // 0x09A0   (0x0008)  
	FVector                                            DeathLocation;                                              // 0x09A8   (0x000C)  
	bool                                               CanPlayMontages;                                            // 0x09B4   (0x0001)  
	bool                                               FrontCamActive;                                             // 0x09B5   (0x0001)  
	unsigned char                                      UnknownData28_6[0x2];                                       // 0x09B6   (0x0002)  MISSED
	int32_t                                            Equipable_We_Are_Swapping_To;                               // 0x09B8   (0x0004)  
	bool                                               IsSwapping_server_;                                         // 0x09BC   (0x0001)  
	bool                                               CanSwap;                                                    // 0x09BD   (0x0001)  
	bool                                               TempHideEquipables_Client_;                                 // 0x09BE   (0x0001)  
	unsigned char                                      UnknownData29_6[0x1];                                       // 0x09BF   (0x0001)  MISSED
	int32_t                                            PreferedEquipable;                                          // 0x09C0   (0x0004)  
	bool                                               DealImpactDamage;                                           // 0x09C4   (0x0001)  
	bool                                               InAir;                                                      // 0x09C5   (0x0001)  
	unsigned char                                      UnknownData30_6[0x2];                                       // 0x09C6   (0x0002)  MISSED
	SDK_UNDEFINED(16,637) /* FMulticastInlineDelegate */ __um(ReceivedPiercingDamage);                             // 0x09C8   (0x0010)  
	bool                                               PiercingDamageEnabled;                                      // 0x09D8   (0x0001)  
	unsigned char                                      UnknownData31_6[0x7];                                       // 0x09D9   (0x0007)  MISSED
	class UMaterialInstanceDynamic*                    Legs_MID;                                                   // 0x09E0   (0x0008)  
	class UMaterialInstanceDynamic*                    Character_MID;                                              // 0x09E8   (0x0008)  
	TArray<class UMaterialInstanceDynamic*>            Hat_Item_MID;                                               // 0x09F0   (0x0010)  
	TArray<class UMaterialInstanceDynamic*>            Torso_MIDs;                                                 // 0x0A00   (0x0010)  
	bool                                               CustomizationLoaded;                                        // 0x0A10   (0x0001)  
	unsigned char                                      UnknownData32_6[0x7];                                       // 0x0A11   (0x0007)  MISSED
	class ABP_MapCam_C*                                MapCamRef;                                                  // 0x0A18   (0x0008)  
	FVector                                            SpawnCamLocationTarget;                                     // 0x0A20   (0x000C)  
	unsigned char                                      UnknownData33_6[0x4];                                       // 0x0A2C   (0x0004)  MISSED
	SDK_UNDEFINED(16,638) /* FMulticastInlineDelegate */ __um(HasDied);                                            // 0x0A30   (0x0010)  
	float                                              RunSpeedMultiplier;                                         // 0x0A40   (0x0004)  
	float                                              TimeSinceLastSprint;                                        // 0x0A44   (0x0004)  
	float                                              VerticalCameraOffset_Aiming_;                               // 0x0A48   (0x0004)  
	float                                              ObstructedSpringArmYOffset_AntiCornerExploit__NonAim;       // 0x0A4C   (0x0004)  
	float                                              ObstructedSpringArmYOffset_AntiCornerExploit__Aim;          // 0x0A50   (0x0004)  
	float                                              SpineYawOffset;                                             // 0x0A54   (0x0004)  
	FRotator                                           ReplicatedMeshAndBoomRotation;                              // 0x0A58   (0x000C)  
	float                                              DesiredTargetArmLength;                                     // 0x0A64   (0x0004)  
	class UW_EmoteMenu_C*                              EmoteMenu;                                                  // 0x0A68   (0x0008)  
	bool                                               EmotePlaying;                                               // 0x0A70   (0x0001)  
	unsigned char                                      UnknownData34_6[0x7];                                       // 0x0A71   (0x0007)  MISSED
	class UAnimMontage*                                CurrentEmoteMontage;                                        // 0x0A78   (0x0008)  
	class UArrowComponent*                             KillerFaceCamRef;                                           // 0x0A80   (0x0008)  
	bool                                               Crouching;                                                  // 0x0A88   (0x0001)  
	unsigned char                                      UnknownData35_6[0x3];                                       // 0x0A89   (0x0003)  MISSED
	float                                              RelativeMeshLocationInSeat;                                 // 0x0A8C   (0x0004)  
	bool                                               AI_IsMeleeCommando;                                         // 0x0A90   (0x0001)  
	unsigned char                                      UnknownData36_6[0x3];                                       // 0x0A91   (0x0003)  MISSED
	int32_t                                            AI_KillEmoteInt;                                            // 0x0A94   (0x0004)  
	float                                              FireAnimationPitchTarget;                                   // 0x0A98   (0x0004)  
	float                                              FireAnimationKickBackTarget;                                // 0x0A9C   (0x0004)  
	FVector                                            LastLocation;                                               // 0x0AA0   (0x000C)  
	FVector                                            CharacterVelocity_Manual_;                                  // 0x0AAC   (0x000C)  
	TArray<int32_t>                                    SpectatingPlayers_indexes_;                                 // 0x0AB8   (0x0010)  
	FVector                                            CameraBoomRelLocation_Spectator_;                           // 0x0AC8   (0x000C)  
	int32_t                                            CameraFOV_Spectator_;                                       // 0x0AD4   (0x0004)  
	FVector                                            VelocityAfterDeath;                                         // 0x0AD8   (0x000C)  
	FVector                                            ExtraVelocityAfterDeath;                                    // 0x0AE4   (0x000C)  
	FVector                                            CharacterVelocityManualInterpolated;                        // 0x0AF0   (0x000C)  
	int32_t                                            PreviousEquipableIndex;                                     // 0x0AFC   (0x0004)  
	bool                                               AreEquipablesHidden_;                                       // 0x0B00   (0x0001)  
	unsigned char                                      UnknownData37_6[0x3];                                       // 0x0B01   (0x0003)  MISSED
	float                                              CanUseAfterSwapDelayTime;                                   // 0x0B04   (0x0004)  
	float                                              FireRateCDMultiplier;                                       // 0x0B08   (0x0004)  
	bool                                               AI_CanSwap;                                                 // 0x0B0C   (0x0001)  
	unsigned char                                      UnknownData38_6[0x3];                                       // 0x0B0D   (0x0003)  MISSED
	TArray<class APawn*>                               PotentialKillAssists;                                       // 0x0B10   (0x0010)  
	int32_t                                            RequestedQueueSlot;                                         // 0x0B20   (0x0004)  
	bool                                               FullBodyAnimationTakeOver;                                  // 0x0B24   (0x0001)  
	bool                                               UseCameraAimingSway;                                        // 0x0B25   (0x0001)  
	unsigned char                                      UnknownData39_6[0x2];                                       // 0x0B26   (0x0002)  MISSED
	float                                              AddedCameraYaw;                                             // 0x0B28   (0x0004)  
	float                                              RecoilSidewaysDirection;                                    // 0x0B2C   (0x0004)  
	float                                              X__Roll_;                                                   // 0x0B30   (0x0004)  
	bool                                               MouseIsBeingMoved;                                          // 0x0B34   (0x0001)  
	unsigned char                                      UnknownData40_6[0x3];                                       // 0x0B35   (0x0003)  MISSED
	float                                              SwayAmount;                                                 // 0x0B38   (0x0004)  
	float                                              RandomRecoilX;                                              // 0x0B3C   (0x0004)  
	float                                              RandomRecoilY;                                              // 0x0B40   (0x0004)  
	float                                              CameraBoomAimOffset;                                        // 0x0B44   (0x0004)  
	float                                              CameraBoomCrouchOffset;                                     // 0x0B48   (0x0004)  
	bool                                               CharacterHasPlayerOwner;                                    // 0x0B4C   (0x0001)  
	bool                                               VehicleDucking;                                             // 0x0B4D   (0x0001)  
	unsigned char                                      UnknownData41_6[0x2];                                       // 0x0B4E   (0x0002)  MISSED
	FST_CharacterData                                  CharacterData;                                              // 0x0B50   (0x0012)  
	unsigned char                                      UnknownData42_6[0x2];                                       // 0x0B62   (0x0002)  MISSED
	bool                                               WasRecentlyInAir;                                           // 0x0B64   (0x0001)  
	unsigned char                                      UnknownData43_6[0x3];                                       // 0x0B65   (0x0003)  MISSED
	float                                              AFA;                                                        // 0x0B68   (0x0004)  
	bool                                               AHD;                                                        // 0x0B6C   (0x0001)  
	unsigned char                                      UnknownData44_6[0x3];                                       // 0x0B6D   (0x0003)  MISSED
	TArray<FVector>                                    CharacterQueuedLaunchVelocities;                            // 0x0B70   (0x0010)  
	class UCameraComponent*                            VehicleSeatCameraRef;                                       // 0x0B80   (0x0008)  
	float                                              FireAnimationRollTarget;                                    // 0x0B88   (0x0004)  
	bool                                               IsMoving;                                                   // 0x0B8C   (0x0001)  
	unsigned char                                      UnknownData45_6[0x3];                                       // 0x0B8D   (0x0003)  MISSED
	float                                              WeaponScaleMultiplier;                                      // 0x0B90   (0x0004)  
	bool                                               EnableTickOptimization;                                     // 0x0B94   (0x0001)  
	unsigned char                                      UnknownData46_6[0x3];                                       // 0x0B95   (0x0003)  MISSED
	SDK_UNDEFINED(16,639) /* FMulticastInlineDelegate */ __um(HasHitATarget);                                      // 0x0B98   (0x0010)  
	bool                                               FirstPersonMode;                                            // 0x0BA8   (0x0001)  
	bool                                               WasRecentlyInVehicle;                                       // 0x0BA9   (0x0001)  
	unsigned char                                      UnknownData47_6[0x2];                                       // 0x0BAA   (0x0002)  MISSED
	float                                              InAirTime;                                                  // 0x0BAC   (0x0004)  
	FVector                                            InAirStartLocation;                                         // 0x0BB0   (0x000C)  
	FST_CharacterCustomization                         CharacterCustomizationToBeSentFromClient;                   // 0x0BBC   (0x004C)  
	float                                              CameraBoomForwardOffset;                                    // 0x0C08   (0x0004)  
	bool                                               FallingDownward;                                            // 0x0C0C   (0x0001)  
	bool                                               Sliding;                                                    // 0x0C0D   (0x0001)  
	unsigned char                                      UnknownData48_6[0x2];                                       // 0x0C0E   (0x0002)  MISSED
	float                                              AimingSpeed;                                                // 0x0C10   (0x0004)  
	unsigned char                                      UnknownData49_6[0x4];                                       // 0x0C14   (0x0004)  MISSED
	class UClass*                                      SpecialBulletTrail;                                         // 0x0C18   (0x0008)  
	bool                                               CrouchPressed;                                              // 0x0C20   (0x0001)  
	bool                                               WeaponUsedShortInterval;                                    // 0x0C21   (0x0001)  
	unsigned char                                      UnknownData50_6[0x6];                                       // 0x0C22   (0x0006)  MISSED
	SDK_UNDEFINED(16,640) /* FMulticastInlineDelegate */ __um(WeaponReloaded);                                     // 0x0C28   (0x0010)  
	float                                              BaseFOV;                                                    // 0x0C38   (0x0004)  
	float                                              CharacterPitch;                                             // 0x0C3C   (0x0004)  
	bool                                               WantsToVehicleDuck;                                         // 0x0C40   (0x0001)  
	bool                                               WasRecentlyInSeat;                                          // 0x0C41   (0x0001)  
	bool                                               UseLeftShoulderForCam;                                      // 0x0C42   (0x0001)  
	unsigned char                                      UnknownData51_6[0x1];                                       // 0x0C43   (0x0001)  MISSED
	float                                              CameraYLocation;                                            // 0x0C44   (0x0004)  
	float                                              ImpactDamageTimer;                                          // 0x0C48   (0x0004)  
	FVector                                            LastDamageDealingLaunchVelocity;                            // 0x0C4C   (0x000C)  
	float                                              CharacterYawRotation;                                       // 0x0C58   (0x0004)  
	float                                              RawMouseXTurnAmount;                                        // 0x0C5C   (0x0004)  
	float                                              CharacterRotation;                                          // 0x0C60   (0x0004)  
	bool                                               TurningInPlace;                                             // 0x0C64   (0x0001)  
	bool                                               TurningRight_InPlace_;                                      // 0x0C65   (0x0001)  
	bool                                               TurningInPlace_Replicated_;                                 // 0x0C66   (0x0001)  
	bool                                               TurningInPlaceRight_Replicated_;                            // 0x0C67   (0x0001)  
	bool                                               IsSwappingOthers;                                           // 0x0C68   (0x0001)  
	bool                                               SwapAnimationPlaying;                                       // 0x0C69   (0x0001)  
	bool                                               WeaponSwapBlocked;                                          // 0x0C6A   (0x0001)  
	unsigned char                                      UnknownData52_6[0x1];                                       // 0x0C6B   (0x0001)  MISSED
	float                                              ScopeSwayAlpha;                                             // 0x0C6C   (0x0004)  
	bool                                               OnSlipperySurface;                                          // 0x0C70   (0x0001)  
	unsigned char                                      UnknownData53_6[0x3];                                       // 0x0C71   (0x0003)  MISSED
	FVector                                            SlopeDirection;                                             // 0x0C74   (0x000C)  
	bool                                               InsideAntiSlipperinessVolume;                               // 0x0C80   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.SlipperinessEnabled?
	// void SlipperinessEnabled_(bool& Enabled);                                                                                // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_DealImpactDamage
	// void OnRep_DealImpactDamage();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.GetCameraValues
	// void GetCameraValues(float& Distance, float& Height, float& HorizontalOffset);                                           // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.GetActiveSkillRefOfClass
	// void GetActiveSkillRefOfClass(class UClass* SkillClass, class ABP_SkillBase_C*& SkillRef);                               // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.SetEquipState
	// void SetEquipState(class ABP_EquipableBase_C* Equipable, bool Equiped);                                                  // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.GetYawToShare
	// float GetYawToShare();                                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.GetActiveEquipableRowname
	// void GetActiveEquipableRowname(FName& ActiveEquipableWeaponIndex);                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_Sliding
	// void OnRep_Sliding();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.LoadCustomization
	// void LoadCustomization(FST_CharacterCustomization& Customization);                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.PlayerHiddenInSeat?
	// void PlayerHiddenInSeat_(bool& Hidden);                                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.FetchPing
	// void FetchPing(class APlayerState*& PlayerState);                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.IsShielded?
	// void IsShielded_(bool& Shielded);                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ShouldSlowDownWhenUsingEquipable?
	// void ShouldSlowDownWhenUsingEquipable_(bool& SlowDownWhenUsing_HaltSprint_);                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_VehicleDucking
	// void OnRep_VehicleDucking();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_GetForceLock(TargetPrioritize)
	// bool AI_GetForceLock_TargetPrioritize_(class UObject* Object);                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_CharacterHasPlayerOwner
	// void OnRep_CharacterHasPlayerOwner();                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.GetCurrentEquipedWeaponType
	// void GetCurrentEquipedWeaponType(TEnumAsByte<E_WeaponTypes>& WeaponType);                                                // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.Get Kill Assist Player
	// void GetKillAssistPlayer(int32_t& AssistPlayerIndex, class ABP_PlayerState_C*& AssistPlayerState, bool& AssistsFound, class APawn*& AssistPawn, bool& Countaskill); // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.GetWeaponSwapMontage
	// class UAnimMontage* GetWeaponSwapMontage(int32_t Index);                                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_Crouching
	// void OnRep_Crouching();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.GetEquipableWithIndex
	// void GetEquipableWithIndex(int32_t Index, class ABP_EquipableBase_C*& Equipable);                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_IsTargetInRange
	// void AI_IsTargetInRange(float Range, bool& InCloseRange);                                                                // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_IsEnemyCharacterLowHealth
	// void AI_IsEnemyCharacterLowHealth(class ABP_Character_C* Character, bool& IsLowHealth);                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ExitVehicleOrSeat
	// void ExitVehicleOrSeat();                                                                                                // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_VehicleSeat
	// void OnRep_VehicleSeat();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_CheckIfTargetIsStillValid
	// void AI_CheckIfTargetIsStillValid(bool& Valid);                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_CoreWeaponEquipable
	// void OnRep_CoreWeaponEquipable();                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_CoreWeapon
	// void OnRep_CoreWeapon();                                                                                                 // [0x1325ea0] HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.SetRimLight
	// void SetRimLight(bool EnableRimLight);                                                                                   // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.CheckIfWeaponNeedsToAutoReload
	// void CheckIfWeaponNeedsToAutoReload(bool& AutoReload);                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.GetTickRate
	// float GetTickRate();                                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_AI_Controlled
	// void OnRep_AI_Controlled();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.CanSwapToThrowable?
	// void CanSwapToThrowable_(class UObject* Weapon, bool& CanSwap);                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_CharacterCustomization
	// void OnRep_CharacterCustomization();                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.CheckIfVulnerable
	// void CheckIfVulnerable(bool& Vulnerable);                                                                                // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.FindPlayerInGameStateStats
	// void FindPlayerInGameStateStats(int32_t PlayerIndex, bool& PlayerFound);                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.IsReloadingCurrentWeapon?
	// void IsReloadingCurrentWeapon_(bool& Reloading, float& ReloadPercentage);                                                // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_Skill2onCD
	// void OnRep_Skill2onCD();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_Skill1onCD
	// void OnRep_Skill1onCD();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.CalculateFallDamageAmount
	// void CalculateFallDamageAmount(float FallDistance, bool& TakeFallDamage, float& DamageAmount);                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_ParachuteOpen
	// void OnRep_ParachuteOpen();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_CharacterClass
	// void OnRep_CharacterClass();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.GetWeaponOfTypeSlot
	// void GetWeaponOfTypeSlot(TArray<TEnumAsByte<E_WeaponTypes>>& WeaponTypes, int32_t& WeaponSlot, bool& WeaponTypeFound);   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_ThrowableRef
	// void OnRep_ThrowableRef();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_SkillUse
	// void AI_SkillUse(FName SkillName, int32_t SkillIndex);                                                                   // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_GetEnemyEngagementDelay
	// void AI_GetEnemyEngagementDelay(class AActor* EnemyToEngage, float& Delay);                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_FilterAvailableSkills
	// void AI_FilterAvailableSkills();                                                                                         // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_GetRandomSkill
	// void AI_GetRandomSkill(int32_t& SkillIndex);                                                                             // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.getSkill
	// void getSkill(int32_t SkillIndex, FDataTableRowHandle& Skill);                                                           // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.RefreshAimingMode
	// void RefreshAimingMode();                                                                                                // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.HideSelf(Scope)
	// void HideSelf_Scope_(bool HideSelf);                                                                                     // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_Skill2
	// void OnRep_Skill2();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_Skill1
	// void OnRep_Skill1();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ApplyMovementTypeMultiplier
	// void ApplyMovementTypeMultiplier(float A, float& Return);                                                                // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ScaleAxisInput
	// void ScaleAxisInput(float InputAxisValue, float& OutputAxisValue);                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AddRecoil
	// void AddRecoil(float RecoilAmount, bool AddSideWaysRecoil, bool RandomRecoil);                                           // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.SetActiveEquipable
	// void SetActiveEquipable();                                                                                               // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_VehicleRef
	// void OnRep_VehicleRef();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_Explosive
	// void OnRep_Explosive();                                                                                                  // [0x1325ea0] HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_Equipable2
	// void OnRep_Equipable2();                                                                                                 // [0x1325ea0] HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_Equipable1
	// void OnRep_Equipable1();                                                                                                 // [0x1325ea0] HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InitActiveEquipable
	// void InitActiveEquipable(int32_t Equipable);                                                                             // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_ExplosiveEquipable
	// void OnRep_ExplosiveEquipable();                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_SecondEquipable
	// void OnRep_SecondEquipable();                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_FirstEquipable
	// void OnRep_FirstEquipable();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_ActiveEquipable
	// void OnRep_ActiveEquipable();                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.SetInvisibility
	// void SetInvisibility();                                                                                                  // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_Invisible
	// void OnRep_Invisible();                                                                                                  // [0x1325ea0] HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.EndBuffDebuff
	// void EndBuffDebuff(class UClass* BuffDebuffClass);                                                                       // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AddBuffDebuff
	// void AddBuffDebuff(class UClass* BuffDebuff, class APawn* BuffApplier, float BuffScaler, class ABP_SkillBase_C* LinkedSkill_Optional_, bool CanRefresh, class ABP_BuffDebuffBase_C*& SpawnedBuffRef); // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.RestoreHealth
	// void RestoreHealth(int32_t HealAmount, bool HealEffect, class APawn* PawnThatAppliedTheHeal, bool CleanseDebuffs, float ScoreMultiplier); // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_AimingMode
	// void OnRep_AimingMode();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_AI_Target
	// void OnRep_AI_Target();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnRep_IsDead
	// void OnRep_IsDead();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.Timeline_1__FinishedFunc
	// void Timeline_1__FinishedFunc();                                                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.Timeline_1__UpdateFunc
	// void Timeline_1__UpdateFunc();                                                                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.FireAnimationArms__FinishedFunc
	// void FireAnimationArms__FinishedFunc();                                                                                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.FireAnimationArms__UpdateFunc
	// void FireAnimationArms__UpdateFunc();                                                                                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.DashOverDistance__FinishedFunc
	// void DashOverDistance__FinishedFunc();                                                                                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.DashOverDistance__UpdateFunc
	// void DashOverDistance__UpdateFunc();                                                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ParachuteDeploy__FinishedFunc
	// void ParachuteDeploy__FinishedFunc();                                                                                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ParachuteDeploy__UpdateFunc
	// void ParachuteDeploy__UpdateFunc();                                                                                      // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.HitEffect__FinishedFunc
	// void HitEffect__FinishedFunc();                                                                                          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.HitEffect__UpdateFunc
	// void HitEffect__UpdateFunc();                                                                                            // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Emote Menu_K2Node_InputActionEvent
	// void InpActEvt_EmoteMenu_K2Node_InputActionEvent(FKey Key);                                                              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Swap Camera Shoulder_K2Node_InputActionEvent
	// void InpActEvt_SwapCameraShoulder_K2Node_InputActionEvent(FKey Key);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Switch Seat_K2Node_InputActionEvent
	// void InpActEvt_SwitchSeat_K2Node_InputActionEvent(FKey Key);                                                             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Front Face Camera (Self Inspect)_K2Node_InputActionEvent
	// void InpActEvt_FrontFaceCamera_SelfInspect__K2Node_InputActionEvent(FKey Key);                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Crouch_K2Node_InputActionEvent
	// void InpActEvt_Crouch_K2Node_InputActionEvent(FKey Key);                                                                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Jump_K2Node_InputActionEvent
	// void InpActEvt_Jump_K2Node_InputActionEvent(FKey Key);                                                                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Actionbar Slot 4_K2Node_InputActionEvent
	// void InpActEvt_ActionbarSlot4_K2Node_InputActionEvent(FKey Key);                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Weapon Quick Swap_K2Node_InputActionEvent
	// void InpActEvt_WeaponQuickSwap_K2Node_InputActionEvent(FKey Key);                                                        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Aim / alt attack_K2Node_InputActionEvent
	// void InpActEvt_Aim_altattack_K2Node_InputActionEvent(FKey Key);                                                          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Attack_K2Node_InputActionEvent
	// void InpActEvt_Attack_K2Node_InputActionEvent(FKey Key);                                                                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Reload_K2Node_InputActionEvent
	// void InpActEvt_Reload_K2Node_InputActionEvent(FKey Key);                                                                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Skill 2_K2Node_InputActionEvent
	// void InpActEvt_Skill2_K2Node_InputActionEvent(FKey Key);                                                                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Skill 1_K2Node_InputActionEvent
	// void InpActEvt_Skill1_K2Node_InputActionEvent(FKey Key);                                                                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Actionbar Slot 3_K2Node_InputActionEvent
	// void InpActEvt_ActionbarSlot3_K2Node_InputActionEvent(FKey Key);                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Actionbar Slot 2_K2Node_InputActionEvent
	// void InpActEvt_ActionbarSlot2_K2Node_InputActionEvent(FKey Key);                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Actionbar Slot 1_K2Node_InputActionEvent
	// void InpActEvt_ActionbarSlot1_K2Node_InputActionEvent(FKey Key);                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent
	// void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent(FKey Key);                                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent
	// void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent(FKey Key);                                                             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpActEvt_Interact_K2Node_InputActionEvent
	// void InpActEvt_Interact_K2Node_InputActionEvent(FKey Key);                                                               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_PlayMontage
	// void S_PlayMontage(class UAnimMontage* Montage, bool bStopAllMontages, float BlockIncomingMontagesTime, bool PlayOnOwningClient, bool ForcePlayMontage_OverrideWhenAlreadyPlayingMontage_, float InPlayRate); // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_PlayMontage
	// void MC_PlayMontage(class UAnimMontage* Montage, bool PlayOnOwningClient, bool bStopAllMontages, float BlockIncomingMontagesTime, bool ForcePlayMontage_OverrideWhenAlreadyPlayingMontage_, float InPlayRate); // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ReceiveDestroyed
	// void ReceiveDestroyed();                                                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.CleanUp
	// void CleanUp();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.PlayMontageFromClient
	// void PlayMontageFromClient(class UAnimMontage* MontageToPlay, bool bStopAllMontages, float BlockIncomingMontagesTime, bool ForcePlayMontage_OverrideWhenAlreadyPlayingMontage_, float InPlayRate); // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.PlayMontage
	// void PlayMontage(class UAnimMontage* MontageToPlay, bool bStopAllMontages, float BlockIncomingMontagesTime, float InPlayRate, bool ForcePlayMontage_OverrideWhenAlreadyPlayingMontage_); // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OC_TeleportCharacter
	// void OC_TeleportCharacter(FVector TeleportLocation);                                                                     // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_IncreaseEventToken
	// void S_IncreaseEventToken();                                                                                             // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OC_LaunchCharacter
	// void OC_LaunchCharacter(FVector LaunchVelocity, class APawn* LaunchInflicter);                                           // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ReceiveHit
	// void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, FVector HitLocation, FVector HitNormal, FVector NormalImpulse, FHitResult& Hit); // [0x1325ea0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.FireAnimation
	// void FireAnimation();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_FireAnimation
	// void S_FireAnimation();                                                                                                  // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_FireAnimation
	// void MC_FireAnimation();                                                                                                 // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_PlayEmote
	// void S_PlayEmote(class UAnimMontage* EmoteMontage, float EmoteDuration);                                                 // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_StopEmote
	// void S_StopEmote();                                                                                                      // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_StopEmote
	// void MC_StopEmote(class UAnimMontage* EmoteMontage);                                                                     // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.CloseEmoteMenu
	// void CloseEmoteMenu();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ApplyRecoil
	// void ApplyRecoil(float RecoilAmount, bool AddSideWaysRecoil, bool RandomRecoil);                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.PlayEmote
	// void PlayEmote(class UAnimMontage* EmoteMontage, float EmoteDuration);                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_PlayEmote
	// void MC_PlayEmote(class UAnimMontage* EmoteMontage, float EmoteDuration);                                                // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.TeleportCharacter
	// void TeleportCharacter(FVector TeleportLocation);                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ApplyPostDeathRagdoll
	// void ApplyPostDeathRagdoll(FVector Velocity);                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.BndEvt__BP_Character_PawnSensing_K2Node_ComponentBoundEvent_1_SeePawnDelegate__DelegateSignature
	// void BndEvt__BP_Character_PawnSensing_K2Node_ComponentBoundEvent_1_SeePawnDelegate__DelegateSignature(class APawn* Pawn); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_EndCurrentSkill
	// void S_EndCurrentSkill(class ABP_SkillBase_C* Skill);                                                                    // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_RestoreHealth
	// void S_RestoreHealth(int32_t Amount, bool HealEffect, class APawn* PawnThatAppliedTheHP, bool CleanseDebuffs, float ScoreMultiplier); // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_RestoreHealthOfOtherPlayer
	// void S_RestoreHealthOfOtherPlayer(class ABP_Character_C* OtherCharacter, int32_t HealAmount, bool HealEffect, class APawn* PawnThatAppliedTheHeal, bool CleanseDebuffs, float ScoreMultiplier); // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_SetNoClip
	// void S_SetNoClip(bool Enabled);                                                                                          // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_SetInvisibility
	// void S_SetInvisibility(bool Enabled);                                                                                    // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_SetGodMode
	// void S_SetGodMode(bool Enabled);                                                                                         // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_SetRecentlyTeleported
	// void S_SetRecentlyTeleported();                                                                                          // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.LaunchCharacter(server)
	// void LaunchCharacter_server_(FVector LaunchVelocity, class APawn* LaunchInflicter, bool DealImpactDamage);               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.SetInstantFirepose
	// void SetInstantFirepose();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.RegisterSpectator
	// void RegisterSpectator(int32_t& Index);                                                                                  // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_SetPlayerRank
	// void S_SetPlayerRank(int32_t PlayerRank, int32_t PlayerIndex);                                                           // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_SetCharacterCustomization
	// void S_SetCharacterCustomization(FST_CharacterCustomization CharacterCustomization);                                     // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_UsingEquipable
	// void MC_UsingEquipable();                                                                                                // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.SetUsingEquipable
	// void SetUsingEquipable(bool Using);                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_UsingEquipable
	// void S_UsingEquipable();                                                                                                 // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_ShareCameraRotation
	// void MC_ShareCameraRotation(int32_t Pitch, int32_t Yaw, bool TurningInPlace, bool TurningInPlaceRight);                  // [0x1325ea0] Net|NetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_ShareCameraRotation
	// void S_ShareCameraRotation(int32_t Pitch, int32_t Yaw, bool TurningInPlace, bool TurningInPlaceRight);                   // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_SetUserName
	// void S_SetUserName(FString UserName);                                                                                    // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_SentCharData
	// void S_SentCharData(FST_CharacterData CharData);                                                                         // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.SetAIAimingMode
	// void SetAIAimingMode(bool AimingMode);                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_StopWeaponUse
	// void AI_StopWeaponUse();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.SwapToRegularWeapon
	// void SwapToRegularWeapon();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_EnterFallState
	// void AI_EnterFallState();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_ChangeWeapon
	// void AI_ChangeWeapon(int32_t Slot);                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_SetAISprint
	// void MC_SetAISprint(bool Sprint);                                                                                        // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ForceUpdateEquipableHide
	// void ForceUpdateEquipableHide();                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.TeamChanged
	// void TeamChanged();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ForceStopSprinting
	// void ForceStopSprinting();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.Dash
	// void Dash();                                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_Slide
	// void S_Slide(bool Sliding);                                                                                              // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.JumpEffects
	// void JumpEffects();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpAxisEvt_Sprint_K2Node_InputAxisEvent
	// void InpAxisEvt_Sprint_K2Node_InputAxisEvent(float AxisValue);                                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_VehicleDucking
	// void S_VehicleDucking(bool VehicleDucking);                                                                              // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_Crouching
	// void S_Crouching(bool Crouching);                                                                                        // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpAxisEvt_LookUpDown_K2Node_InputAxisEvent
	// void InpAxisEvt_LookUpDown_K2Node_InputAxisEvent(float AxisValue);                                                       // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpAxisEvt_Move Right_K2Node_InputAxisEvent
	// void InpAxisEvt_MoveRight_K2Node_InputAxisEvent(float AxisValue);                                                        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpAxisEvt_Move Left_K2Node_InputAxisEvent
	// void InpAxisEvt_MoveLeft_K2Node_InputAxisEvent(float AxisValue);                                                         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpAxisEvt_Move Backward_K2Node_InputAxisEvent
	// void InpAxisEvt_MoveBackward_K2Node_InputAxisEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpAxisEvt_Move Forward_K2Node_InputAxisEvent
	// void InpAxisEvt_MoveForward_K2Node_InputAxisEvent(float AxisValue);                                                      // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_FallDamage
	// void S_FallDamage(float DamageAmount);                                                                                   // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OnLanded
	// void OnLanded(FHitResult& Hit);                                                                                          // [0x1325ea0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.BlockSprint
	// void BlockSprint(float Duration);                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.StowParachute
	// void StowParachute();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.DeployParachute
	// void DeployParachute();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_CloseParachute
	// void S_CloseParachute();                                                                                                 // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_OpenParachute
	// void S_OpenParachute();                                                                                                  // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_JumpEffects
	// void S_JumpEffects();                                                                                                    // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_JumpEffects
	// void MC_JumpEffects();                                                                                                   // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ResetJump
	// void ResetJump();                                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_SetSprinting
	// void S_SetSprinting(bool bRunning);                                                                                      // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.CheckSprint
	// void CheckSprint();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.InpAxisEvt_Turn_K2Node_InputAxisEvent
	// void InpAxisEvt_Turn_K2Node_InputAxisEvent(float AxisValue);                                                             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.BlockWeaponSwap
	// void BlockWeaponSwap(float Duration);                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_WeaponUsed
	// void S_WeaponUsed();                                                                                                     // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_HasFiredAWeapon
	// void S_HasFiredAWeapon();                                                                                                // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_StopUseEquipable
	// void AI_StopUseEquipable();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_UseEquipable
	// void AI_UseEquipable();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AddFullBodyAnimationTakeOverTime
	// void AddFullBodyAnimationTakeOverTime(float Duration);                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.QueueRequestedSwap
	// void QueueRequestedSwap();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OC_SwapToPreferedEquipable
	// void OC_SwapToPreferedEquipable(float Delay);                                                                            // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.SetInitialWeapon
	// void SetInitialWeapon();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.TempHideEquipables(Local)
	// void TempHideEquipables_Local_(float Duration);                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_TempHideEquipables
	// void S_TempHideEquipables(float Duration);                                                                               // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.UseTempThrowable
	// void UseTempThrowable();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_RemoveTempThrowable
	// void S_RemoveTempThrowable();                                                                                            // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_EquipTempThrowable
	// void S_EquipTempThrowable(class UClass* ThrowableClas);                                                                  // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_Aiming
	// void S_Aiming(bool Aiming);                                                                                              // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ForceEndAllCurrentSkills
	// void ForceEndAllCurrentSkills();                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.Swap(Local)
	// void Swap_Local_(int32_t EquipableWeAreSwappingTo, float Delay);                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.StopUsingEquipable
	// void StopUsingEquipable();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_Swap
	// void MC_Swap(int32_t EquipableWeAreSwappingTo);                                                                          // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_SetActiveEquipable
	// void S_SetActiveEquipable(int32_t Equipable, bool ReloadPreviousWeapon, bool RemoveTempThrowable);                       // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_BreakInvisibility
	// void S_BreakInvisibility();                                                                                              // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_UseSkill2
	// void AI_UseSkill2();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.AI_UseSkill1
	// void AI_UseSkill1();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_ActivateSkill
	// void S_ActivateSkill(class UClass* Skill, TEnumAsByte<E_SkillSlots> SkillSlot);                                          // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ShowHitEffect
	// void ShowHitEffect();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OC_HasHitATarget
	// void OC_HasHitATarget();                                                                                                 // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_Hit
	// void MC_Hit();                                                                                                           // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.KillCharacter
	// void KillCharacter(class APawn* AttackerPawn);                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_HealEffect
	// void MC_HealEffect();                                                                                                    // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.OC_Hit
	// void OC_Hit(int32_t DamageAmount, FVector AttackerLocation);                                                             // [0x1325ea0] Net|NetReliableNetClient|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.MC_AddDeathImpulse
	// void MC_AddDeathImpulse(FVector DamageDirection, int32_t DamageAmount);                                                  // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ApplyDamage
	// void ApplyDamage(int32_t DamageAmount, FVector DamageHitLocation, FVector DamageDirection, class APawn* AttackerPawn, class UClass* Debuff, TEnumAsByte<E_DamageTypes> DamageType, int32_t PlayerIndex, bool IsCriticalHit, bool IgnoreTeamProtection, FText SpecialKillMessage, bool ShouldBreakInvisibility, bool IsPiercingDamage, class UClass* ProjectileClass_optional_, class UClass* EquipableClass_optonal_); // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.UnsetRecentlyInSeat
	// void UnsetRecentlyInSeat();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.UnsetRecentlyInVehicle
	// void UnsetRecentlyInVehicle();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.S_Interact
	// void S_Interact(class AActor* Actor);                                                                                    // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.SetVehicleState
	// void SetVehicleState();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ExecuteUbergraph_BP_Character
	// void ExecuteUbergraph_BP_Character(int32_t EntryPoint);                                                                  // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.DamagedEnemy__DelegateSignature
	// void DamagedEnemy__DelegateSignature(int32_t DamageAmount);                                                              // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.WeaponReloaded__DelegateSignature
	// void WeaponReloaded__DelegateSignature();                                                                                // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.HasHitATarget__DelegateSignature
	// void HasHitATarget__DelegateSignature();                                                                                 // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.HasDied__DelegateSignature
	// void HasDied__DelegateSignature(class ABP_Character_C* Character);                                                       // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.ReceivedPiercingDamage__DelegateSignature
	// void ReceivedPiercingDamage__DelegateSignature();                                                                        // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.UnAlteredDamageReceived(Server)__DelegateSignature
	// void UnAlteredDamageReceived_Server___DelegateSignature(int32_t UnAlteredDamageAmount, class APawn* Attacker);           // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.Skill2Ready__DelegateSignature
	// void Skill2Ready__DelegateSignature();                                                                                   // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.Skill1Ready__DelegateSignature
	// void Skill1Ready__DelegateSignature();                                                                                   // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.WeaponSwapped__DelegateSignature
	// void WeaponSwapped__DelegateSignature();                                                                                 // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.EquipableSwitched__DelegateSignature
	// void EquipableSwitched__DelegateSignature();                                                                             // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.HasFiredAWeapon__DelegateSignature
	// void HasFiredAWeapon__DelegateSignature();                                                                               // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.BreakInvisibility__DelegateSignature
	// void BreakInvisibility__DelegateSignature();                                                                             // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Characters/BP_Character.BP_Character_C.DamageRecieved(ClientOnly)__DelegateSignature
	// void DamageRecieved_ClientOnly___DelegateSignature(int32_t DamageAmount, FVector AttackerLocation);                      // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/BP_PlayerStart_SpawnPoint.BP_PlayerStart_SpawnPoint_C
/// Size: 0x0241 (577 bytes) (0x000220 - 0x000241) align 8 MaxSize: 0x0241
class ABP_PlayerStart_SpawnPoint_C : public AActor
{ 
public:
	class UBillboardComponent*                         Billboard1;                                                 // 0x0220   (0x0008)  
	class UArrowComponent*                             Arrow;                                                      // 0x0228   (0x0008)  
	class UBillboardComponent*                         BillBoard;                                                  // 0x0230   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0238   (0x0008)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x0240   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/BP_PlayerStart_SpawnPoint.BP_PlayerStart_SpawnPoint_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/BP_PlayerStart_SpawnPoint_Back.BP_PlayerStart_SpawnPoint_Back_C
/// Size: 0x0250 (592 bytes) (0x000241 - 0x000250) align 8 MaxSize: 0x0250
class ABP_PlayerStart_SpawnPoint_Back_C : public ABP_PlayerStart_SpawnPoint_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x0241   (0x0007)  MISSED
	class UBillboardComponent*                         Billboard2;                                                 // 0x0248   (0x0008)  
};

/// Class /Game/Blueprints/BP_PlayerStart_SpawnPoint_Alt.BP_PlayerStart_SpawnPoint_Alt_C
/// Size: 0x0250 (592 bytes) (0x000241 - 0x000250) align 8 MaxSize: 0x0250
class ABP_PlayerStart_SpawnPoint_Alt_C : public ABP_PlayerStart_SpawnPoint_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x0241   (0x0007)  MISSED
	class UBillboardComponent*                         Billboard2;                                                 // 0x0248   (0x0008)  
};

/// Class /Game/Blueprints/Interfaces/ApplyDamage.ApplyDamage_C
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UApplyDamage_C : public UInterface
{ 
public:


	/// Functions
	// Function /Game/Blueprints/Interfaces/ApplyDamage.ApplyDamage_C.ApplyDamage
	// void ApplyDamage(int32_t DamageAmount, FVector DamageHitLocation, FVector DamageDirection, class APawn* AttackerPawn, class UClass* Debuff, TEnumAsByte<E_DamageTypes> DamageType, int32_t PlayerIndex, bool IsCriticalHit, bool IgnoreTeamProtection, FText SpecialKillMessage, bool ShouldBreakInvisibility, bool IsPiercingDamage, class UClass* ProjectileClass_optional_, class UClass* EquipableClass_optonal_); // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C
/// Size: 0x0715 (1813 bytes) (0x000450 - 0x000715) align 16 MaxSize: 0x0715
class ABP_TankBase_C : public ABP_VehicleBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0450   (0x0008)  
	class UChildActorComponent*                        PassengerSeat;                                              // 0x0458   (0x0008)  
	class USpringArmComponent*                         SpringArm;                                                  // 0x0460   (0x0008)  
	class UArrowComponent*                             SpringArmBase;                                              // 0x0468   (0x0008)  
	class UBoxComponent*                               BackCollisionDetect;                                        // 0x0470   (0x0008)  
	class UBoxComponent*                               FrontCollisionDetect;                                       // 0x0478   (0x0008)  
	class UPointLightComponent*                        PointLight;                                                 // 0x0480   (0x0008)  
	class UAudioComponent*                             WreckageFireSound;                                          // 0x0488   (0x0008)  
	class UParticleSystemComponent*                    DestroyedWreckageFire;                                      // 0x0490   (0x0008)  
	class UParticleSystemComponent*                    ExhaustSmoke;                                               // 0x0498   (0x0008)  
	class UArrowComponent*                             FaceCam;                                                    // 0x04A0   (0x0008)  
	class UArrowComponent*                             ProjectileStart_MG;                                         // 0x04A8   (0x0008)  
	class UAudioComponent*                             MGSound_AltFire_;                                           // 0x04B0   (0x0008)  
	class UAudioComponent*                             TracksSound;                                                // 0x04B8   (0x0008)  
	class UPawnSensingComponent*                       PawnSensing;                                                // 0x04C0   (0x0008)  
	class UNavModifierComponent*                       NavModifier;                                                // 0x04C8   (0x0008)  
	class UFloatingPawnMovement*                       FloatingPawnMovement;                                       // 0x04D0   (0x0008)  
	class UParticleSystemComponent*                    SmokeFront2;                                                // 0x04D8   (0x0008)  
	class UParticleSystemComponent*                    SmokeFront1;                                                // 0x04E0   (0x0008)  
	class UParticleSystemComponent*                    SmokeBack2;                                                 // 0x04E8   (0x0008)  
	class UParticleSystemComponent*                    SmokeBack1;                                                 // 0x04F0   (0x0008)  
	class UArrowComponent*                             ProjectileStart_MainGun;                                    // 0x04F8   (0x0008)  
	class UAudioComponent*                             BarrelRotateSound;                                          // 0x0500   (0x0008)  
	class UAudioComponent*                             EngineSound;                                                // 0x0508   (0x0008)  
	class UCameraComponent*                            Camera;                                                     // 0x0510   (0x0008)  
	class UStaticMeshComponent*                        Turret;                                                     // 0x0518   (0x0008)  
	class UStaticMeshComponent*                        Barrel;                                                     // 0x0520   (0x0008)  
	class UStaticMeshComponent*                        Body;                                                       // 0x0528   (0x0008)  
	bool                                               ForwardPressed;                                             // 0x0530   (0x0001)  
	bool                                               BackwardPressed;                                            // 0x0531   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0532   (0x0002)  MISSED
	float                                              DeltaSeconds;                                               // 0x0534   (0x0004)  
	bool                                               LeftPressed;                                                // 0x0538   (0x0001)  
	bool                                               RightPressed;                                               // 0x0539   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x053A   (0x0002)  MISSED
	float                                              TurnSpeed;                                                  // 0x053C   (0x0004)  
	float                                              TurnTorqueAmount;                                           // 0x0540   (0x0004)  
	float                                              TurnAmount;                                                 // 0x0544   (0x0004)  
	float                                              ForwardBackwardAmount;                                      // 0x0548   (0x0004)  
	float                                              BarrelYawRotation;                                          // 0x054C   (0x0004)  
	float                                              BarrelPitchRotation;                                        // 0x0550   (0x0004)  
	float                                              LastRotation;                                               // 0x0554   (0x0004)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0558   (0x0008)  MISSED
	FTransform                                         TankTransform;                                              // 0x0560   (0x0030)  
	FRotator                                           LocalBarrelRot;                                             // 0x0590   (0x000C)  
	float                                              MovementSpeed;                                              // 0x059C   (0x0004)  
	FVector                                            AI_BarrelLookAtLocation;                                    // 0x05A0   (0x000C)  
	FRotator                                           TurretRotation;                                             // 0x05AC   (0x000C)  
	FRotator                                           BarrelRotation;                                             // 0x05B8   (0x000C)  
	bool                                               CanMove;                                                    // 0x05C4   (0x0001)  
	bool                                               IsLoaded;                                                   // 0x05C5   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2];                                       // 0x05C6   (0x0002)  MISSED
	float                                              ReloadTime;                                                 // 0x05C8   (0x0004)  
	float                                              ReloadTimer;                                                // 0x05CC   (0x0004)  
	class UMaterialInstanceDynamic*                    TireLeftMaterial;                                           // 0x05D0   (0x0008)  
	class UMaterialInstanceDynamic*                    TireRightMaterial;                                          // 0x05D8   (0x0008)  
	float                                              TireScrubRight;                                             // 0x05E0   (0x0004)  
	float                                              TireScrubLeft;                                              // 0x05E4   (0x0004)  
	TArray<class UStaticMeshComponent*>                LeftWheels;                                                 // 0x05E8   (0x0010)  
	TArray<class UStaticMeshComponent*>                RightWheels;                                                // 0x05F8   (0x0010)  
	bool                                               UpdateLeftWheels;                                           // 0x0608   (0x0001)  
	bool                                               AI_NewObjectiveSet;                                         // 0x0609   (0x0001)  
	unsigned char                                      UnknownData04_6[0x6];                                       // 0x060A   (0x0006)  MISSED
	TArray<FVector>                                    AI_CurrentNavigation;                                       // 0x0610   (0x0010)  
	int32_t                                            AI_NavigationPointIndex;                                    // 0x0620   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x0624   (0x0004)  MISSED
	class AActor*                                      AI_TargetObjective;                                         // 0x0628   (0x0008)  
	class AActor*                                      AI_TargetEnemy;                                             // 0x0630   (0x0008)  
	class ARecastNavMesh*                              AI_NavData;                                                 // 0x0638   (0x0008)  
	class AActor*                                      AI_TargetLocationActor;                                     // 0x0640   (0x0008)  
	float                                              AI_ForwardBackwardInterpolated;                             // 0x0648   (0x0004)  
	float                                              AI_ForwardBackwardTarget;                                   // 0x064C   (0x0004)  
	float                                              AI_RandomNavStartOffsetRadius;                              // 0x0650   (0x0004)  
	bool                                               AI_EngageEnemy;                                             // 0x0654   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x0655   (0x0003)  MISSED
	FVector                                            AI_AddedTargetVelocity;                                     // 0x0658   (0x000C)  
	bool                                               EnableDebug;                                                // 0x0664   (0x0001)  
	unsigned char                                      UnknownData07_6[0x3];                                       // 0x0665   (0x0003)  MISSED
	int32_t                                            TurretPitch;                                                // 0x0668   (0x0004)  
	int32_t                                            TurretYaw;                                                  // 0x066C   (0x0004)  
	float                                              LastVelocity;                                               // 0x0670   (0x0004)  
	unsigned char                                      UnknownData08_6[0x4];                                       // 0x0674   (0x0004)  MISSED
	class UAudioComponent*                             RevSound;                                                   // 0x0678   (0x0008)  
	FVector                                            FinalBarrelLookAtLocation;                                  // 0x0680   (0x000C)  
	float                                              SpeedMultiplier;                                            // 0x068C   (0x0004)  
	TArray<class AActor*>                              HitActors;                                                  // 0x0690   (0x0010)  
	bool                                               Zooming;                                                    // 0x06A0   (0x0001)  
	bool                                               MainMenuTank;                                               // 0x06A1   (0x0001)  
	unsigned char                                      UnknownData09_6[0x2];                                       // 0x06A2   (0x0002)  MISSED
	float                                              BackwardReverseTurn;                                        // 0x06A4   (0x0004)  
	FVector                                            LastHitLocation;                                            // 0x06A8   (0x000C)  
	unsigned char                                      UnknownData10_6[0x4];                                       // 0x06B4   (0x0004)  MISSED
	TArray<class AActor*>                              OverlappingActors;                                          // 0x06B8   (0x0010)  
	bool                                               LeftPressedReplicated;                                      // 0x06C8   (0x0001)  
	bool                                               RightPressedReplicated;                                     // 0x06C9   (0x0001)  
	bool                                               ForwardPressedReplicated;                                   // 0x06CA   (0x0001)  
	bool                                               BackwardPressedReplicated;                                  // 0x06CB   (0x0001)  
	unsigned char                                      UnknownData11_6[0x4];                                       // 0x06CC   (0x0004)  MISSED
	class UStaticMesh*                                 DestroyedBodyMesh;                                          // 0x06D0   (0x0008)  
	class UStaticMesh*                                 DestroyedTurretMesh;                                        // 0x06D8   (0x0008)  
	float                                              FrontalCollisionSpeedMultiplier;                            // 0x06E0   (0x0004)  
	float                                              BackwardCollisionSpeedMultiplier;                           // 0x06E4   (0x0004)  
	bool                                               AltFire_Local_;                                             // 0x06E8   (0x0001)  
	unsigned char                                      UnknownData12_6[0x3];                                       // 0x06E9   (0x0003)  MISSED
	FVector                                            MgProjectileDirection;                                      // 0x06EC   (0x000C)  
	float                                              AI_DistanceBasedBarrelPitch;                                // 0x06F8   (0x0004)  
	unsigned char                                      UnknownData13_6[0x4];                                       // 0x06FC   (0x0004)  MISSED
	TArray<class UStaticMeshComponent*>                AllWheels;                                                  // 0x0700   (0x0010)  
	float                                              RepairingSpeedMultiplier;                                   // 0x0710   (0x0004)  
	bool                                               HasPassengers;                                              // 0x0714   (0x0001)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.HasPassenger
	// void HasPassenger(bool& Yes);                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.GetMainCannonFireDirection
	// void GetMainCannonFireDirection(FVector& OutputPin);                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.GetBodyMaterial
	// void GetBodyMaterial(class UMaterialInterface*& Material);                                                               // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.ClearNavigation
	// void ClearNavigation();                                                                                                  // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.AI_GetMovementTarget
	// void AI_GetMovementTarget(class AActor*& Target);                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.GetNavigationToTarget
	// void GetNavigationToTarget(FVector TargetLocation, float RandomOffsetRadius, bool& Success);                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.UpdateWheelSpin
	// void UpdateWheelSpin(class USceneComponent* Wheel, bool IsReversing, float Direction, float OverrideSpeed);              // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.IsReloading?
	// void IsReloading_(bool& IsReloading);                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.GetReloadPercentage
	// void GetReloadPercentage(float& Percentage);                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.UserConstructionScript
	// void UserConstructionScript();                                                                                           // [0x1325ea0] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.InpActEvt_Break_K2Node_InputActionEvent
	// void InpActEvt_Break_K2Node_InputActionEvent(FKey Key);                                                                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.InpActEvt_Turn Left_K2Node_InputActionEvent
	// void InpActEvt_TurnLeft_K2Node_InputActionEvent(FKey Key);                                                               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.InpActEvt_Turn Right_K2Node_InputActionEvent
	// void InpActEvt_TurnRight_K2Node_InputActionEvent(FKey Key);                                                              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.InpActEvt_Machinegun_K2Node_InputActionEvent
	// void InpActEvt_Machinegun_K2Node_InputActionEvent(FKey Key);                                                             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.InpActEvt_Zoom In (Tank)_K2Node_InputActionEvent
	// void InpActEvt_ZoomIn_Tank__K2Node_InputActionEvent(FKey Key);                                                           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.InpActEvt_Main Gun_K2Node_InputActionEvent
	// void InpActEvt_MainGun_K2Node_InputActionEvent(FKey Key);                                                                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent
	// void InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent(float AxisValue);                                                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.ReceivePossessed
	// void ReceivePossessed(class AController* NewController);                                                                 // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.ReceiveUnpossessed
	// void ReceiveUnpossessed(class AController* OldController);                                                               // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.S_SetBarrelRotation
	// void S_SetBarrelRotation(int32_t Pitch, int32_t Yaw);                                                                    // [0x1325ea0] Net|NetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.S_Fire
	// void S_Fire(FVector FlightDirection);                                                                                    // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.MC_Fire
	// void MC_Fire(FVector FlightDirection);                                                                                   // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.MC_Damaged
	// void MC_Damaged(FVector DamageLocation, FVector DamageDirection, int32_t DamageAmount, TEnumAsByte<E_DamageTypes> DamageType, FVector DamageLocationRelative); // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.DestroyedRepNotify
	// void DestroyedRepNotify();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.BndEvt__BP_Character_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature
	// void BndEvt__BP_Character_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature(class APawn* Pawn); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.MoveTo
	// void MoveTo(class AActor* Actor, FVector Location);                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.StopMovement
	// void StopMovement();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.MC_Loaded
	// void MC_Loaded();                                                                                                        // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.ReceiveHit
	// void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, FVector HitLocation, FVector HitNormal, FVector NormalImpulse, FHitResult& Hit); // [0x1325ea0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.MC_ActorHit
	// void MC_ActorHit(FVector Location);                                                                                      // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.ResetTracksSound
	// void ResetTracksSound();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.IsPossessedEvent
	// void IsPossessedEvent();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.MC_AltFire
	// void MC_AltFire(FVector FlightDirection, FVector Location, int32_t UniqueProjectileID);                                  // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.ResetTankOperational
	// void ResetTankOperational();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.S_ShareTankTransform
	// void S_ShareTankTransform(FTransform TankTransform);                                                                     // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.MC_ShareTankTransform
	// void MC_ShareTankTransform(FTransform TankTransform);                                                                    // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.S_ActorHit
	// void S_ActorHit(FVector Location);                                                                                       // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.RemoveActorFromOverlappingList
	// void RemoveActorFromOverlappingList(class AActor* ActorRef);                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.S_SetLeftPressed
	// void S_SetLeftPressed(bool LeftPressed);                                                                                 // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.S_SetRightPressed
	// void S_SetRightPressed(bool RightPressed);                                                                               // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.S_SetForwardPressed
	// void S_SetForwardPressed(bool ForwardPressed);                                                                           // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.S_SetBackwardPressed
	// void S_SetBackwardPressed(bool BackwardPressed);                                                                         // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.BndEvt__BP_TankBase_Body_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
	// void BndEvt__BP_TankBase_Body_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x1325ea0] HasOutParms|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.ForgetTarget
	// void ForgetTarget();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.S_BumperHit
	// void S_BumperHit(float Speed);                                                                                           // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.MC_BumperHit
	// void MC_BumperHit(float Speed);                                                                                          // [0x1325ea0] Net|NetReliableNetMulticast|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.AltFire
	// void AltFire(FVector FlightDirection, FVector Location, int32_t UniqueProjectileID);                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.FireMG
	// void FireMG();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.StopFiringMG
	// void StopFiringMG();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.S_AltFire
	// void S_AltFire(FVector FlightDirection, FVector Location, int32_t UniqueProjectileID);                                   // [0x1325ea0] Net|NetReliableNetServer|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.InpAxisEvt_Accelerate_K2Node_InputAxisEvent
	// void InpAxisEvt_Accelerate_K2Node_InputAxisEvent(float AxisValue);                                                       // [0x1325ea0] BlueprintEvent       
	// Function /Game/Blueprints/Vehicles/BP_TankBase.BP_TankBase_C.ExecuteUbergraph_BP_TankBase
	// void ExecuteUbergraph_BP_TankBase(int32_t EntryPoint);                                                                   // [0x1325ea0] Final|HasDefaults    
};

/// Struct /Game/Blueprints/Structs/ST_ServerSettings.ST_ServerSettings
/// Size: 0x008C (140 bytes) (0x000000 - 0x00008C) align 8 MaxSize: 0x008C
struct FST_ServerSettings
{ 
	FText                                              Servername_11_BF3FF09A4CCE5BEBD3DF268D548B93A6;             // 0x0000   (0x0018)  
	FText                                              Password_17_A99791064F6F83746EF6B6AC15A0294C;               // 0x0018   (0x0018)  
	int32_t                                            BotAmount_2_93F9F88E4D92899E0916D095A8889922;               // 0x0030   (0x0004)  
	int32_t                                            Tickets_8_FD04CABA4E334939FD434CAC2538AB1E;                 // 0x0034   (0x0004)  
	float                                              Difficulty_18_B62D63F04F766AE106D5D88097380A86;             // 0x0038   (0x0004)  
	bool                                               TeamBalance_20_333F2A8047A2C3CB3102399975D43518;            // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x003D   (0x0003)  MISSED
	TArray<FText>                                      RulesAndWelcomeMessagesOld_46_B9660BE542C35E7ECA23409322B613A9; // 0x0040   (0x0010)  
	TArray<FLinearColor>                               RulesAndMessagesColors_43_A16FAA624174C62A8E9E38A5D93774AF; // 0x0050   (0x0010)  
	int32_t                                            MaxRecons_35_AA6BD46D445B109C5CA3C896F0409980;              // 0x0060   (0x0004)  
	int32_t                                            MaxHeavies_36_625D27FD4F199375A3E08C8DF95E921F;             // 0x0064   (0x0004)  
	int32_t                                            MaxTroopers_37_DAB06104493B4CC07CF439A54BA34866;            // 0x0068   (0x0004)  
	bool                                               EnableClassLimits_39_89CE71FD44B36CE146EDA6800298B253;      // 0x006C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x006D   (0x0003)  MISSED
	FText                                              RulesAndWelcomeMessages_47_A7ACDC3D4991F69280FCEE8F6071495A; // 0x0070   (0x0018)  
	int32_t                                            MaxPlayers_50_52D6ED504F39A95411D2FCA34CA26F16;             // 0x0088   (0x0004)  
};

/// Class /Game/Blueprints/SaveGameFiles/SG_ServerSettings.SG_ServerSettings_C
/// Size: 0x00B8 (184 bytes) (0x000028 - 0x0000B8) align 8 MaxSize: 0x00B8
class USG_ServerSettings_C : public USaveGame
{ 
public:
	FST_ServerSettings                                 ServerSettings;                                             // 0x0028   (0x008C)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x00B4   (0x0004)  MISSED
};

/// Struct /Game/Blueprints/Structs/ST_CrosshairSettings.ST_CrosshairSettings
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 4 MaxSize: 0x0020
struct FST_CrosshairSettings
{ 
	bool                                               EnableCenterDot_1_9CBBD3E24DC4F22973260EB9088EB9B0;         // 0x0000   (0x0001)  
	bool                                               EnablesCrossLines_29_68CC6F9A40307633DBD431AA4FD4D4A6;      // 0x0001   (0x0001)  
	bool                                               EnableShadow_26_8F56D01A44B400AA927B399482FA9497;           // 0x0002   (0x0001)  
	bool                                               UseStaticCrosshair_3_A7210C1544C45AD202BA5087D9EE05B9;      // 0x0003   (0x0001)  
	float                                              StaticCrosshairSpread_24_6BBB215D45ACF27348AFA599EC868F60;  // 0x0004   (0x0004)  
	float                                              CrosshairRedColor_10_E1834F0F4E93EAC7EFB9D58A08C72EF5;      // 0x0008   (0x0004)  
	float                                              CrosshairGreenColor_11_566286C3444BC5E7E661CDA8D95F0997;    // 0x000C   (0x0004)  
	float                                              CrosshairBlueColor_12_839A0422486DA0C035335CB8AF8770B7;     // 0x0010   (0x0004)  
	float                                              CrosshairLineLength_14_8B8C12A84B96CD02C9371EADB361AC0B;    // 0x0014   (0x0004)  
	float                                              CrosshairLineWidth_22_3AE0EB264284E0EC4B7BDEBB9C3F2E49;     // 0x0018   (0x0004)  
	float                                              BorderThickness_23_0DB8A5204D4B26365D1844922F8FD700;        // 0x001C   (0x0004)  
};

/// Struct /Game/Blueprints/Structs/ST_Options.ST_Options
/// Size: 0x009A (154 bytes) (0x000000 - 0x00009A) align 8 MaxSize: 0x009A
struct FST_Options
{ 
	float                                              MouseSensitivity_2_102E18DC4CB7C5BE531B5A80E64EBCBC;        // 0x0000   (0x0004)  
	float                                              PlaneMouseSensitivity_8_5C1E3EB248204E5FAD61C38D5F074830;   // 0x0004   (0x0004)  
	bool                                               AimToggle_6_DA13C1EE420205509840B2AB0E735A69;               // 0x0008   (0x0001)  
	bool                                               InvertedFlying_10_52D00F184063F318D7BE1FBAB924F881;         // 0x0009   (0x0001)  
	bool                                               UseMouseToStrafe_12_6740C6DE4FF0D90D524A338AF9DF2826;       // 0x000A   (0x0001)  
	bool                                               UseInstantThrow_69_E3BCFAFB430D2657130189A1B9647AD5;        // 0x000B   (0x0001)  
	float                                              MasterVolume_19_C8AA031340C6551B2652E5B202FB9BE9;           // 0x000C   (0x0004)  
	float                                              EffectsVolume_21_B8FABB5145E4945332503E9BF499ACD0;          // 0x0010   (0x0004)  
	float                                              MusicVolume_23_CABC50FD47D4D0519D0EBBB4851FDE7C;            // 0x0014   (0x0004)  
	int32_t                                            AAMethod_26_D88827CF436348920597678876AA82C8;               // 0x0018   (0x0004)  
	int32_t                                            SharpenAmount_28_7F8C1C4F4E3B948532CAB39B74593B7A;          // 0x001C   (0x0004)  
	bool                                               EnableCrosshairHitGlow_30_F96A58D4450C5EFCE8C1DEBCF4A1D284; // 0x0020   (0x0001)  
	bool                                               EnableAnimatedCrosshair_32_F5FDFB9042603CF130E6E9A124F0F9D2; // 0x0021   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0022   (0x0002)  MISSED
	float                                              MouseSensitivtyScoped_98_286033F74BFAC6F653B0AFB5E72F78B8;  // 0x0024   (0x0004)  
	bool                                               AutoReloadStowedAwayWeapons_37_75641E194A17B052E8E5AE92C975C1AF; // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0029   (0x0003)  MISSED
	int32_t                                            MaxChatMessages_40_26E1EFF64E569640145B0CB7B4B69D5A;        // 0x002C   (0x0004)  
	bool                                               ShowCrosshairReloadBar_43_980E0E5643399DD255974FB59D137898; // 0x0030   (0x0001)  
	bool                                               EnableCenterDot_45_4D2C4C8F4339CF8839D1968FE95C0828;        // 0x0031   (0x0001)  
	bool                                               UseStaticCrosshair_47_032CB5714A93659309D10E97D24F58BE;     // 0x0032   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x0033   (0x0001)  MISSED
	float                                              StaticCrosshairSize_50_4F5AAB644067925599E7F4838D3C01F8;    // 0x0034   (0x0004)  
	float                                              CrosshairRedColor_55_1A4B8D6B4F9AC8B771C100B4184A259D;      // 0x0038   (0x0004)  
	float                                              CrosshairGreenColor_56_3D83F5284BF4F3C867BB85B389DE9B49;    // 0x003C   (0x0004)  
	float                                              CrosshairBlueColor_58_EF387CEF4DA4E10060BBDD945A093FA6;     // 0x0040   (0x0004)  
	float                                              CrosshairLineLength_61_C80ED1884DE2F72483905D973C0C6F2D;    // 0x0044   (0x0004)  
	TArray<FST_CrosshairSettings>                      Crosshairs_65_6A194DED48CFA00C056F94AA7D0904CC;             // 0x0048   (0x0010)  
	bool                                               InvertScrollWeaponSwapDirection_68_E1D2DD2F4E5D085542AC01BBBFE09611; // 0x0058   (0x0001)  
	bool                                               UseCustomCrosshair_71_FE70E1A64F7759CCB6ADCE9DE9701ECB;     // 0x0059   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2];                                       // 0x005A   (0x0002)  MISSED
	float                                              CrosshairSize_74_A948471E42E6B94D5594D29569B017F2;          // 0x005C   (0x0004)  
	bool                                               ShowBOTtag_76_0C3DA5E343CA0FFB5C20F48D3F654CF8;             // 0x0060   (0x0001)  
	bool                                               MarketingFeaturesEnabled_78_D0EFB62A49DD64698537DB9E7565F63A; // 0x0061   (0x0001)  
	unsigned char                                      UnknownData04_6[0x2];                                       // 0x0062   (0x0002)  MISSED
	float                                              MotionBlurAmount_82_FDF667E64517577B7785D9A6716D7739;       // 0x0064   (0x0004)  
	bool                                               EnableTesselation_84_66E827DE4CB81D36DA64B6B2303A7EDE;      // 0x0068   (0x0001)  
	bool                                               EnableAmbientOcclusion_86_C655C43D4AD065E58522D4A38BBA12DB; // 0x0069   (0x0001)  
	bool                                               InvertMouseY_88_29E4E787456E7BE73A7F498BBC901342;           // 0x006A   (0x0001)  
	bool                                               ToggleSprint_92_6A89D7B543F08F48123E76AA849E53DB;           // 0x006B   (0x0001)  
	float                                              MouseSensitivityAiming_101_2394C5AB4DD9FBC641927E88582D35C2; // 0x006C   (0x0004)  
	float                                              CameraHeight_104_31E8773D4D80BAC0A17CF387971B703F;          // 0x0070   (0x0004)  
	float                                              CameraHorizontalOffset_106_046005AB49AFEDA9674BFEA9DBE5E700; // 0x0074   (0x0004)  
	float                                              CameraDistance_108_73E437114C74DB382FBDF38731D334A2;        // 0x0078   (0x0004)  
	bool                                               EnableClosedFeatures_111_76D8F2F4488C2E68FAE46086C205B9F0;  // 0x007C   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x007D   (0x0003)  MISSED
	float                                              AnnouncerVoiceVolume_114_2072D98A4CD6CD4E7D883D86EA516DB7;  // 0x0080   (0x0004)  
	unsigned char                                      UnknownData06_6[0x4];                                       // 0x0084   (0x0004)  MISSED
	FDataTableRowHandle                                SelectedEvent_117_D843C1CB4789AC42295B4A8286A2D30C;         // 0x0088   (0x0010)  
	bool                                               CharacterHitFlash_119_BE8B54EA4A4C6469A6319FA1B7C222B0;     // 0x0098   (0x0001)  
	bool                                               WeaponFireCameraShake_121_208C6A81425FA7A53606A293CCBD2FCE; // 0x0099   (0x0001)  
};

/// Class /Game/Blueprints/SaveGameFiles/SG_Options.SG_Options_C
/// Size: 0x00C8 (200 bytes) (0x000028 - 0x0000C8) align 8 MaxSize: 0x00C8
class USG_Options_C : public USaveGame
{ 
public:
	FST_Options                                        OPTIONS;                                                    // 0x0028   (0x009A)  
	unsigned char                                      UnknownData00_7[0x6];                                       // 0x00C2   (0x0006)  MISSED
};

/// Struct /Game/Blueprints/Structs/ST_Loadout.ST_Loadout
/// Size: 0x00AC (172 bytes) (0x000000 - 0x0000AC) align 4 MaxSize: 0x00AC
struct FST_Loadout
{ 
	int32_t                                            AxisSoldierWeapon1_37_2813D96344FCDCD3D03614A18A3A1139;     // 0x0000   (0x0004)  
	int32_t                                            AxisSoldierWeapon2_38_0EB8D320433C3CD64EE2D7A65A4C8C8C;     // 0x0004   (0x0004)  
	int32_t                                            AlliedSoldierWeapon1_39_6D20F9974EB6A8772C86DE89B057A1BA;   // 0x0008   (0x0004)  
	int32_t                                            AlliedSoldierWeapon2_40_A8113DE747522074CFF8938F3AEFAE1C;   // 0x000C   (0x0004)  
	int32_t                                            AxisGunnerWeapon1_41_1118BC5E43059BABE2CA4286B3667BEC;      // 0x0010   (0x0004)  
	int32_t                                            AxisGunnerWeapon2_42_B778B24748D21A039A5AFC885DC6F02A;      // 0x0014   (0x0004)  
	int32_t                                            AlliedGunnerWeapon1_43_BBD4FAF04F4697A354C72DB2649E6540;    // 0x0018   (0x0004)  
	int32_t                                            AlliedGunnerWeapon2_44_6D55489D4D97B9CF56F76C856EC13059;    // 0x001C   (0x0004)  
	int32_t                                            AxisCommandoWeapon1_45_DD3453D6478F777AA32EE3B1EB7ED4C3;    // 0x0020   (0x0004)  
	int32_t                                            AxisCommandoWeapon2_46_EB7C05704A51CA637120D4BEE3A21C65;    // 0x0024   (0x0004)  
	int32_t                                            AlliedCommandoWeapon1_47_D4E2C302407747F2F2839CBC76D08AC7;  // 0x0028   (0x0004)  
	int32_t                                            AlliedCommandoWeapon2_48_04F55DB645D341FDDDC2A4B945EF4B50;  // 0x002C   (0x0004)  
	int32_t                                            AlliedSoldierSkill1_55_0898AD434B82F8163E96748B6BF23A92;    // 0x0030   (0x0004)  
	int32_t                                            AlliedSoldierSkill2_56_1647DB67413EDF214477F899C3C2DB80;    // 0x0034   (0x0004)  
	int32_t                                            AxisSoldierSkill1_57_CD5684234B546DACBB3F648C5F8831BD;      // 0x0038   (0x0004)  
	int32_t                                            AxisSoldierSkill2_58_25D80A6B4124D2AA7A8DA69B77AAA7C6;      // 0x003C   (0x0004)  
	int32_t                                            AlliedGunnerSkill1_59_B7ABF7CE4060C024D6DEBE8B884C1DCB;     // 0x0040   (0x0004)  
	int32_t                                            AlliedGunnerSkill2_60_BB776FB94FFB91F9012015999EDC45BC;     // 0x0044   (0x0004)  
	int32_t                                            AxisGunnerSkill1_61_8556F54C492D8E4B0B38B98B2FA4E739;       // 0x0048   (0x0004)  
	int32_t                                            AxisGunnerSkill2_62_F744CF8A4103B0934759F88A1B8322AA;       // 0x004C   (0x0004)  
	int32_t                                            AlliedCommandoSkill1_63_D610E9CD456F63865A4EF0B769230979;   // 0x0050   (0x0004)  
	int32_t                                            AlliedCommandoSkill2_64_FA0E6FD5451FE780731D538BF659A727;   // 0x0054   (0x0004)  
	int32_t                                            AxisCommandoSkill1_65_776F280A423E3A61F443AEB0809ED35A;     // 0x0058   (0x0004)  
	int32_t                                            AxisCommandoSkill2_66_4E4887BD4E0EBCBEAD656F99C24F019F;     // 0x005C   (0x0004)  
	int32_t                                            AxisHat_75_12C03A124EB6070CB4C5DC8AFC53A80F;                // 0x0060   (0x0004)  
	int32_t                                            AxisOutfit_76_2CF1CBD949C96F8396133C8CD7679458;             // 0x0064   (0x0004)  
	int32_t                                            AlliedHat_77_2E3525C442887A4CB9E82EAF29D5409D;              // 0x0068   (0x0004)  
	int32_t                                            AlliedOutfit_78_77A572734314004AB900558A8C408F7F;           // 0x006C   (0x0004)  
	int32_t                                            AxisSoldierExplosive_91_8B76E0084603871BBF97C68C5D6801B3;   // 0x0070   (0x0004)  
	int32_t                                            AlliedSoldierExplosive_92_B028B48941735AFB3DD8A3B8A7B43D41; // 0x0074   (0x0004)  
	int32_t                                            AxisGunnerExplosive_93_7C6F29D641FA6B53527CF1BFF68E4069;    // 0x0078   (0x0004)  
	int32_t                                            AlliedGunnerExplosive_94_2C64DEBD437988778B300FB35628F69F;  // 0x007C   (0x0004)  
	int32_t                                            AxisCommandoExplosive_95_3568BCA84C0D07BC1BFBAD9D4B7DFE0E;  // 0x0080   (0x0004)  
	int32_t                                            AlliedCommandoExplosive_96_2374F10B4CF15D8035715FA806384EF3; // 0x0084   (0x0004)  
	int32_t                                            AxisEngineerWeapon1_102_685CEF944F3CF804C43C9D920F0E12DE;   // 0x0088   (0x0004)  
	int32_t                                            AxisEngineerWeapon2_103_F3F7E2B047EC01EFC8B57EA0C97348F9;   // 0x008C   (0x0004)  
	int32_t                                            AlliedEngineerWeapon1_106_95FBEF724E00BAF6D1A66781EFFA082C; // 0x0090   (0x0004)  
	int32_t                                            AlliedEngineerWeapon2_107_2471F2B0439403172F8427B0E4946119; // 0x0094   (0x0004)  
	int32_t                                            AxisEngineerSkill1_110_1EA54663411952BEFA8657B419933BF8;    // 0x0098   (0x0004)  
	int32_t                                            AxisEngineerSkill2_111_4ADA97F8428DA3EA54FD9EA0B1C818ED;    // 0x009C   (0x0004)  
	int32_t                                            AlliedEngineerSkill1_114_B0FF00A541ADC0F95DBFADA2883EBF51;  // 0x00A0   (0x0004)  
	int32_t                                            AlliedEngineerSkill2_115_CFBCBD6645BA668B8A938CA370783FB7;  // 0x00A4   (0x0004)  
	int32_t                                            MemberVar_116_A7A8655E4DE657AF1F1D0F96EBA9AFE6;             // 0x00A8   (0x0004)  
};

/// Class /Game/Blueprints/SaveGameFiles/SG_Loadout.SG_Loadout_C
/// Size: 0x00D4 (212 bytes) (0x000028 - 0x0000D4) align 8 MaxSize: 0x00D4
class USG_Loadout_C : public USaveGame
{ 
public:
	FST_Loadout                                        Loadout;                                                    // 0x0028   (0x00AC)  
};

/// Struct /Game/Blueprints/Structs/ST_SelectedCosmeticItems.ST_SelectedCosmeticItems
/// Size: 0x0130 (304 bytes) (0x000000 - 0x000130) align 8 MaxSize: 0x0130
struct FST_SelectedCosmeticItems
{ 
	TArray<int32_t>                                    FacialHairStyles_46_1FC317574719BA1A39B99D82C3CD5957;       // 0x0000   (0x0010)  
	TArray<int32_t>                                    HairColors_47_AC0D988246DB7852F8C4A1A72E4273CA;             // 0x0010   (0x0010)  
	TArray<int32_t>                                    WeaponSkins_45_66C1A89D484238B5826C759CC91FA6D2;            // 0x0020   (0x0010)  
	TArray<float>                                      SkinTones_51_6FF09F11414BF7CCFDD9589E9B636BF5;              // 0x0030   (0x0010)  
	TArray<int32_t>                                    Hats_57_409DC7B943AD9A59E136E4910C6F94D3;                   // 0x0040   (0x0010)  
	TArray<int32_t>                                    UpperFaceItems_59_035C7ADF4C969F48CD937396EC79AAC8;         // 0x0050   (0x0010)  
	TArray<int32_t>                                    LowerFaceItems_61_D5E05DAA40ACF3A0A7C8E88CB7F47C32;         // 0x0060   (0x0010)  
	TArray<int32_t>                                    Legs_74_00B105BE4B43D4A3AD652B8711CFD60B;                   // 0x0070   (0x0010)  
	TArray<int32_t>                                    HairStyles_67_460627FE4D6382017E5D6FA40FB8C5CB;             // 0x0080   (0x0010)  
	TArray<int32_t>                                    Torso_75_847EB6C24E1CB4EE98818299ECCFD837;                  // 0x0090   (0x0010)  
	TArray<int32_t>                                    Shirts_77_495545E14EF208F49061B0866D7D5F8E;                 // 0x00A0   (0x0010)  
	TArray<int32_t>                                    Hands_79_23503DBC483675E2254D7794DEB1151C;                  // 0x00B0   (0x0010)  
	TArray<int32_t>                                    Feet_81_8F4C56CA40F15C015BCA9A87569F7826;                   // 0x00C0   (0x0010)  
	TArray<int32_t>                                    Underwear_83_45AD869D45703AEC1FF2BE966EDB4E39;              // 0x00D0   (0x0010)  
	TArray<int32_t>                                    Back_85_AF22F9814BB6D60AB407B7897D662CEF;                   // 0x00E0   (0x0010)  
	TArray<int32_t>                                    Tattoos_87_524E718948ED70E6FF0D9EADA68919A1;                // 0x00F0   (0x0010)  
	TArray<int32_t>                                    Waist_92_A7169BE548D9FFDFD99B75AE66F49873;                  // 0x0100   (0x0010)  
	TArray<int32_t>                                    EyeColor_96_82F75F3F42A13A0DA619D89AAE0193FB;               // 0x0110   (0x0010)  
	TArray<int32_t>                                    Titles_100_FCBD8BD54E6E8095F1F69AA75FA5CD2E;                // 0x0120   (0x0010)  
};

/// Class /Game/Blueprints/SaveGameFiles/SG_Customization.SG_Customization_C
/// Size: 0x0158 (344 bytes) (0x000028 - 0x000158) align 8 MaxSize: 0x0158
class USG_Customization_C : public USaveGame
{ 
public:
	FST_SelectedCosmeticItems                          SelectedCosmeticItems;                                      // 0x0028   (0x0130)  
};

/// Struct /Game/Blueprints/ST_ServerManagerPlayerInfo.ST_ServerManagerPlayerInfo
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FST_ServerManagerPlayerInfo
{ 
	FString                                            SteamID_2_372E8E5647AB2E117B7DAA9423FDB703;                 // 0x0000   (0x0010)  
	FString                                            LastUsername_6_71C2EFE14AEF3D30A8B8A2827FA335F9;            // 0x0010   (0x0010)  
};

/// Class /Game/Blueprints/SaveGameFiles/SG_BanList.SG_BanList_C
/// Size: 0x0038 (56 bytes) (0x000028 - 0x000038) align 8 MaxSize: 0x0038
class USG_BanList_C : public USaveGame
{ 
public:
	TArray<FST_ServerManagerPlayerInfo>                PermaBanList;                                               // 0x0028   (0x0010)  
};

/// Class /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UGlobalFunctions_C : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetCurrentMapName
	// void GetCurrentMapName(class UObject* __WorldContext, FString& MapName);                                                 // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetLoopedLevelFromTotalLevel
	// void GetLoopedLevelFromTotalLevel(int32_t TotalLevel, class UObject* __WorldContext, int32_t& LoopedLevel);              // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetPrestigeEmblem
	// void GetPrestigeEmblem(TEnumAsByte<E_PrestigeRanks> PrestigeRank, class UObject* __WorldContext, class UTexture2D*& EmblemTexture128, class UTexture2D*& EmblemTexture64); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetLevelLoopAmount
	// void GetLevelLoopAmount(class UObject* __WorldContext, int32_t& LevelLoopAmount);                                        // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.UnlockSteamAchievement
	// void UnlockSteamAchievement(FString Achievement, class UObject* __WorldContext);                                         // [0x1325ea0] Static|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetTokenAndEventInfoFromRowName
	// void GetTokenAndEventInfoFromRowName(FName RowName, class UObject* __WorldContext, FST_EventAndTokenSettings& TokenInfo); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetTitleFromID
	// void GetTitleFromID(int32_t TitleID, class UObject* __WorldContext, FText& Title);                                       // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.Get Player Token Amount For Token Event
	// void GetPlayerTokenAmountForTokenEvent(FDataTableRowHandle TokenEvent, class UObject* __WorldContext, FST_TokenAmount& TokenAmount); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetTokenInfoFromTokenAmount
	// void GetTokenInfoFromTokenAmount(FST_TokenAmount& TokenAmount, class UObject* __WorldContext, FST_EventAndTokenSettings& TokenInfo, FName& EventName); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetHighestLevelUnit
	// void GetHighestLevelUnit(class UObject* __WorldContext, TEnumAsByte<E_Units>& Class, TEnumAsByte<E_Teams>& Team);        // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.RemovePlayerFromGame
	// void RemovePlayerFromGame(class APlayerState* PlayerState, FString DisconnectErrorCode, class UObject* __WorldContext);  // [0x1325ea0] Static|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetTruePawnLocation
	// void GetTruePawnLocation(class APawn* Pawn, class UObject* __WorldContext, FVector& PawnLocation);                       // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetMapCenter
	// void GetMapCenter(class UObject* __WorldContext, FVector& MapCenterLocation, bool& IsValid);                             // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.CheckIfPawnIsAlive
	// void CheckIfPawnIsAlive(class APawn* Pawn, class UObject* __WorldContext, bool& Alive);                                  // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetMapIndexFromName
	// void GetMapIndexFromName(FString Map, class UObject* __WorldContext, int32_t& Index);                                    // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetMapFromIndex
	// void GetMapFromIndex(int32_t Index, class UObject* __WorldContext, FST_Map& MapInfo, FString& MapName, FString& MapNameNoUnderscores); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetBotDifficulty(HostOnly)
	// void GetBotDifficulty_HostOnly_(class UObject* __WorldContext, float& Difficulty);                                       // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetRandomSpawnPoint
	// void GetRandomSpawnPoint(class ABP_SpawnableBase_C* Spawnable, bool IsAI, bool UseAlternativeSpawnPoints, class UObject* __WorldContext, FVector& SpawnLocation, FRotator& SpawnRotation, class ABP_VehicleBase_C*& VehicleToEnterAfterSpawn, class ABP_VehicleSeat_C*& VehicleSeatToEnterAfterSpawn, bool& CanSpawn); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetRandomTeamFlag
	// void GetRandomTeamFlag(TEnumAsByte<E_Teams> Team, class UObject* __WorldContext, class ABP_Flag_C*& Flag);               // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetPawnData
	// void GetPawnData(class AActor* PawnActor, class UObject* __WorldContext, TEnumAsByte<E_Teams>& Team, int32_t& PlayerIndex, FST_PlayerStats& PlayerStats, class UPawnDataComponent_C*& PawnDataComponent); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.Global Game Settings
	// void GlobalGameSettings(class UObject* __WorldContext, float& AI_CommandoDetectRange, float& GravityAmount, float& CameraFOV); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetClassAndTeamUnitIndex
	// void GetClassAndTeamUnitIndex(TEnumAsByte<E_Units> Class, TEnumAsByte<E_Teams> Team, class UObject* __WorldContext, int32_t& Index); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetCharacterDamageBuffDebuff
	// void GetCharacterDamageBuffDebuff(class ABP_Character_C* Character, class UObject* __WorldContext, class UClass*& BuffDebuff); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetCurrentUnitMatchScore
	// void GetCurrentUnitMatchScore(class UObject* __WorldContext, int32_t& Score_XP_);                                        // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetPlayerControllerFromPlayerState
	// void GetPlayerControllerFromPlayerState(class APlayerState* PlayerState, class UObject* __WorldContext, class APlayerController*& PlayerController); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.CheckIfTeamShouldUseAltSpawns
	// void CheckIfTeamShouldUseAltSpawns(TEnumAsByte<E_Teams> Team, class UObject* __WorldContext, bool& UseAltSpawns);        // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetAOEObstacleHitAmount
	// void GetAOEObstacleHitAmount(class AActor* HitActor, FVector AOEOriginLocation, class UObject* __WorldContext, float& DamageAmount_0_1_); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetEventRewardFromScore
	// void GetEventRewardFromScore(int32_t Score, class UObject* __WorldContext, int32_t& Amount);                             // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.IncreaseStat
	// void IncreaseStat(FString Stat, int32_t IncreaseAmount, class UObject* __WorldContext, bool& Success);                   // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.ApplyCharacterCustomization
	// void ApplyCharacterCustomization(FST_CharacterCustomization& Customization, class USkeletalMeshComponent* FacialHair, class USkeletalMeshComponent* CharacterMesh, class UStaticMeshComponent* Hat, class UStaticMeshComponent* HatExtras, class USkeletalMeshComponent* Legs, class UStaticMeshComponent* UpperFace, class USkeletalMeshComponent* Torso, class UStaticMeshComponent* LowerFace, class USkeletalMeshComponent* Back, class USkeletalMeshComponent* Feet, class USkeletalMeshComponent* Waist, class USkeletalMeshComponent* LowerFaceSkeletal, class USkeletalMeshComponent* HatSkeletal, class USkeletalMeshComponent* GlovesSkeletal, class UObject* __WorldContext, class UMaterialInstanceDynamic*& LegsMID, class UMaterialInstanceDynamic*& CharacterMID, TArray<UMaterialInstanceDynamic*>& HatItemMIDs, TArray<UMaterialInstanceDynamic*>& TorsoMIDs); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetOptions
	// void GetOptions(class UObject* __WorldContext, FST_Options& OPTIONS);                                                    // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.InitOptions
	// void InitOptions(class UObject* __WorldContext);                                                                         // [0x1325ea0] Static|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetPlayerStats
	// void GetPlayerStats(int32_t PlayerIndex, class UObject* __WorldContext, FST_PlayerStats& Stats);                         // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetTotalPlayerScore
	// void GetTotalPlayerScore(class UObject* __WorldContext, int32_t& TotalScore);                                            // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetRequiredXPForLevel
	// int32_t GetRequiredXPForLevel(int32_t Level, class UObject* __WorldContext);                                             // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetPlayerRank
	// void GetPlayerRank(bool UseCustomProgressArray_Optional_, TArray<FST_UnitProgress>& CustomUnitProgressArray_LeaveEmptyForLocalPlayer_, class UObject* __WorldContext, int32_t& PlayerRank); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetPlayerRankTitle
	// void GetPlayerRankTitle(int32_t TotalLevel, class UObject* __WorldContext, FString& Rank, TEnumAsByte<E_PrestigeRanks>& PrestigeRank, int32_t& PrestigeLevel); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetLevelFromXP
	// void GetLevelFromXP(int32_t XPAmount, class UObject* __WorldContext, int32_t& ActualLevel, int32_t& RequiredXPForNextLevel, int32_t& CurrentXPAmountProgress, int32_t& CappedLevel); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetUnitLevel
	// void GetUnitLevel(FST_UnitProgress UnitProgress, class UObject* __WorldContext, int32_t& ActualLevel, int32_t& RequiredXPForNextLevel, int32_t& CurrentXPAmountProgress, int32_t& CappedLevel); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.CheckIfOnCommunityBanList
	// void CheckIfOnCommunityBanList(class APlayerState* PlayerState, class UObject* __WorldContext, bool& OnList);            // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.CheckIfStatBanned
	// void CheckIfStatBanned(class APlayerState* PlayerState, class UObject* __WorldContext, bool& OnList);                    // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.LevelableUnitsAPICallsList
	// void LevelableUnitsAPICallsList(class UObject* __WorldContext, TArray<FString>& Units);                                  // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetCosmeticItemStruct
	// void GetCosmeticItemStruct(int32_t Index, TEnumAsByte<E_UnlockableCategories> Category, class UObject* __WorldContext, FST_Unlockable& Item); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.ApplyWeaponSkin
	// void ApplyWeaponSkin(FST_Unlockable Cosmetic, class UStaticMeshComponent* MeshComponent, bool MainlyWoodenWeapon, class UObject* __WorldContext); // [0x1325ea0] Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetPlayerUnitProgress
	// void GetPlayerUnitProgress(TEnumAsByte<E_Units> Class, TEnumAsByte<E_Teams> Team, class UObject* __WorldContext, FST_UnitProgress& Progress); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetAllPlayerUnitsProgress
	// void GetAllPlayerUnitsProgress(class UObject* __WorldContext, TArray<FST_UnitProgress>& UnitProgress);                   // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.TraceAOEDamage
	// void TraceAOEDamage(FVector AOELocation, float AOERadius, TArray<AActor*>& AlreadyHitActors, class APawn* AttackerPawn, bool Debug, float LaunchForce, FHitResult ExtraHit_optional_, class UObject* __WorldContext, TArray<AActor*>& HitActors, TArray<FVector>& HitLocations, TArray<ABP_Character_C*>& CharactersToLaunch, TArray<FVector>& LaunchVelocities, bool& HasCausedDamage); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.InflictAOEDamage
	// void InflictAOEDamage(TArray<AActor*>& HitActors, FVector AOELocation, TArray<FVector>& HitLocations, int32_t AOEDamage, float AOERadius, class APawn* AttackerPawn, TEnumAsByte<E_DamageTypes> DamageType, FVector DamageDirection, bool IgnoreAOERadius_AlwaysFullDamage_, class UClass* BuffDebuff, FText SpecialKillMessage, bool IsPiercingDamage, TArray<ABP_Character_C*>& CharactersToLaunch, TArray<FVector>& LaunchVelocities, class UClass* ProjectileClass_optional_, class UClass* EquipableClass_optonal_, class UObject* __WorldContext); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.InflictDamage
	// void InflictDamage(class AActor*& HitActor, FVector HitLocation, int32_t DamageAmount, TEnumAsByte<E_DamageTypes> DamageType, TArray<AActor*>& AlreadyHitActors, bool FromServer, FVector DamageDirection, class APawn* AttackerPawn, class UClass* BuffDebuff, int32_t PlayerIndex_Attacker_, bool IgnoreTeamProtection, FText SpecialKillMessage, bool ShouldBreakInvisibility, bool IsCriticalHit, bool IsPiercingDamage, class UClass* ProjectileClass_optional_, class UClass* EquipableClass_optonal_, class UObject* __WorldContext); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.EnterGameModus
	// void EnterGameModus(class UObject* __WorldContext);                                                                      // [0x1325ea0] Static|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.EnterUIModus
	// void EnterUIModus(class UObject* __WorldContext);                                                                        // [0x1325ea0] Static|Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.DisplayDamageNumber
	// void DisplayDamageNumber(FVector& WorldPosition, int32_t DamageAmount, bool CriticalHit_, class AActor* HitActor, bool IsLow, TEnumAsByte<E_DamageTypes> DamageType, class UClass* EquipableClass_optional_, class UObject* __WorldContext); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetCosmeticItemDatatable
	// void GetCosmeticItemDatatable(TEnumAsByte<E_UnlockableCategories> Category, class UObject* __WorldContext, class UDataTable*& NewParam); // [0x1325ea0] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetCosmeticItemIndex
	// void GetCosmeticItemIndex(FST_Unlockable Item, class UObject* __WorldContext, int32_t& ItemIndex);                       // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.Get Unit Character Customization
	// void GetUnitCharacterCustomization(FST_SelectedCosmeticItems& SelectedCosmeticItems, int32_t UnitIndex, class UObject* __WorldContext, FST_CharacterCustomization& CharacterCustomization); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetSteamItemUnlockedState
	// void GetSteamItemUnlockedState(int32_t ItemIndex, class UObject* __WorldContext, bool& Unlocked, int32_t& Quantity);     // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.Get PlayerUnitType
	// void GetPlayerUnitType(class APawn* Pawn, class UObject* __WorldContext, TEnumAsByte<E_Units>& UnitType);                // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Blueprints/Functions/GlobalFunctions.GlobalFunctions_C.GetProjectileFireDirection
	// void GetProjectileFireDirection(class UArrowComponent* ProjectileStart, FVector CameraLocation, FVector CameraDirection, TArray<AActor*>& ActorsToIgnore, FVector ActorLocation, bool UseSimpleDirection, bool UseHitScan, class UObject* __WorldContext, FVector& FinalDirection, float& Distance, bool& IsInstantHit, FHitResult& InstantHit); // [0x1325ea0] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Struct /Game/Blueprints/CosmeticItems/ST_AccountPrivilige.ST_AccountPrivilige
/// Size: 0x0005 (5 bytes) (0x000000 - 0x000005) align 4 MaxSize: 0x0005
struct FST_AccountPrivilige
{ 
	int32_t                                            OwnedAppID_15_B04D6AF4472ED1AEAFCDA7904F4A600F;             // 0x0000   (0x0004)  
	TEnumAsByte<E_SpecialPrivileges>                   SpecialPrivilege_20_368221D64ED11A21C1CB5CA37AECD08F;       // 0x0004   (0x0001)  
};

/// Class /Game/Blueprints/BP_GameInstance.BP_GameInstance_C
/// Size: 0x0630 (1584 bytes) (0x0001A8 - 0x000630) align 8 MaxSize: 0x0630
class UBP_GameInstance_C : public UGameInstance
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x01A8   (0x0008)  
	int32_t                                            BotAmount;                                                  // 0x01B0   (0x0004)  
	int32_t                                            Tickets;                                                    // 0x01B4   (0x0004)  
	TEnumAsByte<E_Scenarios>                           Scenario;                                                   // 0x01B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x01B9   (0x0003)  MISSED
	float                                              AIDifficulty;                                               // 0x01BC   (0x0004)  
	TEnumAsByte<E_EventCategories>                     ActiveEventCategory;                                        // 0x01C0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x01C1   (0x0007)  MISSED
	FDataTableRowHandle                                ActiveEvent;                                                // 0x01C8   (0x0010)  
	FDataTableRowHandle                                SelectedEventPass_Token_;                                   // 0x01D8   (0x0010)  
	FText                                              Version;                                                    // 0x01E8   (0x0018)  
	FST_Options                                        OPTIONS;                                                    // 0x0200   (0x009A)  
	unsigned char                                      UnknownData02_6[0x6];                                       // 0x029A   (0x0006)  MISSED
	FST_Loadout                                        Loadout;                                                    // 0x02A0   (0x00AC)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x034C   (0x0004)  MISSED
	FST_SelectedCosmeticItems                          SelectedCosmeticItems;                                      // 0x0350   (0x0130)  
	FString                                            CurrentMap;                                                 // 0x0480   (0x0010)  
	TEnumAsByte<E_Units>                               SelectedClass;                                              // 0x0490   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x0491   (0x0007)  MISSED
	TArray<FString>                                    RandomMaps;                                                 // 0x0498   (0x0010)  
	bool                                               UseRandomMap;                                               // 0x04A8   (0x0001)  
	bool                                               HideHUD;                                                    // 0x04A9   (0x0001)  
	unsigned char                                      UnknownData05_6[0x2];                                       // 0x04AA   (0x0002)  MISSED
	int32_t                                            Level;                                                      // 0x04AC   (0x0004)  
	bool                                               StatsReady;                                                 // 0x04B0   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0x04B1   (0x0007)  MISSED
	FST_ServerSettings                                 ServerSettings;                                             // 0x04B8   (0x008C)  
	unsigned char                                      UnknownData07_6[0x4];                                       // 0x0544   (0x0004)  MISSED
	TArray<FST_ServerManagerPlayerInfo>                PermaBanList;                                               // 0x0548   (0x0010)  
	TArray<FString>                                    GameDurationBanList;                                        // 0x0558   (0x0010)  
	int32_t                                            MaxRecons;                                                  // 0x0568   (0x0004)  
	int32_t                                            MaxTroopers;                                                // 0x056C   (0x0004)  
	int32_t                                            MaxHeavies;                                                 // 0x0570   (0x0004)  
	unsigned char                                      UnknownData08_6[0x4];                                       // 0x0574   (0x0004)  MISSED
	FString                                            DisconnectErrorCode;                                        // 0x0578   (0x0010)  
	bool                                               MainMenuCharacterScreenShotMode;                            // 0x0588   (0x0001)  
	unsigned char                                      UnknownData09_6[0x7];                                       // 0x0589   (0x0007)  MISSED
	TArray<FST_AccountPrivilige>                       AccountPrivileges;                                          // 0x0590   (0x0010)  
	bool                                               ShowSlashScreen;                                            // 0x05A0   (0x0001)  
	unsigned char                                      UnknownData10_6[0x7];                                       // 0x05A1   (0x0007)  MISSED
	FST_PlayerStats                                    LocallyCachedMatchStats;                                    // 0x05A8   (0x0068)  
	TArray<FST_CrosshairSettings>                      DefaultCrosshair_DontEdit_;                                 // 0x0610   (0x0010)  
	SDK_UNDEFINED(16,641) /* FMulticastInlineDelegate */ __um(EventPassSelected);                                  // 0x0620   (0x0010)  


	/// Functions
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.SaveSelectedEventPass
	// void SaveSelectedEventPass();                                                                                            // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.SelectSpecificEventPass
	// void SelectSpecificEventPass(FDataTableRowHandle SelectedEventToken);                                                    // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.SelectLatestActiveEventPass
	// void SelectLatestActiveEventPass();                                                                                      // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.CheckDLC
	// void CheckDLC();                                                                                                         // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.LoadPermaBanList
	// void LoadPermaBanList();                                                                                                 // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.SavePermaBanList
	// void SavePermaBanList();                                                                                                 // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.ClearGameDurationBanList
	// void ClearGameDurationBanList();                                                                                         // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.LoadServerSettings
	// void LoadServerSettings();                                                                                               // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.SaveServerSettings
	// void SaveServerSettings();                                                                                               // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.UpdateVideoOptions
	// void UpdateVideoOptions();                                                                                               // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.UpdateAudioVolumes
	// void UpdateAudioVolumes();                                                                                               // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.LoadLoadout
	// void LoadLoadout();                                                                                                      // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.SaveLoadout
	// void SaveLoadout();                                                                                                      // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.LoadCustomization
	// void LoadCustomization();                                                                                                // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.SaveCustomization
	// void SaveCustomization();                                                                                                // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.LoadOptions
	// void LoadOptions();                                                                                                      // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.SaveOptions
	// void SaveOptions();                                                                                                      // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.OnCallback_80A8AED84647CF0AFAB4F19D0EDF4041
	// void OnCallback_80A8AED84647CF0AFAB4F19D0EDF4041(FRequestCurrentStatsData& Data, bool bWasSuccessful);                   // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.ReceiveShutdown
	// void ReceiveShutdown();                                                                                                  // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.ReceiveInit
	// void ReceiveInit();                                                                                                      // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.ExecuteUbergraph_BP_GameInstance
	// void ExecuteUbergraph_BP_GameInstance(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Blueprints/BP_GameInstance.BP_GameInstance_C.EventPassSelected__DelegateSignature
	// void EventPassSelected__DelegateSignature();                                                                             // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Blueprints/SimpleBlueprints/BP_ChurchLight.BP_ChurchLight_C
/// Size: 0x0250 (592 bytes) (0x000231 - 0x000250) align 8 MaxSize: 0x0250
class ABP_ChurchLight_C : public ABP_LightActorBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x0231   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0238   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x0240   (0x0008)  
	class USpotLightComponent*                         SpotLight;                                                  // 0x0248   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/SimpleBlueprints/BP_ChurchLight.BP_ChurchLight_C.Init
	// void Init();                                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/SimpleBlueprints/BP_ChurchLight.BP_ChurchLight_C.ExecuteUbergraph_BP_ChurchLight
	// void ExecuteUbergraph_BP_ChurchLight(int32_t EntryPoint);                                                                // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/SimpleBlueprints/BP_DistantShip.BP_DistantShip_C
/// Size: 0x0250 (592 bytes) (0x000220 - 0x000250) align 8 MaxSize: 0x0250
class ABP_DistantShip_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	class UMaterialBillboardComponent*                 MaterialBillboard2;                                         // 0x0228   (0x0008)  
	class UMaterialBillboardComponent*                 MaterialBillboard1;                                         // 0x0230   (0x0008)  
	class UMaterialBillboardComponent*                 MaterialBillboard;                                          // 0x0238   (0x0008)  
	class UStaticMeshComponent*                        Plane;                                                      // 0x0240   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0248   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/SimpleBlueprints/BP_DistantShip.BP_DistantShip_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/SimpleBlueprints/BP_DistantShip.BP_DistantShip_C.ExecuteUbergraph_BP_DistantShip
	// void ExecuteUbergraph_BP_DistantShip(int32_t EntryPoint);                                                                // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Blueprints/SimpleBlueprints/BP_SpotLight.BP_SpotLight_C
/// Size: 0x0250 (592 bytes) (0x000231 - 0x000250) align 8 MaxSize: 0x0250
class ABP_SpotLight_C : public ABP_LightActorBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x0231   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0238   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x0240   (0x0008)  
	class USpotLightComponent*                         SpotLight;                                                  // 0x0248   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/SimpleBlueprints/BP_SpotLight.BP_SpotLight_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/SimpleBlueprints/BP_SpotLight.BP_SpotLight_C.Init
	// void Init();                                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/SimpleBlueprints/BP_SpotLight.BP_SpotLight_C.ExecuteUbergraph_BP_SpotLight
	// void ExecuteUbergraph_BP_SpotLight(int32_t EntryPoint);                                                                  // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/SimpleBlueprints/BP_SpotLightPole.BP_SpotLightPole_C
/// Size: 0x0258 (600 bytes) (0x000231 - 0x000258) align 8 MaxSize: 0x0258
class ABP_SpotLightPole_C : public ABP_LightActorBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x0231   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0238   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x0240   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh1;                                                // 0x0248   (0x0008)  
	class USpotLightComponent*                         SpotLight;                                                  // 0x0250   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/SimpleBlueprints/BP_SpotLightPole.BP_SpotLightPole_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/SimpleBlueprints/BP_SpotLightPole.BP_SpotLightPole_C.Init
	// void Init();                                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/SimpleBlueprints/BP_SpotLightPole.BP_SpotLightPole_C.ExecuteUbergraph_BP_SpotLightPole
	// void ExecuteUbergraph_BP_SpotLightPole(int32_t EntryPoint);                                                              // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/SimpleBlueprints/BP_StreetLantern.BP_StreetLantern_C
/// Size: 0x0250 (592 bytes) (0x000231 - 0x000250) align 8 MaxSize: 0x0250
class ABP_StreetLantern_C : public ABP_LightActorBase_C
{ 
public:
	unsigned char                                      UnknownData00_8[0x7];                                       // 0x0231   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0238   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x0240   (0x0008)  
	class UPointLightComponent*                        PointLight;                                                 // 0x0248   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/SimpleBlueprints/BP_StreetLantern.BP_StreetLantern_C.ReceiveBeginPlay
	// void ReceiveBeginPlay();                                                                                                 // [0x1325ea0] Event|Protected|BlueprintEvent 
	// Function /Game/Blueprints/SimpleBlueprints/BP_StreetLantern.BP_StreetLantern_C.ReceiveTick
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Blueprints/SimpleBlueprints/BP_StreetLantern.BP_StreetLantern_C.Init
	// void Init();                                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/SimpleBlueprints/BP_StreetLantern.BP_StreetLantern_C.ExecuteUbergraph_BP_StreetLantern
	// void ExecuteUbergraph_BP_StreetLantern(int32_t EntryPoint);                                                              // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Vehicles/BP_Transport_Motorbike_Axis.BP_Transport_Motorbike_Axis_C
/// Size: 0x05C0 (1472 bytes) (0x0005B8 - 0x0005C0) align 16 MaxSize: 0x05C0
class ABP_Transport_Motorbike_Axis_C : public ABP_Transport_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x05B8   (0x0008)  


	/// Functions
	// Function /Game/Blueprints/Vehicles/BP_Transport_Motorbike_Axis.BP_Transport_Motorbike_Axis_C.InitVehicleThemeSkin
	// void InitVehicleThemeSkin();                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Blueprints/Vehicles/BP_Transport_Motorbike_Axis.BP_Transport_Motorbike_Axis_C.ExecuteUbergraph_BP_Transport_Motorbike_Axis
	// void ExecuteUbergraph_BP_Transport_Motorbike_Axis(int32_t EntryPoint);                                                   // [0x1325ea0] Final                
};

/// Class /Game/Blueprints/Gamemodes/BP_GameMode_COnquest.BP_GameMode_Conquest_C
/// Size: 0x0334 (820 bytes) (0x000334 - 0x000334) align 8 MaxSize: 0x0334
class ABP_GameMode_Conquest_C : public ABP_GameModeBase_C
{ 
public:
};

/// Struct /Game/Blueprints/Structs/ST_SpawnInfo.ST_SpawnInfo
/// Size: 0x0054 (84 bytes) (0x000000 - 0x000054) align 16 MaxSize: 0x0054
struct FST_SpawnInfo
{ 
	TEnumAsByte<E_Units>                               Class_2_10E09B794DD963A2487106B1029A132B;                   // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0001   (0x000F)  MISSED
	FTransform                                         SpawnTransform_16_2C33737F49A063A98D6C6CA44DDC7E9E;         // 0x0010   (0x0030)  
	int32_t                                            Weapon1_6_A394B7C341336C0AEF6CD38FBB824E09;                 // 0x0040   (0x0004)  
	int32_t                                            Weapon2_7_E31B9D904EE20503EF85D98D3F41CE4D;                 // 0x0044   (0x0004)  
	int32_t                                            Explosive_11_C68F42B9447D547FB5741F80D23E9091;              // 0x0048   (0x0004)  
	int32_t                                            Skill1_12_764B469D4414E4B792C40D8079AD42F4;                 // 0x004C   (0x0004)  
	int32_t                                            Skill2_13_55486D7B439063B5E03D02A341329487;                 // 0x0050   (0x0004)  
};

/// Struct /Game/Blueprints/Equipables/ST_ThrowableData.ST_ThrowableData
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 MaxSize: 0x0010
struct FST_ThrowableData
{ 
	int32_t                                            AOED_5_8E3C736C429F1FDF81243E87BA7B82F7;                    // 0x0000   (0x0004)  
	float                                              AOER_13_F980B6584A06F1B8962261A0F94538D6;                   // 0x0004   (0x0004)  
	float                                              RT_9_D260DB2C44C1DCAE5FD37CB6F349B1FE;                      // 0x0008   (0x0004)  
	int32_t                                            TA_12_1E09ED3040039D5537F688AA011AEB5F;                     // 0x000C   (0x0004)  
};

/// Struct /Game/Blueprints/Equipables/ST_RangedWeaponData.ST_RangedWeaponData
/// Size: 0x0024 (36 bytes) (0x000000 - 0x000024) align 4 MaxSize: 0x0024
struct FST_RangedWeaponData
{ 
	float                                              FR_23_D4FA7E5B43D3E6680F9B2895BFA49687;                     // 0x0000   (0x0004)  
	int32_t                                            DD_24_03DDF3CD40110F30ADC5869C03E92EE6;                     // 0x0004   (0x0004)  
	int32_t                                            AOED_25_2802091F461476607D1082BF2AB68EBA;                   // 0x0008   (0x0004)  
	float                                              RT_26_3EDEE30C4204BB73D980AD8E647FC539;                     // 0x000C   (0x0004)  
	int32_t                                            M_27_7CF70512499FC6A0DB9AB58414E21766;                      // 0x0010   (0x0004)  
	float                                              S_28_5601F5D54E76933B2E47CF8BB76FC9D3;                      // 0x0014   (0x0004)  
	int32_t                                            P_29_E17EA62B405FBE9B5A4ED380556387F2;                      // 0x0018   (0x0004)  
	float                                              AOER_32_EBBF66A845237608035125A30CC680FB;                   // 0x001C   (0x0004)  
	int32_t                                            A_38_525BE6F743C482AD17D26DA7DDF97D55;                      // 0x0020   (0x0004)  
};

/// Struct /Game/Blueprints/Equipables/ST_Selectable.ST_Selectable
/// Size: 0x0176 (374 bytes) (0x000000 - 0x000176) align 8 MaxSize: 0x0176
struct FST_Selectable
{ 
	bool                                               Enabled_27_DC03AEAF47E2A0413B04BB9C391ED8C3;                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	FString                                            Name_21_625DD9664508C43AF9B8C6954F25568E;                   // 0x0008   (0x0010)  
	FSlateBrush                                        LargeIcon_71_24E5210F48C308FB7A6DDC83B7C6AC5E;              // 0x0018   (0x0088)  
	FSlateBrush                                        SmallIcon_70_9D12CA8743137BA95C7C4B8BC6104349;              // 0x00A0   (0x0088)  
	FLinearColor                                       BgColorSkill_74_1836F1E548E3AFF3EE2E8CBEB9A652FF;           // 0x0128   (0x0010)  
	class UClass*                                      Blueprint_18_728491FC4590C719F8F32C921790AF76;              // 0x0138   (0x0008)  
	SDK_UNDEFINED(16,642) /* TArray<TEnumAsByte<E_Units>> */ __um(Classes_62_BAA671974FB591E2C2DB33B2BFD5D9C4);    // 0x0140   (0x0010)  
	TEnumAsByte<E_Teams>                               Team_13_D4412A6D48193592F72DA98EB1711E32;                   // 0x0150   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0151   (0x0007)  MISSED
	FText                                              Description_31_E75D316046E9CF34AFE65DA31FB7C72E;            // 0x0158   (0x0018)  
	bool                                               ShouldBreakInvisibilitySkill_49_9BC14C0D4B3FA3F2E2F7AB8682A22E3A; // 0x0170   (0x0001)  
	bool                                               ShowSkillDurationInHudSkill_56_D24C53E4431879C30F046EA22F85F9D1; // 0x0171   (0x0001)  
	bool                                               HeavyWeaponWeapon_51_772F9A9D420058329F416F9C55EAFD08;      // 0x0172   (0x0001)  
	TEnumAsByte<E_WeaponTypes>                         WeaponTypeWeapon_52_5E28A5444B54B847C7F4D4BA371E63B0;       // 0x0173   (0x0001)  
	bool                                               NonDoubleWieldingWeaponTypeWeapon_65_FBC5578E42FD753DAC3C9286DC4D65BC; // 0x0174   (0x0001)  
	bool                                               IsCoreWeapon_67_CD4B17AA4AF314F3645EC3AB7B3D743C;           // 0x0175   (0x0001)  
};

/// Struct /Game/Blueprints/AI/ST_BotName.ST_BotName
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FST_BotName
{ 
	FString                                            Name_2_CC0513B146548A843107039FF269FC88;                    // 0x0000   (0x0010)  
};

/// Struct /Game/Blueprints/Structs/ST_Map.ST_Map
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 8 MaxSize: 0x0040
struct FST_Map
{ 
	bool                                               Enabled_26_B2480361414C01DB294D52BCB642FEAD;                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	class UTexture2D*                                  LoadingScreenShot_35_1D3DF4FE459BB4602338D29B464FFF80;      // 0x0008   (0x0008)  
	class UTexture2D*                                  ServerBrowserImage_40_F9A734A24BEB33EF89CC57A3408C50FB;     // 0x0010   (0x0008)  
	class USoundBase*                                  DaytimeAmbienceSound_12_2DED413447306B7C60645BBD0CD63FC2;   // 0x0018   (0x0008)  
	class USoundBase*                                  NighttimeAmbienceSound_14_978662F74471C6226CCB6BAD1723AD9D; // 0x0020   (0x0008)  
	TEnumAsByte<E_GameModes>                           GameMode_29_C2A079BE4548F578B6C7BFBF0EA61A32;               // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0029   (0x0007)  MISSED
	TArray<FString>                                    ScenariosOptionalLeaveemptyfordefault_53_F675CF6D4D40E76D4C6ABB9B511C77BE; // 0x0030   (0x0010)  
};

/// Struct /Game/Blueprints/Structs/ST_HairColor.ST_HairColor
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 MaxSize: 0x0010
struct FST_HairColor
{ 
	FLinearColor                                       Color_2_F083A5574EEDF2F3454A66A3CF8BDCB7;                   // 0x0000   (0x0010)  
};

/// Struct /Game/Blueprints/CosmeticItems/ST_CharacterFaceCustomizationItem.ST_CharacterFaceCustomizationItem
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FST_CharacterFaceCustomizationItem
{ 
	class UStaticMesh*                                 StaticMesh_7_8BB811C249618A84292352AD8A53294E;              // 0x0000   (0x0008)  
	class USkeletalMesh*                               SkeletalMesh_6_D6F4CB88422EEAA811F5ABB6725AC58E;            // 0x0008   (0x0008)  
	class UTexture2D*                                  Texture1_14_311052DC4E1CC3D8AC01D78D57DFA391;               // 0x0010   (0x0008)  
	class UTexture2D*                                  Texture2_13_A19A5FD041BE4A5BA0E38193F7D50043;               // 0x0018   (0x0008)  
};

/// Struct /Game/Blueprints/CosmeticItems/ST_EventAndTokenSettings.ST_EventAndTokenSettings
/// Size: 0x00AC (172 bytes) (0x000000 - 0x0000AC) align 8 MaxSize: 0x00AC
struct FST_EventAndTokenSettings
{ 
	bool                                               Enabled_62_840A504D40A686CCEA1672BB1C1C96B2;                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            EventSteamGeneratorID_67_EF32A727469688BF811413B301F7DD4E;  // 0x0004   (0x0004)  
	TEnumAsByte<E_EventCategories>                     EventCategory_35_EBBE2D2645B140F00D4CE198EB787EFF;          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FText                                              EventName_60_3C7DD6944A31E2D8CB1C85BAF600D7C7;              // 0x0010   (0x0018)  
	class UTexture2D*                                  TokenIcon_22_334F5CF346D35FD56778A2AEBE53EDF6;              // 0x0028   (0x0008)  
	class UTexture2D*                                  TokenIconbackground_53_737BEC3649C5A56D650974A6834CF084;    // 0x0030   (0x0008)  
	int32_t                                            SteamItemID_15_84BB8618467AFB2A70F1B99BA31030A7;            // 0x0038   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x003C   (0x0004)  MISSED
	class UTexture2D*                                  EventPassHeaderImage_30_D23880494376FBB6024D008996EF81FB;   // 0x0040   (0x0008)  
	FLinearColor                                       EventPassTitleBgColor_28_3EAAF8044978A2863DC75DB3D1346784;  // 0x0048   (0x0010)  
	FLinearColor                                       EventPassBgColorFront_36_53CACC984637B85A3C94CFA9B9570AC1;  // 0x0058   (0x0010)  
	FLinearColor                                       EventPassBgColorBack_39_8BC9B3274EBA44A94E20F5AD771D7E9A;   // 0x0068   (0x0010)  
	FLinearColor                                       BackgroundColorTop_45_257ED9164C15E42ABCB701A2A21F8B18;     // 0x0078   (0x0010)  
	FLinearColor                                       BackgroundColorBottom_44_0D62807F4E48372D34C3D4A4A8FD1409;  // 0x0088   (0x0010)  
	FLinearColor                                       TokenPouchBgColor_57_034AD05842BB9C26F06EA194184D795F;      // 0x0098   (0x0010)  
	float                                              IconBackgroundIntensity_50_242045D14166F71B2A7C2899D25E275A; // 0x00A8   (0x0004)  
};

/// Class /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C
/// Size: 0xC8A9 (51369 bytes) (0x0002B8 - 0x00C8A9) align 16 MaxSize: 0xC8A9
class UCharacter_Idle_Skeleton_AnimBlueprint_New_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_8[0x8];                                       // 0x02B8   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02C0   (0x0008)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x02C8   (0x0080)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose;                               // 0x0348   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose;                                // 0x04A0   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose0;                               // 0x04C8   (0x0028)  
	FAnimNode_Slot                                     AnimGraphNode_Slot;                                         // 0x04F0   (0x0048)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose1;                              // 0x0538   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose2;                               // 0x0690   (0x0028)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend;                             // 0x06B8   (0x00C0)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend3;                            // 0x0778   (0x00C0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose4;                              // 0x0838   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose5;                               // 0x0990   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose6;                               // 0x09B8   (0x0028)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend7;                            // 0x09E0   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose8;                               // 0x0AA0   (0x0028)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend9;                            // 0x0AC8   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose10;                              // 0x0B88   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose11;                              // 0x0BB0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer12;                             // 0x0BD8   (0x0080)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone;                                   // 0x0C58   (0x0108)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend13;                           // 0x0D60   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose14;                              // 0x0E20   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer15;                             // 0x0E48   (0x0080)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose16;                             // 0x0EC8   (0x0158)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool;                              // 0x1020   (0x00A0)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend;                                  // 0x10C0   (0x00C8)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer17;                             // 0x1188   (0x0080)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend18;                           // 0x1208   (0x00C0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot19;                                       // 0x12C8   (0x0048)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone20;                                 // 0x1310   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone21;                                 // 0x1418   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone22;                                 // 0x1520   (0x0108)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend23;                           // 0x1628   (0x00C0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer24;                             // 0x16E8   (0x0080)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone25;                                 // 0x1768   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone26;                                 // 0x1870   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone27;                                 // 0x1978   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone28;                                 // 0x1A80   (0x0108)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend29;                           // 0x1B88   (0x00C0)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone30;                                 // 0x1C48   (0x0108)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose31;                              // 0x1D50   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose32;                              // 0x1D78   (0x0028)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone33;                                 // 0x1DA0   (0x0108)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer34;                             // 0x1EA8   (0x0080)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone35;                                 // 0x1F28   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone36;                                 // 0x2030   (0x0108)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer37;                             // 0x2138   (0x0080)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer38;                             // 0x21B8   (0x0080)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone39;                                 // 0x2238   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone40;                                 // 0x2340   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone41;                                 // 0x2448   (0x0108)  
	FAnimNode_BlendListByEnum                          AnimGraphNode_BlendListByEnum;                              // 0x2550   (0x00B0)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool42;                            // 0x2600   (0x00A0)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone43;                                 // 0x26A0   (0x0108)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend44;                                // 0x27A8   (0x00C8)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x2870   (0x0020)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose45;                             // 0x2890   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose46;                              // 0x29E8   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose47;                              // 0x2A10   (0x0028)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x2A38   (0x0020)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend48;                           // 0x2A58   (0x00C0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer49;                             // 0x2B18   (0x0080)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer50;                             // 0x2B98   (0x0080)  
	FAnimNode_BlendListByEnum                          AnimGraphNode_BlendListByEnum51;                            // 0x2C18   (0x00B0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer52;                             // 0x2CC8   (0x0080)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer53;                             // 0x2D48   (0x0080)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer54;                             // 0x2DC8   (0x0080)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer55;                             // 0x2E48   (0x0080)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend56;                           // 0x2EC8   (0x00C0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot57;                                       // 0x2F88   (0x0048)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose58;                             // 0x2FD0   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose59;                              // 0x3128   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose60;                              // 0x3150   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose61;                              // 0x3178   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose62;                              // 0x31A0   (0x0028)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose63;                             // 0x31C8   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose64;                              // 0x3320   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer65;                             // 0x3348   (0x0080)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive;                                // 0x33C8   (0x00C8)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer66;                             // 0x3490   (0x0080)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer67;                             // 0x3510   (0x0080)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer68;                             // 0x3590   (0x0080)  
	FAnimNode_Slot                                     AnimGraphNode_Slot69;                                       // 0x3610   (0x0048)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend70;                           // 0x3658   (0x00C0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose71;                             // 0x3718   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose72;                              // 0x3870   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose73;                              // 0x3898   (0x0028)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose74;                             // 0x38C0   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose75;                              // 0x3A18   (0x0028)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool76;                            // 0x3A40   (0x00A0)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer;                             // 0x3AE0   (0x00E8)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone77;                                 // 0x3BC8   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone78;                                 // 0x3CD0   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone79;                                 // 0x3DD8   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone80;                                 // 0x3EE0   (0x0108)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend81;                           // 0x3FE8   (0x00C0)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone82;                                 // 0x40A8   (0x0108)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend83;                           // 0x41B0   (0x00C0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose84;                             // 0x4270   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose85;                              // 0x43C8   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose86;                              // 0x43F0   (0x0028)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone87;                                 // 0x4418   (0x0108)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer88;                             // 0x4520   (0x0080)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool89;                            // 0x45A0   (0x00A0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose90;                              // 0x4640   (0x0028)  
	FAnimNode_BlendListByEnum                          AnimGraphNode_BlendListByEnum91;                            // 0x4668   (0x00B0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose92;                              // 0x4718   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer93;                             // 0x4740   (0x0080)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend94;                           // 0x47C0   (0x00C0)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool95;                            // 0x4880   (0x00A0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose96;                              // 0x4920   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer97;                             // 0x4948   (0x0080)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend98;                           // 0x49C8   (0x00C0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer99;                             // 0x4A88   (0x0080)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer100;                            // 0x4B08   (0x0080)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool101;                           // 0x4B88   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer102;                            // 0x4C28   (0x0080)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool103;                           // 0x4CA8   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer104;                            // 0x4D48   (0x0080)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone105;                                // 0x4DC8   (0x0108)  
	FAnimNode_Slot                                     AnimGraphNode_Slot106;                                      // 0x4ED0   (0x0048)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend107;                          // 0x4F18   (0x00C0)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone108;                                // 0x4FD8   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone109;                                // 0x50E0   (0x0108)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose110;                             // 0x51E8   (0x0028)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose111;                            // 0x5210   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose112;                             // 0x5368   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer113;                            // 0x5390   (0x0080)  
	FAnimNode_Fabrik                                   AnimGraphNode_Fabrik;                                       // 0x5410   (0x0190)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace114;                     // 0x55A0   (0x0020)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone115;                                // 0x55C0   (0x0108)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend116;                          // 0x56C8   (0x00C0)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone117;                                // 0x5788   (0x0108)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose118;                            // 0x5890   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose119;                             // 0x59E8   (0x0028)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend120;                          // 0x5A10   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose121;                             // 0x5AD0   (0x0028)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose122;                            // 0x5AF8   (0x0158)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone123;                                // 0x5C50   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone124;                                // 0x5D58   (0x0108)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool125;                           // 0x5E60   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer126;                            // 0x5F00   (0x0080)  
	FAnimNode_Slot                                     AnimGraphNode_Slot127;                                      // 0x5F80   (0x0048)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend128;                          // 0x5FC8   (0x00C0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose129;                            // 0x6088   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose130;                             // 0x61E0   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose131;                             // 0x6208   (0x0028)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone132;                                // 0x6230   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone133;                                // 0x6338   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone134;                                // 0x6440   (0x0108)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer135;                            // 0x6548   (0x0080)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool136;                           // 0x65C8   (0x00A0)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone137;                                // 0x6668   (0x0108)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool138;                           // 0x6770   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer139;                            // 0x6810   (0x0080)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend140;                          // 0x6890   (0x00C0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer141;                            // 0x6950   (0x0080)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer142;                            // 0x69D0   (0x0080)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool143;                           // 0x6A50   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer144;                            // 0x6AF0   (0x0080)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer145;                            // 0x6B70   (0x0080)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend146;                          // 0x6BF0   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose147;                             // 0x6CB0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer148;                            // 0x6CD8   (0x0080)  
	FAnimNode_BlendListByEnum                          AnimGraphNode_BlendListByEnum149;                           // 0x6D58   (0x00B0)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool150;                           // 0x6E08   (0x00A0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose151;                             // 0x6EA8   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose152;                             // 0x6ED0   (0x0028)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool153;                           // 0x6EF8   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer154;                            // 0x6F98   (0x0080)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator;                            // 0x7018   (0x0050)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend155;                          // 0x7068   (0x00C0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose156;                            // 0x7128   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose157;                             // 0x7280   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose158;                             // 0x72A8   (0x0028)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend159;                          // 0x72D0   (0x00C0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer160;                            // 0x7390   (0x0080)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend161;                          // 0x7410   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose162;                             // 0x74D0   (0x0028)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend163;                               // 0x74F8   (0x00C8)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend164;                          // 0x75C0   (0x00C0)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend165;                          // 0x7680   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose166;                             // 0x7740   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose167;                             // 0x7768   (0x0028)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend168;                          // 0x7790   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose169;                             // 0x7850   (0x0028)  
	FAnimNode_BlendListByEnum                          AnimGraphNode_BlendListByEnum170;                           // 0x7878   (0x00B0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer171;                            // 0x7928   (0x0080)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose172;                            // 0x79A8   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose173;                             // 0x7B00   (0x0028)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose174;                            // 0x7B28   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose175;                             // 0x7C80   (0x0028)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose176;                            // 0x7CA8   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose177;                             // 0x7E00   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer178;                            // 0x7E28   (0x0080)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose179;                             // 0x7EA8   (0x0028)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool180;                           // 0x7ED0   (0x00A0)  
	FAnimNode_BlendListByEnum                          AnimGraphNode_BlendListByEnum181;                           // 0x7F70   (0x00B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose182;                            // 0x8020   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose183;                             // 0x8178   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose184;                             // 0x81A0   (0x0028)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend185;                          // 0x81C8   (0x00C0)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer186;                          // 0x8288   (0x00E8)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool187;                           // 0x8370   (0x00A0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose188;                             // 0x8410   (0x0028)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose189;                            // 0x8438   (0x0158)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool190;                           // 0x8590   (0x00A0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose191;                             // 0x8630   (0x0028)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool192;                           // 0x8658   (0x00A0)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool193;                           // 0x86F8   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer194;                            // 0x8798   (0x0080)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool195;                           // 0x8818   (0x00A0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose196;                            // 0x88B8   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose197;                             // 0x8A10   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose198;                             // 0x8A38   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose199;                             // 0x8A60   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose200;                             // 0x8A88   (0x0028)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend201;                               // 0x8AB0   (0x00C8)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend202;                          // 0x8B78   (0x00C0)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend203;                          // 0x8C38   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose204;                             // 0x8CF8   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose205;                             // 0x8D20   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult;                             // 0x8D48   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer206;                            // 0x8D70   (0x0080)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult;                                  // 0x8DF0   (0x0030)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer207;                            // 0x8E20   (0x0080)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult208;                               // 0x8EA0   (0x0030)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine;                                 // 0x8ED0   (0x00B0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose209;                             // 0x8F80   (0x0028)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend210;                          // 0x8FA8   (0x00C0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer211;                            // 0x9068   (0x0080)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend212;                          // 0x90E8   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose213;                             // 0x91A8   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose214;                             // 0x91D0   (0x0028)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone215;                                // 0x91F8   (0x0108)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose216;                             // 0x9300   (0x0028)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend217;                          // 0x9328   (0x00C0)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend218;                          // 0x93E8   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose219;                             // 0x94A8   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose220;                             // 0x94D0   (0x0028)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool221;                           // 0x94F8   (0x00A0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose222;                             // 0x9598   (0x0028)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend223;                               // 0x95C0   (0x00C8)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose224;                             // 0x9688   (0x0028)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend225;                          // 0x96B0   (0x00C0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer226;                            // 0x9770   (0x0080)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool227;                           // 0x97F0   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer228;                            // 0x9890   (0x0080)  
	FAnimNode_Slot                                     AnimGraphNode_Slot229;                                      // 0x9910   (0x0048)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone230;                                // 0x9958   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone231;                                // 0x9A60   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone232;                                // 0x9B68   (0x0108)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool233;                           // 0x9C70   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer234;                            // 0x9D10   (0x0080)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool235;                           // 0x9D90   (0x00A0)  
	FAnimNode_LookAt                                   AnimGraphNode_LookAt;                                       // 0x9E30   (0x01B0)  
	FAnimNode_LookAt                                   AnimGraphNode_LookAt236;                                    // 0x9FE0   (0x01B0)  
	FAnimNode_LookAt                                   AnimGraphNode_LookAt237;                                    // 0xA190   (0x01B0)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool238;                           // 0xA340   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer239;                            // 0xA3E0   (0x0080)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend240;                               // 0xA460   (0x00C8)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer241;                            // 0xA528   (0x0080)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose242;                            // 0xA5A8   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose243;                             // 0xA700   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose244;                             // 0xA728   (0x0028)  
	FAnimNode_LookAt                                   AnimGraphNode_LookAt245;                                    // 0xA750   (0x01B0)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool246;                           // 0xA900   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer247;                            // 0xA9A0   (0x0080)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer248;                            // 0xAA20   (0x0080)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool249;                           // 0xAAA0   (0x00A0)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone250;                                // 0xAB40   (0x0108)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose251;                             // 0xAC48   (0x0028)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool252;                           // 0xAC70   (0x00A0)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace253;                     // 0xAD10   (0x0020)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace254;                     // 0xAD30   (0x0020)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace255;                     // 0xAD50   (0x0020)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose256;                            // 0xAD70   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose257;                             // 0xAEC8   (0x0028)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace258;                     // 0xAEF0   (0x0020)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose259;                             // 0xAF10   (0x0028)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace260;                     // 0xAF38   (0x0020)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace261;                     // 0xAF58   (0x0020)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone262;                                // 0xAF78   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone263;                                // 0xB080   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone264;                                // 0xB188   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone265;                                // 0xB290   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone266;                                // 0xB398   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone267;                                // 0xB4A0   (0x0108)  
	FAnimNode_Slot                                     AnimGraphNode_Slot268;                                      // 0xB5A8   (0x0048)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone269;                                // 0xB5F0   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone270;                                // 0xB6F8   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone271;                                // 0xB800   (0x0108)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone272;                                // 0xB908   (0x0108)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose273;                             // 0xBA10   (0x0028)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool274;                           // 0xBA38   (0x00A0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose275;                            // 0xBAD8   (0x0158)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose276;                             // 0xBC30   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose277;                             // 0xBC58   (0x0028)  
	FAnimNode_Slot                                     AnimGraphNode_Slot278;                                      // 0xBC80   (0x0048)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer279;                          // 0xBCC8   (0x00E8)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool280;                           // 0xBDB0   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer281;                            // 0xBE50   (0x0080)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend282;                               // 0xBED0   (0x00C8)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose283;                             // 0xBF98   (0x0028)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend284;                          // 0xBFC0   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose285;                             // 0xC080   (0x0028)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace286;                     // 0xC0A8   (0x0020)  
	FAnimNode_LayeredBoneBlend                         AnimGraphNode_LayeredBoneBlend287;                          // 0xC0C8   (0x00C0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose288;                            // 0xC188   (0x0158)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0xC2E0   (0x0030)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool289;                           // 0xC310   (0x00A0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer290;                            // 0xC3B0   (0x0080)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool291;                           // 0xC430   (0x00A0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose292;                            // 0xC4D0   (0x0158)  
	float                                              Speed;                                                      // 0xC628   (0x0004)  
	float                                              CameraPitch;                                                // 0xC62C   (0x0004)  
	bool                                               IsDead;                                                     // 0xC630   (0x0001)  
	bool                                               Reloading;                                                  // 0xC631   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0xC632   (0x0002)  MISSED
	float                                              Delta_Time_X;                                               // 0xC634   (0x0004)  
	bool                                               InAir;                                                      // 0xC638   (0x0001)  
	bool                                               AimForwardWhenStill;                                        // 0xC639   (0x0001)  
	bool                                               Aiming;                                                     // 0xC63A   (0x0001)  
	TEnumAsByte<E_WeaponPoses>                         WeaponPose;                                                 // 0xC63B   (0x0001)  
	float                                              Direction;                                                  // 0xC63C   (0x0004)  
	float                                              RandomRunIdleAnimStartPos;                                  // 0xC640   (0x0004)  
	float                                              WeaponSpineRotationOffset;                                  // 0xC644   (0x0004)  
	float                                              GlobalSpineRotationOffset;                                  // 0xC648   (0x0004)  
	bool                                               Firing;                                                     // 0xC64C   (0x0001)  
	TEnumAsByte<E_VehicleAnimationTypes>               VehicleAnimation;                                           // 0xC64D   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0xC64E   (0x0002)  MISSED
	float                                              TurningAmount;                                              // 0xC650   (0x0004)  
	bool                                               Sprinting;                                                  // 0xC654   (0x0001)  
	bool                                               WeaponInMainHand;                                           // 0xC655   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2];                                       // 0xC656   (0x0002)  MISSED
	float                                              AimingPoseAlpha;                                            // 0xC658   (0x0004)  
	float                                              Spine_Rotation_Offset_While_Aiming;                         // 0xC65C   (0x0004)  
	bool                                               SpeedBoost;                                                 // 0xC660   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0xC661   (0x0003)  MISSED
	float                                              ForwardBackwardTilt;                                        // 0xC664   (0x0004)  
	float                                              SidewayTilt;                                                // 0xC668   (0x0004)  
	bool                                               RecentlyFired;                                              // 0xC66C   (0x0001)  
	bool                                               IsMannequin;                                                // 0xC66D   (0x0001)  
	bool                                               StudioCharacter;                                            // 0xC66E   (0x0001)  
	TEnumAsByte<E_Units>                               MannequinClass;                                             // 0xC66F   (0x0001)  
	char                                               HandPose;                                                   // 0xC670   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0xC671   (0x0003)  MISSED
	float                                              SprintingAlpha;                                             // 0xC674   (0x0004)  
	float                                              SpinePitchOffset;                                           // 0xC678   (0x0004)  
	float                                              Left_Arm_Pitch_Offset;                                      // 0xC67C   (0x0004)  
	TEnumAsByte<E_Teams>                               MannequinTeam;                                              // 0xC680   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0xC681   (0x0007)  MISSED
	class ABP_Character_C*                             CharacterRef;                                               // 0xC688   (0x0008)  
	float                                              NeckFixAlpha;                                               // 0xC690   (0x0004)  
	float                                              Left_Hand_Close_Amount;                                     // 0xC694   (0x0004)  
	bool                                               EnableUpperBodySprint;                                      // 0xC698   (0x0001)  
	bool                                               MainMenuPose;                                               // 0xC699   (0x0001)  
	unsigned char                                      UnknownData07_6[0x2];                                       // 0xC69A   (0x0002)  MISSED
	float                                              SpineYawRotation;                                           // 0xC69C   (0x0004)  
	FVector                                            LookAtTarget;                                               // 0xC6A0   (0x000C)  
	FVector                                            LookAtTargetInterpolated;                                   // 0xC6AC   (0x000C)  
	float                                              Left_Arm_Yaw_Offset;                                        // 0xC6B8   (0x0004)  
	float                                              FireAnimationPitch;                                         // 0xC6BC   (0x0004)  
	bool                                               WeaponFullyLoaded;                                          // 0xC6C0   (0x0001)  
	TEnumAsByte<E_MotorbikePoses>                      MotorbikePose;                                              // 0xC6C1   (0x0001)  
	unsigned char                                      UnknownData08_6[0x2];                                       // 0xC6C2   (0x0002)  MISSED
	float                                              Hand_Knockback_Animation_Amount;                            // 0xC6C4   (0x0004)  
	float                                              Right_Grip_Hand_Close_Amount;                               // 0xC6C8   (0x0004)  
	float                                              MotionWobbleAlpha;                                          // 0xC6CC   (0x0004)  
	bool                                               LastAimState;                                               // 0xC6D0   (0x0001)  
	unsigned char                                      UnknownData09_6[0x3];                                       // 0xC6D1   (0x0003)  MISSED
	float                                              GroinZLocationOffset;                                       // 0xC6D4   (0x0004)  
	bool                                               Crouching;                                                  // 0xC6D8   (0x0001)  
	unsigned char                                      UnknownData10_6[0x3];                                       // 0xC6D9   (0x0003)  MISSED
	float                                              LastCameraYaw;                                              // 0xC6DC   (0x0004)  
	float                                              CameraYawDifference;                                        // 0xC6E0   (0x0004)  
	float                                              AmountTurned;                                               // 0xC6E4   (0x0004)  
	bool                                               InverseRotateGroin;                                         // 0xC6E8   (0x0001)  
	unsigned char                                      UnknownData11_6[0x3];                                       // 0xC6E9   (0x0003)  MISSED
	float                                              NewCameraYaw;                                               // 0xC6EC   (0x0004)  
	float                                              ExtraDifference;                                            // 0xC6F0   (0x0004)  
	bool                                               SwappingMeleeState;                                         // 0xC6F4   (0x0001)  
	TEnumAsByte<E_MeleeModes>                          MeleeMode;                                                  // 0xC6F5   (0x0001)  
	unsigned char                                      UnknownData12_6[0x2];                                       // 0xC6F6   (0x0002)  MISSED
	float                                              BaseLocomotionSpeed;                                        // 0xC6F8   (0x0004)  
	bool                                               MeleeWeaponOnCooldown;                                      // 0xC6FC   (0x0001)  
	unsigned char                                      UnknownData13_6[0x3];                                       // 0xC6FD   (0x0003)  MISSED
	float                                              FireAnimationKickback;                                      // 0xC700   (0x0004)  
	float                                              FireAnimationInterpolationSpeed;                            // 0xC704   (0x0004)  
	float                                              FireAnimationPitchInterpolated;                             // 0xC708   (0x0004)  
	float                                              FireAnimationRollInterpolated;                              // 0xC70C   (0x0004)  
	float                                              FireAnimationKickInterpolated;                              // 0xC710   (0x0004)  
	float                                              ReloadAnimationSpeed;                                       // 0xC714   (0x0004)  
	float                                              ReloadFrameTime;                                            // 0xC718   (0x0004)  
	float                                              LeftHandTiltAmount;                                         // 0xC71C   (0x0004)  
	bool                                               IsLocalCharacterAndFrontCamNotActive;                       // 0xC720   (0x0001)  
	unsigned char                                      UnknownData14_6[0x3];                                       // 0xC721   (0x0003)  MISSED
	FVector                                            RightShoulderLocation;                                      // 0xC724   (0x000C)  
	float                                              CrouchingAlpha;                                             // 0xC730   (0x0004)  
	bool                                               IsBareFoot;                                                 // 0xC734   (0x0001)  
	unsigned char                                      UnknownData15_6[0x3];                                       // 0xC735   (0x0003)  MISSED
	float                                              CrouchDuckSpeed;                                            // 0xC738   (0x0004)  
	float                                              ReloadAnimationSpeedOverride;                               // 0xC73C   (0x0004)  
	float                                              AimingNeckTiltAlpha;                                        // 0xC740   (0x0004)  
	bool                                               IsMoving;                                                   // 0xC744   (0x0001)  
	unsigned char                                      UnknownData16_6[0x3];                                       // 0xC745   (0x0003)  MISSED
	float                                              WalkingInterpolationSpeed;                                  // 0xC748   (0x0004)  
	bool                                               InVehicleSeat;                                              // 0xC74C   (0x0001)  
	bool                                               VehicleDucking;                                             // 0xC74D   (0x0001)  
	unsigned char                                      UnknownData17_6[0x2];                                       // 0xC74E   (0x0002)  MISSED
	float                                              LeftArmYawOffsetWhileSprinting;                             // 0xC750   (0x0004)  
	float                                              LeftHandThumbCloseAmount;                                   // 0xC754   (0x0004)  
	bool                                               CurrentThrowableLoaded;                                     // 0xC758   (0x0001)  
	unsigned char                                      UnknownData18_6[0x3];                                       // 0xC759   (0x0003)  MISSED
	float                                              FireAnimationRoll;                                          // 0xC75C   (0x0004)  
	float                                              FireAnimationArmValueTarget;                                // 0xC760   (0x0004)  
	float                                              FireAnimationArmValueInterpolated;                          // 0xC764   (0x0004)  
	bool                                               EnableFireAnimationArmWhenAiming;                           // 0xC768   (0x0001)  
	bool                                               EnableFireArmAnimation;                                     // 0xC769   (0x0001)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0xC76A   (0x0001)  
	unsigned char                                      UnknownData19_6[0x5];                                       // 0xC76B   (0x0005)  MISSED
	FTransform                                         LeftHandIKLocation;                                         // 0xC770   (0x0030)  
	bool                                               UseLeftHandIK;                                              // 0xC7A0   (0x0001)  
	unsigned char                                      UnknownData20_6[0x3];                                       // 0xC7A1   (0x0003)  MISSED
	float                                              LeftHandIKAlpha;                                            // 0xC7A4   (0x0004)  
	class ABP_EquipableBase_C*                         ActiveEquipable;                                            // 0xC7A8   (0x0008)  
	float                                              AimingPoseAlpha_BoltAction;                                 // 0xC7B0   (0x0004)  
	bool                                               AllowBoltHip;                                               // 0xC7B4   (0x0001)  
	unsigned char                                      UnknownData21_6[0x3];                                       // 0xC7B5   (0x0003)  MISSED
	class ABP_Mannequin_C*                             MannequinRef;                                               // 0xC7B8   (0x0008)  
	bool                                               MugshotDummy;                                               // 0xC7C0   (0x0001)  
	bool                                               Main_Menu_Character_Screen_Shot_Mode;                       // 0xC7C1   (0x0001)  
	unsigned char                                      UnknownData22_6[0x2];                                       // 0xC7C2   (0x0002)  MISSED
	float                                              RandomizedWeaponYawKick;                                    // 0xC7C4   (0x0004)  
	float                                              RandomizedWeaponPitchKick;                                  // 0xC7C8   (0x0004)  
	float                                              RandomizedWeaponYawKickSmoothed;                            // 0xC7CC   (0x0004)  
	float                                              RandomizedWeaponPitchKickSmoothed;                          // 0xC7D0   (0x0004)  
	float                                              FireArmAnimationPitchOffset;                                // 0xC7D4   (0x0004)  
	float                                              FireSpineAmount;                                            // 0xC7D8   (0x0004)  
	bool                                               InVehicle;                                                  // 0xC7DC   (0x0001)  
	unsigned char                                      UnknownData23_6[0x3];                                       // 0xC7DD   (0x0003)  MISSED
	class UAnimSequenceBase*                           WeaponHipPose;                                              // 0xC7E0   (0x0008)  
	bool                                               UseIdleWeaponPose;                                          // 0xC7E8   (0x0001)  
	bool                                               UseWeaponSprintPose;                                        // 0xC7E9   (0x0001)  
	unsigned char                                      UnknownData24_6[0x6];                                       // 0xC7EA   (0x0006)  MISSED
	class UAnimSequenceBase*                           ReloadAnimation;                                            // 0xC7F0   (0x0008)  
	class UAnimSequenceBase*                           SprintPose;                                                 // 0xC7F8   (0x0008)  
	class UAnimSequenceBase*                           RightHandPose;                                              // 0xC800   (0x0008)  
	bool                                               UseLeftHandPose;                                            // 0xC808   (0x0001)  
	unsigned char                                      UnknownData25_6[0x7];                                       // 0xC809   (0x0007)  MISSED
	class UAnimSequenceBase*                           Left_Hand_Pose;                                             // 0xC810   (0x0008)  
	TEnumAsByte<E_EquipableSprintStyles>               Special_Sprint_Style;                                       // 0xC818   (0x0001)  
	bool                                               Use_IKWhile_Sprinting;                                      // 0xC819   (0x0001)  
	unsigned char                                      UnknownData26_6[0x2];                                       // 0xC81A   (0x0002)  MISSED
	float                                              LookAtAlpha;                                                // 0xC81C   (0x0004)  
	float                                              TorsoYaw;                                                   // 0xC820   (0x0004)  
	bool                                               WeaponUsedShortInterval;                                    // 0xC824   (0x0001)  
	bool                                               Dashing;                                                    // 0xC825   (0x0001)  
	unsigned char                                      UnknownData27_6[0x2];                                       // 0xC826   (0x0002)  MISSED
	float                                              Spine1Tilt;                                                 // 0xC828   (0x0004)  
	float                                              ShoulderCamBasedTorsoYaw;                                   // 0xC82C   (0x0004)  
	float                                              CameraHorizontalOffsetBasedYaw;                             // 0xC830   (0x0004)  
	float                                              UpperBoddyMouseLookYaw;                                     // 0xC834   (0x0004)  
	float                                              UpperBoddyMouseLookPitch;                                   // 0xC838   (0x0004)  
	float                                              Character_Yaw_Rotation;                                     // 0xC83C   (0x0004)  
	float                                              LookAtAlphaNew;                                             // 0xC840   (0x0004)  
	float                                              CharacterRotation;                                          // 0xC844   (0x0004)  
	FVector                                            GroinYawLookAtTarget;                                       // 0xC848   (0x000C)  
	float                                              CameraYaw;                                                  // 0xC854   (0x0004)  
	float                                              LowerLegThickness;                                          // 0xC858   (0x0004)  
	float                                              UpperLegThickness;                                          // 0xC85C   (0x0004)  
	bool                                               MannequinShowWeaponMode;                                    // 0xC860   (0x0001)  
	bool                                               TurningInPlace;                                             // 0xC861   (0x0001)  
	bool                                               TurningInPlaceRight_InPlace_;                               // 0xC862   (0x0001)  
	bool                                               IsLocalCharacter_Own_;                                      // 0xC863   (0x0001)  
	float                                              ReplicatedCameraPitch;                                      // 0xC864   (0x0004)  
	bool                                               CanRotateInPlace;                                           // 0xC868   (0x0001)  
	unsigned char                                      UnknownData28_6[0x3];                                       // 0xC869   (0x0003)  MISSED
	float                                              CosmeticBaseHeightOffset;                                   // 0xC86C   (0x0004)  
	bool                                               EnableNeckTiltWhenAiming;                                   // 0xC870   (0x0001)  
	unsigned char                                      UnknownData29_6[0x7];                                       // 0xC871   (0x0007)  MISSED
	class UAnimSequenceBase*                           WeaponAimPose;                                              // 0xC878   (0x0008)  
	bool                                               UseAimPose;                                                 // 0xC880   (0x0001)  
	bool                                               OnSlipperySurface;                                          // 0xC881   (0x0001)  
	bool                                               PlayerIsMoving;                                             // 0xC882   (0x0001)  
	bool                                               InstantFirePose;                                            // 0xC883   (0x0001)  
	unsigned char                                      UnknownData30_6[0x4];                                       // 0xC884   (0x0004)  MISSED
	class UAnimSequenceBase*                           WeaponIdlePose;                                             // 0xC888   (0x0008)  
	float                                              SprintWeaponPoseAlpha;                                      // 0xC890   (0x0004)  
	unsigned char                                      UnknownData31_6[0x4];                                       // 0xC894   (0x0004)  MISSED
	class UAnimSequenceBase*                           WeaponWalkingPose;                                          // 0xC898   (0x0008)  
	bool                                               WeaponWalkingPoseValid;                                     // 0xC8A0   (0x0001)  
	unsigned char                                      UnknownData32_6[0x3];                                       // 0xC8A1   (0x0003)  MISSED
	float                                              WalkingAlpha;                                               // 0xC8A4   (0x0004)  
	bool                                               Use_IKWhile_in_Air;                                         // 0xC8A8   (0x0001)  


	/// Functions
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.AnimGraph
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.TorsoYawDuringReload?
	// bool TorsoYawDuringReload_();                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.GetJumpMontage
	// void GetJumpMontage(class UAnimMontage*& Montage);                                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.SnapDirectionToGrid
	// void SnapDirectionToGrid(float Direction, float& gridSnappedDirection);                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.PlayFootstepSound
	// void PlayFootstepSound(float PitchMultiplier, float VolumeMultiplier);                                                   // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_196FA2D04937FD0048C500BEC8B644B1
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_196FA2D04937FD0048C500BEC8B644B1(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendSpacePlayer_F0BDB87F449509BC26D3DBA23DF551BA
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendSpacePlayer_F0BDB87F449509BC26D3DBA23DF551BA(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_27DF237E47E068717D2F65A8A8517A75
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_27DF237E47E068717D2F65A8A8517A75(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_EBAA4B6741F5AE63943D57B5C1C99935
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_EBAA4B6741F5AE63943D57B5C1C99935(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_69AF25304B984093720532828DC89207
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_69AF25304B984093720532828DC89207(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_F36E1D684CA9A51D65994692F239398F
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_F36E1D684CA9A51D65994692F239398F(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_BA4B57D1475C41D3495153B0FDEF1A50
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_BA4B57D1475C41D3495153B0FDEF1A50(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_F433FA6848F0B8D89B429C93A384CDCA
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_F433FA6848F0B8D89B429C93A384CDCA(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_C11327F747657BB3FB187792D9859620
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_C11327F747657BB3FB187792D9859620(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_6F6A66144EAFD61982B6B5B0F2BCF089
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_6F6A66144EAFD61982B6B5B0F2BCF089(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_106DA54D422E78EC1C4EC29ED0FA1432
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_106DA54D422E78EC1C4EC29ED0FA1432(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_4B09DD3C4AD4A83E8DD42997C1AFC38C
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_4B09DD3C4AD4A83E8DD42997C1AFC38C(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_A1258D5F447CACACDF10B7AF7C6BB8AE
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_A1258D5F447CACACDF10B7AF7C6BB8AE(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_23732DC54506549474C21E9F6D67E863
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_23732DC54506549474C21E9F6D67E863(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_LookAt_C02EBE904DBB15B5A800ACADE2DF014F
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_LookAt_C02EBE904DBB15B5A800ACADE2DF014F(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_LookAt_CCDB54394F153DE22FB3779BFD45A1AE
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_LookAt_CCDB54394F153DE22FB3779BFD45A1AE(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_LookAt_DBF9A67E45DA4B7D78D3CABD50A35749
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_LookAt_DBF9A67E45DA4B7D78D3CABD50A35749(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_LookAt_3E877BD8416B8073D7454D9138689B84
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_LookAt_3E877BD8416B8073D7454D9138689B84(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_C5A422C74FBF88502D4B558CEA857B85
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_C5A422C74FBF88502D4B558CEA857B85(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_39842FDC4A156C0CF6B862942A5E5212
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_39842FDC4A156C0CF6B862942A5E5212(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_A4BB770B4D2E48D26528BA8C26008CE2
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_A4BB770B4D2E48D26528BA8C26008CE2(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_F77262074A0BB42DEEAAEEA43E5D1DCC
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_F77262074A0BB42DEEAAEEA43E5D1DCC(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_C4E501984848456392E268A5E785CB33
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_C4E501984848456392E268A5E785CB33(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_B02158864F9CEF619A7AD29FFDF6B82D
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_B02158864F9CEF619A7AD29FFDF6B82D(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_SequenceEvaluator_E176807040C6BDB716E6DBB05DD67B3D
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_SequenceEvaluator_E176807040C6BDB716E6DBB05DD67B3D(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_D7C00F894B5E322C327C8CAB24F33464
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_D7C00F894B5E322C327C8CAB24F33464(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_F4F60E864329774DBBAF98B5C5902DCF
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_F4F60E864329774DBBAF98B5C5902DCF(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_FC87EAD64441D8DCA1CE68BF4F74C32A
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_FC87EAD64441D8DCA1CE68BF4F74C32A(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_B7C5BE95494414B9547EBA856F6169FF
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_B7C5BE95494414B9547EBA856F6169FF(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_132475464936389FC8E316A035488D8D
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_132475464936389FC8E316A035488D8D(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_A8219B6247A51655F3CB438C412A2739
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_A8219B6247A51655F3CB438C412A2739(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_ABDF98894545A63993F37E89EF656FE2
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_ABDF98894545A63993F37E89EF656FE2(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_F96A5B5140A7C8AAF767A4BD0F8955CF
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_F96A5B5140A7C8AAF767A4BD0F8955CF(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_C99C7FD64E11ACAF3FBB409C486CC120
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_C99C7FD64E11ACAF3FBB409C486CC120(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_584D3E974BC7437628B3D2897D88068E
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_584D3E974BC7437628B3D2897D88068E(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_A7C14181495153C769542BBA1F566F00
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_A7C14181495153C769542BBA1F566F00(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_088C6C574768D20A7CBCAEABBA734597
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_088C6C574768D20A7CBCAEABBA734597(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_42F2A5284D57FD9A5DF23089898D23A5
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_42F2A5284D57FD9A5DF23089898D23A5(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_3D1D6F41451E7CDD63C4B988E5B9998D
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_3D1D6F41451E7CDD63C4B988E5B9998D(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_AA65B3244F7B8F563D23009199C228FD
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_AA65B3244F7B8F563D23009199C228FD(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_1C20512C4C8554635096F7B7B646EAD1
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_1C20512C4C8554635096F7B7B646EAD1(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_FC9531E54592ECF6714B8F8B43CB72D5
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_FC9531E54592ECF6714B8F8B43CB72D5(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByEnum_EA178EF3420E18540C4746A6D674FF65
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByEnum_EA178EF3420E18540C4746A6D674FF65(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_2A7C4BC54A22B7FE2D43EEA34692A0D4
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_2A7C4BC54A22B7FE2D43EEA34692A0D4(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_E7BE3C1049A2177561CB45A48072B66D
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_E7BE3C1049A2177561CB45A48072B66D(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_C0F4C9334B0447B9265D54AE1E921919
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_C0F4C9334B0447B9265D54AE1E921919(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_3F2DC90C4A312AB9DAE5B0B7CBB22E8D
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_3F2DC90C4A312AB9DAE5B0B7CBB22E8D(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_517ECDAD4DF2A784C79F979ECFC8A6A7
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_517ECDAD4DF2A784C79F979ECFC8A6A7(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_FD90525E42408A93EFCEA08F40A9FA91
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_FD90525E42408A93EFCEA08F40A9FA91(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_0A4FAB4C4D70E1B1A996ABAE502F0B5F
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_0A4FAB4C4D70E1B1A996ABAE502F0B5F(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_208097404C0FE2E16BA094AAC9A56DBF
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_208097404C0FE2E16BA094AAC9A56DBF(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_71E70A4A4D9AC5C5AB09409F319CD7CE
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_71E70A4A4D9AC5C5AB09409F319CD7CE(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_25192B954BB7A7BE339947B7956DF916
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_25192B954BB7A7BE339947B7956DF916(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_62B9A96A4F3200E86046B1B567C0A0D0
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_62B9A96A4F3200E86046B1B567C0A0D0(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_462B0CDC4E74127F294B409D8017A1F3
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_462B0CDC4E74127F294B409D8017A1F3(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_D381C0004195E2149DEBB6962022EE43
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_D381C0004195E2149DEBB6962022EE43(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_71F4947746C541A65572AF8ABDD2D79A
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_71F4947746C541A65572AF8ABDD2D79A(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_88A3773E40247D5B4DDDE685858F2693
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_88A3773E40247D5B4DDDE685858F2693(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_62EDDF064BB6EDDE83054B858D8D8286
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_62EDDF064BB6EDDE83054B858D8D8286(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_BB6B0FBA46B66C3E788F6F90D26A397A
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_BB6B0FBA46B66C3E788F6F90D26A397A(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_6789D1F04F3084A7B54891BAB9499F4D
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_6789D1F04F3084A7B54891BAB9499F4D(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_8059848E4EB42C2DDDAE6A89051E7E78
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_8059848E4EB42C2DDDAE6A89051E7E78(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_8725A1C044A2E181BFE6EB91F5BA2028
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_ModifyBone_8725A1C044A2E181BFE6EB91F5BA2028(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_E95C07A046D7F0EAEF43CDB7F101AB37
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_BlendListByBool_E95C07A046D7F0EAEF43CDB7F101AB37(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_TransitionResult_C83855B04EC43539695D64AE1FC55413
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New_AnimGraphNode_TransitionResult_C83855B04EC43539695D64AE1FC55413(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.BlueprintUpdateAnimation
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.BlueprintBeginPlay
	// void BlueprintBeginPlay();                                                                                               // [0x1325ea0] Event|Public|BlueprintEvent 
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.AnimNotify_Footstep
	// void AnimNotify_Footstep();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.AnimNotify_Sprint
	// void AnimNotify_Sprint();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.SetWeaponProporties
	// void SetWeaponProporties(class ABP_EquipableBase_C* EquipableBase, class USkinnedMeshComponent* CharacterMesh);          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Character/Character_Idle_Skeleton_AnimBlueprint_New.Character_Idle_Skeleton_AnimBlueprint_New_C.ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New
	// void ExecuteUbergraph_Character_Idle_Skeleton_AnimBlueprint_New(int32_t EntryPoint);                                     // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C
/// Size: 0x0304 (772 bytes) (0x000260 - 0x000304) align 8 MaxSize: 0x0304
class UW_EmoteMenu_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            Appear;                                                     // 0x0268   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0270   (0x0008)  
	class UButton*                                     Button0;                                                    // 0x0278   (0x0008)  
	class UButton*                                     Button1;                                                    // 0x0280   (0x0008)  
	class UButton*                                     Button2;                                                    // 0x0288   (0x0008)  
	class UButton*                                     Button3;                                                    // 0x0290   (0x0008)  
	class UButton*                                     Button4;                                                    // 0x0298   (0x0008)  
	class UButton*                                     Button5;                                                    // 0x02A0   (0x0008)  
	class UButton*                                     Button6;                                                    // 0x02A8   (0x0008)  
	class UButton*                                     Button7;                                                    // 0x02B0   (0x0008)  
	class UImage*                                      Image;                                                      // 0x02B8   (0x0008)  
	class UImage*                                      Image8;                                                     // 0x02C0   (0x0008)  
	class UImage*                                      Image9;                                                     // 0x02C8   (0x0008)  
	class UImage*                                      Image10;                                                    // 0x02D0   (0x0008)  
	class UImage*                                      Image11;                                                    // 0x02D8   (0x0008)  
	class UImage*                                      Image12;                                                    // 0x02E0   (0x0008)  
	class USizeBox*                                    SizeBox;                                                    // 0x02E8   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x02F0   (0x0008)  
	class UAnimMontage*                                EmoteMontage;                                               // 0x02F8   (0x0008)  
	float                                              Emote_Duration;                                             // 0x0300   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.EnableEmotes
	// bool EnableEmotes();                                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.OnMouseButtonDown
	// FEventReply OnMouseButtonDown(FGeometry MyGeometry, FPointerEvent& MouseEvent);                                          // [0x1325ea0] BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.Destruct
	// void Destruct();                                                                                                         // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_183_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_183_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_1_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_1_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_4_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_4_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_2_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_2_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.CloseEmoteMenu
	// void CloseEmoteMenu();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_4_K2Node_ComponentBoundEvent_7_OnButtonPressedEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_4_K2Node_ComponentBoundEvent_7_OnButtonPressedEvent__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_183_K2Node_ComponentBoundEvent_8_OnButtonPressedEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_183_K2Node_ComponentBoundEvent_8_OnButtonPressedEvent__DelegateSignature();              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_K2Node_ComponentBoundEvent_9_OnButtonPressedEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_K2Node_ComponentBoundEvent_9_OnButtonPressedEvent__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_1_K2Node_ComponentBoundEvent_10_OnButtonPressedEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_1_K2Node_ComponentBoundEvent_10_OnButtonPressedEvent__DelegateSignature();               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_3_K2Node_ComponentBoundEvent_5_OnButtonPressedEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_3_K2Node_ComponentBoundEvent_5_OnButtonPressedEvent__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_3_K2Node_ComponentBoundEvent_6_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_3_K2Node_ComponentBoundEvent_6_OnButtonHoverEvent__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_301_K2Node_ComponentBoundEvent_11_OnButtonPressedEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_301_K2Node_ComponentBoundEvent_11_OnButtonPressedEvent__DelegateSignature();             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.BndEvt__W_EmoteMenu_Button_301_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_EmoteMenu_Button_301_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature();               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EmoteMenu.W_EmoteMenu_C.ExecuteUbergraph_W_EmoteMenu
	// void ExecuteUbergraph_W_EmoteMenu(int32_t EntryPoint);                                                                   // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_USername.W_Username_C
/// Size: 0x02B0 (688 bytes) (0x000260 - 0x0002B0) align 8 MaxSize: 0x02B0
class UW_Username_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UProgressBar*                                ProgressBar;                                                // 0x0278   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock0;                                                 // 0x0288   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x0290   (0x0008)  
	class ABP_Character_C*                             Character;                                                  // 0x0298   (0x0008)  
	bool                                               FarAway;                                                    // 0x02A0   (0x0001)  
	bool                                               IsEnemy;                                                    // 0x02A1   (0x0001)  
	bool                                               InLOS;                                                      // 0x02A2   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x02A3   (0x0005)  MISSED
	class APawn*                                       Pawn;                                                       // 0x02A8   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_USername.W_Username_C.ShowTitle
	// ESlateVisibility ShowTitle();                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.SameVehicleCheck
	// void SameVehicleCheck(bool& IsInSameVehicle);                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.GetPawnHealthInfo
	// void GetPawnHealthInfo(int32_t& CurrentHP, int32_t& MaxHP);                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.GetPawnUsername
	// void GetPawnUsername(FString& UserName);                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.IsPawnAIControlled?
	// void IsPawnAIControlled_(bool& IsAIControlled);                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.SetTitle
	// FText SetTitle();                                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.ShowHPBar
	// ESlateVisibility ShowHPBar();                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.ShowUsernameWidget
	// ESlateVisibility ShowUsernameWidget();                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.HPColor
	// FLinearColor HPColor();                                                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.SetHP
	// float SetHP();                                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.ShowBorder
	// FLinearColor ShowBorder();                                                                                               // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.ShowDot
	// ESlateVisibility ShowDot();                                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.SetTitleColor
	// FSlateColor SetTitleColor();                                                                                             // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.SetNameColor
	// FSlateColor SetNameColor();                                                                                              // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.SetUserName
	// FText SetUserName();                                                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.ShowFullName
	// ESlateVisibility ShowFullName();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_USername.W_Username_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_USername.W_Username_C.ExecuteUbergraph_W_Username
	// void ExecuteUbergraph_W_Username(int32_t EntryPoint);                                                                    // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_BanTypeConfirm.W_BanTypeConfirm_C
/// Size: 0x0298 (664 bytes) (0x000260 - 0x000298) align 8 MaxSize: 0x0298
class UW_BanTypeConfirm_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x0270   (0x0008)  
	class UW_Button_C*                                 W_Button0;                                                  // 0x0278   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton_C;                                            // 0x0280   (0x0008)  
	class UW_TextBox_C*                                W_TextBox_BanReason;                                        // 0x0288   (0x0008)  
	class APlayerState*                                PlayerState;                                                // 0x0290   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_BanTypeConfirm.W_BanTypeConfirm_C.BndEvt__W_BanTypeConfirm_W_Button_1_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_BanTypeConfirm_W_Button_1_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_BanTypeConfirm.W_BanTypeConfirm_C.BndEvt__W_BanTypeConfirm_W_Button_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature
	// void BndEvt__W_BanTypeConfirm_W_Button_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_BanTypeConfirm.W_BanTypeConfirm_C.BndEvt__W_BanTypeConfirm_W_CloseButton_C_0_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature
	// void BndEvt__W_BanTypeConfirm_W_CloseButton_C_0_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature();         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_BanTypeConfirm.W_BanTypeConfirm_C.ExecuteUbergraph_W_BanTypeConfirm
	// void ExecuteUbergraph_W_BanTypeConfirm(int32_t EntryPoint);                                                              // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_SteamIDCard.W_SteamIDCard_C
/// Size: 0x0298 (664 bytes) (0x000260 - 0x000298) align 8 MaxSize: 0x0298
class UW_SteamIDCard_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton_C;                                            // 0x0278   (0x0008)  
	class UW_TextBox_C*                                W_TextBox;                                                  // 0x0280   (0x0008)  
	FString                                            SteamID;                                                    // 0x0288   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_SteamIDCard.W_SteamIDCard_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SteamIDCard.W_SteamIDCard_C.BndEvt__W_SteamIDCard_W_CloseButton_C_0_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_SteamIDCard_W_CloseButton_C_0_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();            // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SteamIDCard.W_SteamIDCard_C.ExecuteUbergraph_W_SteamIDCard
	// void ExecuteUbergraph_W_SteamIDCard(int32_t EntryPoint);                                                                 // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_DamageNumber.W_DamageNumber_C
/// Size: 0x02D0 (720 bytes) (0x000260 - 0x0002D0) align 8 MaxSize: 0x02D0
class UW_DamageNumber_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0268   (0x0008)  
	class UCanvasPanel*                                CanvasPanel0;                                               // 0x0270   (0x0008)  
	int32_t                                            DamageAmount;                                               // 0x0278   (0x0004)  
	bool                                               IsCriticalHit;                                              // 0x027C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x027D   (0x0003)  MISSED
	SDK_UNDEFINED(16,643) /* FMulticastInlineDelegate */ __um(DamageNumberEnded);                                  // 0x0280   (0x0010)  
	bool                                               NewDamageNumber;                                            // 0x0290   (0x0001)  
	bool                                               IsLow;                                                      // 0x0291   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x0292   (0x0002)  MISSED
	float                                              DistanceToTarget;                                           // 0x0294   (0x0004)  
	class UCurveFloat*                                 DmgNumberHeightCurve;                                       // 0x0298   (0x0008)  
	bool                                               CanPlayUpdateAnimation;                                     // 0x02A0   (0x0001)  
	TEnumAsByte<E_DamageTypes>                         DamageType;                                                 // 0x02A1   (0x0001)  
	unsigned char                                      UnknownData02_6[0x6];                                       // 0x02A2   (0x0006)  MISSED
	FST_DamageInformation                              DamageInfo;                                                 // 0x02A8   (0x0012)  
	unsigned char                                      UnknownData03_6[0x6];                                       // 0x02BA   (0x0006)  MISSED
	FDateTime                                          Time_Stamp;                                                 // 0x02C0   (0x0008)  
	int32_t                                            Counter;                                                    // 0x02C8   (0x0004)  
	int32_t                                            DmgStackCounter;                                            // 0x02CC   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_DamageNumber.W_DamageNumber_C.DisplayDamageNumber
	// void DisplayDamageNumber(FST_DamageInformation DamageInfo);                                                              // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_DamageNumber.W_DamageNumber_C.ShowBorder
	// FLinearColor ShowBorder();                                                                                               // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_DamageNumber.W_DamageNumber_C.LoadDamageNumber
	// void LoadDamageNumber(FST_DamageInformation DamageInfo, float DistanceToTarget);                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_DamageNumber.W_DamageNumber_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_DamageNumber.W_DamageNumber_C.ExecuteUbergraph_W_DamageNumber
	// void ExecuteUbergraph_W_DamageNumber(int32_t EntryPoint);                                                                // [0x1325ea0] Final                
	// Function /Game/Widgets/W_DamageNumber.W_DamageNumber_C.DamageNumberEnded__DelegateSignature
	// void DamageNumberEnded__DelegateSignature();                                                                             // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_VoteKickEntry.W_VoteKickEntry_C
/// Size: 0x0289 (649 bytes) (0x000260 - 0x000289) align 8 MaxSize: 0x0289
class UW_VoteKickEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0268   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x0270   (0x0008)  
	class UW_Button_C*                                 W_Button0;                                                  // 0x0278   (0x0008)  
	class APlayerState*                                PlayerState;                                                // 0x0280   (0x0008)  
	bool                                               ThisPlayerIsTheHost;                                        // 0x0288   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_VoteKickEntry.W_VoteKickEntry_C.EnableVoteKick
	// bool EnableVoteKick();                                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VoteKickEntry.W_VoteKickEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_VoteKickEntry.W_VoteKickEntry_C.BndEvt__W_KickBanEntry_W_Button_1_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature
	// void BndEvt__W_KickBanEntry_W_Button_1_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_VoteKickEntry.W_VoteKickEntry_C.BndEvt__W_VoteKickEntry_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_VoteKickEntry_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_VoteKickEntry.W_VoteKickEntry_C.ExecuteUbergraph_W_VoteKickEntry
	// void ExecuteUbergraph_W_VoteKickEntry(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_KickBanEntry.W_KickBanEntry_C
/// Size: 0x0281 (641 bytes) (0x000260 - 0x000281) align 8 MaxSize: 0x0281
class UW_KickBanEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0268   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x0270   (0x0008)  
	class APlayerState*                                PlayerState;                                                // 0x0278   (0x0008)  
	bool                                               Is_Host;                                                    // 0x0280   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_KickBanEntry.W_KickBanEntry_C.EnableBanButton
	// bool EnableBanButton();                                                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_KickBanEntry.W_KickBanEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_KickBanEntry.W_KickBanEntry_C.BndEvt__W_KickBanEntry_W_Button_1_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature
	// void BndEvt__W_KickBanEntry_W_Button_1_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_KickBanEntry.W_KickBanEntry_C.ExecuteUbergraph_W_KickBanEntry
	// void ExecuteUbergraph_W_KickBanEntry(int32_t EntryPoint);                                                                // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_BanListEntry.W_BanListEntry_C
/// Size: 0x02A8 (680 bytes) (0x000260 - 0x0002A8) align 8 MaxSize: 0x02A8
class UW_BanListEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0268   (0x0008)  
	class UTextBlock*                                  TextBlock0;                                                 // 0x0270   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x0278   (0x0008)  
	FST_ServerManagerPlayerInfo                        PlayerInfo;                                                 // 0x0280   (0x0020)  
	class UW_ServerManagement_C*                       ServerManagementWidgetRef;                                  // 0x02A0   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_BanListEntry.W_BanListEntry_C.GetText
	// FText GetText();                                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_BanListEntry.W_BanListEntry_C.BndEvt__W_BanListEntry_W_Button_1_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_BanListEntry_W_Button_1_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_BanListEntry.W_BanListEntry_C.ExecuteUbergraph_W_BanListEntry
	// void ExecuteUbergraph_W_BanListEntry(int32_t EntryPoint);                                                                // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_ChatEntry.W_ChatEntry_C
/// Size: 0x02AA (682 bytes) (0x000260 - 0x0002AA) align 8 MaxSize: 0x02AA
class UW_ChatEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            FadeOut;                                                    // 0x0268   (0x0008)  
	class URichTextBlock*                              RichTextBlock;                                              // 0x0270   (0x0008)  
	FText                                              UserName;                                                   // 0x0278   (0x0018)  
	FText                                              Message;                                                    // 0x0290   (0x0018)  
	bool                                               SpecialMessage;                                             // 0x02A8   (0x0001)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x02A9   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_ChatEntry.W_ChatEntry_C.FadeOutMessage
	// void FadeOutMessage();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ChatEntry.W_ChatEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ChatEntry.W_ChatEntry_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ChatEntry.W_ChatEntry_C.ExecuteUbergraph_W_ChatEntry
	// void ExecuteUbergraph_W_ChatEntry(int32_t EntryPoint);                                                                   // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_IngameChat.W_IngameChat_C
/// Size: 0x02A0 (672 bytes) (0x000260 - 0x0002A0) align 8 MaxSize: 0x02A0
class UW_IngameChat_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0268   (0x0008)  
	class UEditableTextBox*                            EditableTextBox;                                            // 0x0270   (0x0008)  
	class USizeBox*                                    SizeBox;                                                    // 0x0278   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x0280   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x0288   (0x0008)  
	float                                              ChatRenderOpacity;                                          // 0x0290   (0x0004)  
	float                                              ChatVisbilityTimer;                                         // 0x0294   (0x0004)  
	bool                                               ShowChat;                                                   // 0x0298   (0x0001)  
	bool                                               ShowChatMessageBox;                                         // 0x0299   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x029A   (0x0002)  MISSED
	int32_t                                            MaxMessageLength;                                           // 0x029C   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_IngameChat.W_IngameChat_C.ShowHUD
	// ESlateVisibility ShowHUD();                                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_IngameChat.W_IngameChat_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_IngameChat.W_IngameChat_C.ToggleChatMessageMode
	// void ToggleChatMessageMode();                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_IngameChat.W_IngameChat_C.ResetChatVisibility
	// void ResetChatVisibility();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_IngameChat.W_IngameChat_C.AddMessage
	// void AddMessage(FText UserName, FText Message, bool SpecialMessage, TEnumAsByte<E_Teams> Team);                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_IngameChat.W_IngameChat_C.BndEvt__W_IngameChat_EditableTextBox_172_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
	// void BndEvt__W_IngameChat_EditableTextBox_172_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature(FText& Text); // [0x1325ea0] HasOutParms|BlueprintEvent 
	// Function /Game/Widgets/W_IngameChat.W_IngameChat_C.BndEvt__W_IngameChat_EditableTextBox_172_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature
	// void BndEvt__W_IngameChat_EditableTextBox_172_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature(FText& Text, TEnumAsByte<ETextCommit> CommitMethod); // [0x1325ea0] HasOutParms|BlueprintEvent 
	// Function /Game/Widgets/W_IngameChat.W_IngameChat_C.ExecuteUbergraph_W_IngameChat
	// void ExecuteUbergraph_W_IngameChat(int32_t EntryPoint);                                                                  // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_ServerManagement.W_ServerManagement_C
/// Size: 0x02C1 (705 bytes) (0x000260 - 0x0002C1) align 8 MaxSize: 0x02C1
class UW_ServerManagement_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UScrollBox*                                  ScrollBox_BanList;                                          // 0x0268   (0x0008)  
	class UScrollBox*                                  ScrollBox_PlayerList;                                       // 0x0270   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0278   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton;                                              // 0x0280   (0x0008)  
	class UW_KickBanEntry_C*                           W_KickBanEntry;                                             // 0x0288   (0x0008)  
	class UW_KickBanEntry_C*                           W_KickBanEntry0;                                            // 0x0290   (0x0008)  
	class UW_Tab_C*                                    W_Tab_Banlist;                                              // 0x0298   (0x0008)  
	class UW_Tab_C*                                    W_Tab_GameSettings;                                         // 0x02A0   (0x0008)  
	class UW_Tab_C*                                    W_Tab_KickBan;                                              // 0x02A8   (0x0008)  
	class UW_Tab_C*                                    W_Tab_VoteKick;                                             // 0x02B0   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x02B8   (0x0008)  
	bool                                               UseVoteKickList;                                            // 0x02C0   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_ServerManagement.W_ServerManagement_C.EnableHostFunctions
	// bool EnableHostFunctions();                                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ServerManagement.W_ServerManagement_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ServerManagement.W_ServerManagement_C.BndEvt__W_ServerManagement_W_CloseButton_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_ServerManagement_W_CloseButton_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_ServerManagement.W_ServerManagement_C.BndEvt__W_ServerManagement_W_Tab_Banlist_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature
	// void BndEvt__W_ServerManagement_W_Tab_Banlist_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature();           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_ServerManagement.W_ServerManagement_C.ReloadPlayerList
	// void ReloadPlayerList();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ServerManagement.W_ServerManagement_C.ReloadBanList
	// void ReloadBanList();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ServerManagement.W_ServerManagement_C.BndEvt__W_ServerManagement_W_Tab_KickBan_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature
	// void BndEvt__W_ServerManagement_W_Tab_KickBan_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature();           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_ServerManagement.W_ServerManagement_C.BndEvt__W_ServerManagement_W_Tab_KickBan_1_K2Node_ComponentBoundEvent_3_ButtonPressed__DelegateSignature
	// void BndEvt__W_ServerManagement_W_Tab_KickBan_1_K2Node_ComponentBoundEvent_3_ButtonPressed__DelegateSignature();         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_ServerManagement.W_ServerManagement_C.ExecuteUbergraph_W_ServerManagement
	// void ExecuteUbergraph_W_ServerManagement(int32_t EntryPoint);                                                            // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_ScoreboardSpectatorEntry.W_ScoreboardSpectatorEntry_C
/// Size: 0x02E0 (736 bytes) (0x000260 - 0x0002E0) align 8 MaxSize: 0x02E0
class UW_ScoreboardSpectatorEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0268   (0x0008)  
	FString                                            SpectatorName;                                              // 0x0270   (0x0010)  
	bool                                               isSupporter;                                                // 0x0280   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0281   (0x0007)  MISSED
	FSlateFontInfo                                     CachedFontStyle;                                            // 0x0288   (0x0058)  


	/// Functions
	// Function /Game/Widgets/W_ScoreboardSpectatorEntry.W_ScoreboardSpectatorEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreboardSpectatorEntry.W_ScoreboardSpectatorEntry_C.ExecuteUbergraph_W_ScoreboardSpectatorEntry
	// void ExecuteUbergraph_W_ScoreboardSpectatorEntry(int32_t EntryPoint);                                                    // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C
/// Size: 0x0349 (841 bytes) (0x000260 - 0x000349) align 8 MaxSize: 0x0349
class UW_ScoreboardEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0278   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock1;                                                 // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock2;                                                 // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock3;                                                 // 0x0298   (0x0008)  
	class UTextBlock*                                  TextBlock4;                                                 // 0x02A0   (0x0008)  
	class UTextBlock*                                  TextBlock5;                                                 // 0x02A8   (0x0008)  
	class UTextBlock*                                  TextBlock6;                                                 // 0x02B0   (0x0008)  
	int32_t                                            Kills;                                                      // 0x02B8   (0x0004)  
	int32_t                                            AssistKills;                                                // 0x02BC   (0x0004)  
	int32_t                                            Deaths;                                                     // 0x02C0   (0x0004)  
	int32_t                                            Score;                                                      // 0x02C4   (0x0004)  
	FString                                            UserName;                                                   // 0x02C8   (0x0010)  
	bool                                               IsPlayer;                                                   // 0x02D8   (0x0001)  
	bool                                               IsSelf;                                                     // 0x02D9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02DA   (0x0002)  MISSED
	int32_t                                            PlayerIndex;                                                // 0x02DC   (0x0004)  
	TEnumAsByte<E_Units>                               PlayerClass;                                                // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02E1   (0x0003)  MISSED
	int32_t                                            Rank;                                                       // 0x02E4   (0x0004)  
	float                                              PingValue;                                                  // 0x02E8   (0x0004)  
	bool                                               isSupporter;                                                // 0x02EC   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x02ED   (0x0003)  MISSED
	FSlateFontInfo                                     CachedFontStyle;                                            // 0x02F0   (0x0058)  
	TEnumAsByte<E_PrestigeRanks>                       PrestigeRank;                                               // 0x0348   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.SetRank
	// FText SetRank();                                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.SetEmblem
	// FSlateBrush SetEmblem();                                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.SetPingColor
	// FSlateColor SetPingColor();                                                                                              // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.SetPing
	// FText SetPing();                                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.SetPlayerClassIconColor
	// FLinearColor SetPlayerClassIconColor();                                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.SetPlayerClassIcon
	// FSlateBrush SetPlayerClassIcon();                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.SetScore
	// FText SetScore();                                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.GetUsername
	// FText GetUsername();                                                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.SetBorderColor
	// FLinearColor SetBorderColor();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.GetStats
	// void GetStats(int32_t& Kills, int32_t& Deaths, int32_t& Score, FString& UserName, int32_t& PlayerIndex, bool& IsSelf, bool& IsPlayer, TEnumAsByte<E_Units>& PlayerClass, int32_t& Rank, int32_t& AssistKills, TEnumAsByte<E_PrestigeRanks>& PrestigeRank); // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.UpdateStats
	// void UpdateStats(int32_t Kills, int32_t Deaths, int32_t Score, FString UserName, int32_t PlayerIndex, bool IsSelf, bool IsPlayer, TEnumAsByte<E_Units> PlayerClass, int32_t Rank, int32_t AssistKills, bool isSupporter, TEnumAsByte<E_PrestigeRanks> PrestigeRank); // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreboardEntry.W_ScoreboardEntry_C.ExecuteUbergraph_W_ScoreboardEntry
	// void ExecuteUbergraph_W_ScoreboardEntry(int32_t EntryPoint);                                                             // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_TeamSelect.W_TeamSelect_C
/// Size: 0x02EB (747 bytes) (0x000260 - 0x0002EB) align 8 MaxSize: 0x02EB
class UW_TeamSelect_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0268   (0x0008)  
	class UButton*                                     Button0;                                                    // 0x0270   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0278   (0x0008)  
	class UHorizontalBox*                              HorizontalBox1;                                             // 0x0280   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0288   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x0290   (0x0008)  
	class UImage*                                      Image3;                                                     // 0x0298   (0x0008)  
	class UImage*                                      Image4;                                                     // 0x02A0   (0x0008)  
	class UImage*                                      Image5;                                                     // 0x02A8   (0x0008)  
	class URichTextBlock*                              RichTextBlock;                                              // 0x02B0   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x02B8   (0x0008)  
	class UTextBlock*                                  TextBlock6;                                                 // 0x02C0   (0x0008)  
	class UTextBlock*                                  TextBlock7;                                                 // 0x02C8   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x02D0   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x02D8   (0x0008)  
	int32_t                                            Allied_Players;                                             // 0x02E0   (0x0004)  
	int32_t                                            Axis_Players;                                               // 0x02E4   (0x0004)  
	bool                                               AllowAlliedJoin;                                            // 0x02E8   (0x0001)  
	bool                                               AllowAxisJoin;                                              // 0x02E9   (0x0001)  
	bool                                               FirstTime;                                                  // 0x02EA   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.SetServerName
	// FText SetServerName();                                                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.EnableAxisFlag
	// bool EnableAxisFlag();                                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.EnableAlliedFlag
	// bool EnableAlliedFlag();                                                                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.SetMapName
	// FText SetMapName();                                                                                                      // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.BndEvt__W_TeamSelect_W_Button_K2Node_ComponentBoundEvent_6_ButtonPressed__DelegateSignature
	// void BndEvt__W_TeamSelect_W_Button_K2Node_ComponentBoundEvent_6_ButtonPressed__DelegateSignature();                      // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.BndEvt__W_TeamSelect_Button_185_K2Node_ComponentBoundEvent_7_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_TeamSelect_Button_185_K2Node_ComponentBoundEvent_7_OnButtonHoverEvent__DelegateSignature();               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.BndEvt__W_TeamSelect_Button_K2Node_ComponentBoundEvent_8_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_TeamSelect_Button_K2Node_ComponentBoundEvent_8_OnButtonHoverEvent__DelegateSignature();                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.BndEvt__W_TeamSelect_Button_185_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_TeamSelect_Button_185_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature();            // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.BndEvt__W_TeamSelect_Button_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_TeamSelect_Button_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_TeamSelect.W_TeamSelect_C.ExecuteUbergraph_W_TeamSelect
	// void ExecuteUbergraph_W_TeamSelect(int32_t EntryPoint);                                                                  // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C
/// Size: 0x0398 (920 bytes) (0x000260 - 0x000398) align 8 MaxSize: 0x0398
class UW_ScoreBoard_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            SlideDown;                                                  // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0278   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0280   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x0288   (0x0008)  
	class UImage*                                      Image3;                                                     // 0x0290   (0x0008)  
	class UImage*                                      Image4;                                                     // 0x0298   (0x0008)  
	class UImage*                                      Image5;                                                     // 0x02A0   (0x0008)  
	class UImage*                                      Image6;                                                     // 0x02A8   (0x0008)  
	class UImage*                                      Image7;                                                     // 0x02B0   (0x0008)  
	class UImage*                                      Image8;                                                     // 0x02B8   (0x0008)  
	class UImage*                                      Image9;                                                     // 0x02C0   (0x0008)  
	class UImage*                                      Image10;                                                    // 0x02C8   (0x0008)  
	class UImage*                                      Image11;                                                    // 0x02D0   (0x0008)  
	class UImage*                                      Image12;                                                    // 0x02D8   (0x0008)  
	class UImage*                                      Image13;                                                    // 0x02E0   (0x0008)  
	class UImage*                                      Image14;                                                    // 0x02E8   (0x0008)  
	class UImage*                                      Image15;                                                    // 0x02F0   (0x0008)  
	class UImage*                                      Image16;                                                    // 0x02F8   (0x0008)  
	class UImage*                                      Image17;                                                    // 0x0300   (0x0008)  
	class UImage*                                      Image18;                                                    // 0x0308   (0x0008)  
	class UImage*                                      Image19;                                                    // 0x0310   (0x0008)  
	class UScrollBox*                                  ScrollBox_Allies;                                           // 0x0318   (0x0008)  
	class UScrollBox*                                  ScrollBox_Axis;                                             // 0x0320   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0328   (0x0008)  
	class UTextBlock*                                  TextBlock20;                                                // 0x0330   (0x0008)  
	class UTextBlock*                                  TextBlock21;                                                // 0x0338   (0x0008)  
	class UW_ScoreboardEntry_C*                        W_ScoreboardEntry;                                          // 0x0340   (0x0008)  
	class UW_ScoreboardEntry_C*                        W_ScoreboardEntry22;                                        // 0x0348   (0x0008)  
	class UW_ScoreboardEntry_C*                        W_ScoreboardEntry23;                                        // 0x0350   (0x0008)  
	class UW_ScoreboardEntry_C*                        W_ScoreboardEntry24;                                        // 0x0358   (0x0008)  
	class UW_ScoreboardSpectatorEntry_C*               W_ScoreboardSpectatorEntry;                                 // 0x0360   (0x0008)  
	class UW_ScoreboardSpectatorEntry_C*               W_ScoreboardSpectatorEntry25;                               // 0x0368   (0x0008)  
	class UW_ScoreboardSpectatorEntry_C*               W_ScoreboardSpectatorEntry26;                               // 0x0370   (0x0008)  
	class UW_ScoreboardSpectatorEntry_C*               W_ScoreboardSpectatorEntry27;                               // 0x0378   (0x0008)  
	class UW_ScoreboardSpectatorEntry_C*               W_ScoreboardSpectatorEntry28;                               // 0x0380   (0x0008)  
	class UWrapBox*                                    WrapBox_Spectators;                                         // 0x0388   (0x0008)  
	int32_t                                            LastPlayerCount;                                            // 0x0390   (0x0004)  
	int32_t                                            LastSpectatorAmount;                                        // 0x0394   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.SetHostName
	// FText SetHostName();                                                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.SetPlayerAmount
	// FText SetPlayerAmount();                                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.GetSpectatorAmount
	// void GetSpectatorAmount(int32_t& PlayerCount);                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.SetServerName
	// FText SetServerName();                                                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.UpdateStats
	// void UpdateStats(class UPanelWidget* List);                                                                              // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.UpdateSortedEntries
	// void UpdateSortedEntries(TEnumAsByte<E_Teams> Team);                                                                     // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.SortListOnScore
	// void SortListOnScore(TEnumAsByte<E_Teams> Team, TArray<FST_PlayerStats>& SortedEntries);                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.GetConnectedPlayersCount
	// void GetConnectedPlayersCount(int32_t& PlayerCount);                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.UpdateScoreboard
	// void UpdateScoreboard();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.ReloadScoreboard
	// void ReloadScoreboard();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.CloseScoreboard
	// void CloseScoreboard();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ScoreBoard.W_ScoreBoard_C.ExecuteUbergraph_W_ScoreBoard
	// void ExecuteUbergraph_W_ScoreBoard(int32_t EntryPoint);                                                                  // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_IngameMenu.W_IngameMenu_C
/// Size: 0x02B0 (688 bytes) (0x000260 - 0x0002B0) align 8 MaxSize: 0x02B0
class UW_IngameMenu_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            Appear;                                                     // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UW_Button_C*                                 W_Button_C;                                                 // 0x0278   (0x0008)  
	class UW_Button_C*                                 W_Button_C0;                                                // 0x0280   (0x0008)  
	class UW_Button_C*                                 W_Button_C1;                                                // 0x0288   (0x0008)  
	class UW_Button_C*                                 W_Button_C2;                                                // 0x0290   (0x0008)  
	class UW_Button_C*                                 W_Button_C3;                                                // 0x0298   (0x0008)  
	class UW_OptionsMenu_C*                            OptionsMenu;                                                // 0x02A0   (0x0008)  
	class UW_ServerManagement_C*                       ServerManagementMenu;                                       // 0x02A8   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_IngameMenu.W_IngameMenu_C.ShowManageServerButton
	// ESlateVisibility ShowManageServerButton();                                                                               // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_IngameMenu.W_IngameMenu_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_IngameMenu.W_IngameMenu_C.BndEvt__W_IngameMenu_W_Button_C_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_IngameMenu_W_Button_C_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_IngameMenu.W_IngameMenu_C.BndEvt__W_IngameMenu_W_Button_C_1_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature
	// void BndEvt__W_IngameMenu_W_Button_C_1_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_IngameMenu.W_IngameMenu_C.BndEvt__W_IngameMenu_W_Button_C_2_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature
	// void BndEvt__W_IngameMenu_W_Button_C_2_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_IngameMenu.W_IngameMenu_C.Destruct
	// void Destruct();                                                                                                         // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_IngameMenu.W_IngameMenu_C.BndEvt__W_IngameMenu_W_Button_C_3_K2Node_ComponentBoundEvent_3_ButtonPressed__DelegateSignature
	// void BndEvt__W_IngameMenu_W_Button_C_3_K2Node_ComponentBoundEvent_3_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_IngameMenu.W_IngameMenu_C.BndEvt__W_IngameMenu_W_Button_C_4_K2Node_ComponentBoundEvent_4_ButtonPressed__DelegateSignature
	// void BndEvt__W_IngameMenu_W_Button_C_4_K2Node_ComponentBoundEvent_4_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_IngameMenu.W_IngameMenu_C.ExecuteUbergraph_W_IngameMenu
	// void ExecuteUbergraph_W_IngameMenu(int32_t EntryPoint);                                                                  // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_DamageNumberNew.W_DamageNumberNew_C
/// Size: 0x02A0 (672 bytes) (0x000260 - 0x0002A0) align 8 MaxSize: 0x02A0
class UW_DamageNumberNew_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            Animation;                                                  // 0x0268   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0270   (0x0008)  
	FST_DamageInformation                              DamageInfo;                                                 // 0x0278   (0x0012)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x028A   (0x0006)  MISSED
	int32_t                                            DamageAmount;                                               // 0x0290   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0294   (0x0004)  MISSED
	class UClass*                                      EquipableClass;                                             // 0x0298   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_DamageNumberNew.W_DamageNumberNew_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_DamageNumberNew.W_DamageNumberNew_C.Init
	// void Init();                                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_DamageNumberNew.W_DamageNumberNew_C.IncreaseDamageNumber
	// void IncreaseDamageNumber(int32_t IncreaseAmount);                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_DamageNumberNew.W_DamageNumberNew_C.ExecuteUbergraph_W_DamageNumberNew
	// void ExecuteUbergraph_W_DamageNumberNew(int32_t EntryPoint);                                                             // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_ChatOverlay.W_ChatOverlay_C
/// Size: 0x0280 (640 bytes) (0x000260 - 0x000280) align 8 MaxSize: 0x0280
class UW_ChatOverlay_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0268   (0x0008)  
	class USizeBox*                                    SizeBox;                                                    // 0x0270   (0x0008)  
	class UW_IngameChat_C*                             W_IngameChat;                                               // 0x0278   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_ChatOverlay.W_ChatOverlay_C.ShowHUD
	// ESlateVisibility ShowHUD();                                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ChatOverlay.W_ChatOverlay_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ChatOverlay.W_ChatOverlay_C.ExecuteUbergraph_W_ChatOverlay
	// void ExecuteUbergraph_W_ChatOverlay(int32_t EntryPoint);                                                                 // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_FlagUI.W_FlagUI_C
/// Size: 0x02A9 (681 bytes) (0x000260 - 0x0002A9) align 8 MaxSize: 0x02A9
class UW_FlagUI_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0268   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0270   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0278   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0280   (0x0008)  
	class UProgressBar*                                ProgressBar;                                                // 0x0288   (0x0008)  
	class UProgressBar*                                ProgressBar1;                                               // 0x0290   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x0298   (0x0008)  
	class ABP_Flag_C*                                  Flag;                                                       // 0x02A0   (0x0008)  
	bool                                               ShowCloseUI;                                                // 0x02A8   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_FlagUI.W_FlagUI_C.SetSmallFlagIcon
	// FSlateBrush SetSmallFlagIcon();                                                                                          // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_FlagUI.W_FlagUI_C.ShowHUD
	// ESlateVisibility ShowHUD();                                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_FlagUI.W_FlagUI_C.CloseUIVisibility
	// ESlateVisibility CloseUIVisibility();                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_FlagUI.W_FlagUI_C.FarUIVisibility
	// ESlateVisibility FarUIVisibility();                                                                                      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_FlagUI.W_FlagUI_C.SetFlagIcon
	// FSlateBrush SetFlagIcon();                                                                                               // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_FlagUI.W_FlagUI_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_FlagUI.W_FlagUI_C.ExecuteUbergraph_W_FlagUI
	// void ExecuteUbergraph_W_FlagUI(int32_t EntryPoint);                                                                      // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_SteamItemListForChest.W_SteamItemListForChest_C
/// Size: 0x0410 (1040 bytes) (0x000260 - 0x000410) align 8 MaxSize: 0x0410
class UW_SteamItemListForChest_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0268   (0x0008)  
	class UEditableTextBox*                            EditableTextBox_Legendary;                                  // 0x0270   (0x0008)  
	class UEditableTextBox*                            EditableTextBox_Rare;                                       // 0x0278   (0x0008)  
	class UEditableTextBox*                            EditableTextBox_Uncommon;                                   // 0x0280   (0x0008)  
	FST_Unlockable                                     Chest;                                                      // 0x0288   (0x0188)  


	/// Functions
	// Function /Game/Widgets/W_SteamItemListForChest.W_SteamItemListForChest_C.ParseItems
	// void ParseItems(TEnumAsByte<E_SteamItemRarities> Rarity, FString& FinalText);                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SteamItemListForChest.W_SteamItemListForChest_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SteamItemListForChest.W_SteamItemListForChest_C.BndEvt__W_SteamItemListForChest_Button_233_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_SteamItemListForChest_Button_233_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SteamItemListForChest.W_SteamItemListForChest_C.ExecuteUbergraph_W_SteamItemListForChest
	// void ExecuteUbergraph_W_SteamItemListForChest(int32_t EntryPoint);                                                       // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_PotentialChestItems_hover.W_PotentialChestItems_hover_C
/// Size: 0x02B8 (696 bytes) (0x000260 - 0x0002B8) align 8 MaxSize: 0x02B8
class UW_PotentialChestItems_hover_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0278   (0x0008)  
	class UTextBlock*                                  TextBlock0;                                                 // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock1;                                                 // 0x0288   (0x0008)  
	class UWrapBox*                                    WrapBox;                                                    // 0x0290   (0x0008)  
	TEnumAsByte<E_UnlockableCategories>                ChestType;                                                  // 0x0298   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0299   (0x0003)  MISSED
	int32_t                                            ChestEdition_Season_;                                       // 0x029C   (0x0004)  
	FText                                              ExtraMessage;                                               // 0x02A0   (0x0018)  


	/// Functions
	// Function /Game/Widgets/W_PotentialChestItems_hover.W_PotentialChestItems_hover_C.ShowExtraMessage
	// ESlateVisibility ShowExtraMessage();                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_PotentialChestItems_hover.W_PotentialChestItems_hover_C.LoadItemsFromRarity
	// void LoadItemsFromRarity(TEnumAsByte<E_SteamItemRarities> Rarity);                                                       // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_PotentialChestItems_hover.W_PotentialChestItems_hover_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_PotentialChestItems_hover.W_PotentialChestItems_hover_C.InventoryRefreshed
	// void InventoryRefreshed();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_PotentialChestItems_hover.W_PotentialChestItems_hover_C.ExecuteUbergraph_W_PotentialChestItems_hover
	// void ExecuteUbergraph_W_PotentialChestItems_hover(int32_t EntryPoint);                                                   // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_BattleChest_Entry.W_BattleChest_Entry_C
/// Size: 0x041D (1053 bytes) (0x000260 - 0x00041D) align 8 MaxSize: 0x041D
class UW_BattleChest_Entry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0278   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0280   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x0288   (0x0008)  
	FST_Unlockable                                     ChestItem;                                                  // 0x0290   (0x0188)  
	int32_t                                            CostPrice;                                                  // 0x0418   (0x0004)  
	bool                                               CanBePurchased;                                             // 0x041C   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_BattleChest_Entry.W_BattleChest_Entry_C.SetCoinColor
	// FSlateColor SetCoinColor();                                                                                              // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_BattleChest_Entry.W_BattleChest_Entry_C.SetCostPrice
	// FText SetCostPrice();                                                                                                    // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_BattleChest_Entry.W_BattleChest_Entry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_BattleChest_Entry.W_BattleChest_Entry_C.BndEvt__W_BattleChest_Entry_Button_223_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_BattleChest_Entry_Button_223_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_BattleChest_Entry.W_BattleChest_Entry_C.BndEvt__W_BattleChest_Entry_Button_223_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_BattleChest_Entry_Button_223_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_BattleChest_Entry.W_BattleChest_Entry_C.BndEvt__W_BattleChest_Entry_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_BattleChest_Entry_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_BattleChest_Entry.W_BattleChest_Entry_C.BndEvt__W_BattleChest_Entry_Button_223_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_BattleChest_Entry_Button_223_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();      // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_BattleChest_Entry.W_BattleChest_Entry_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_BattleChest_Entry.W_BattleChest_Entry_C.ExecuteUbergraph_W_BattleChest_Entry
	// void ExecuteUbergraph_W_BattleChest_Entry(int32_t EntryPoint);                                                           // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_CheatMenu.W_CheatMenu_C
/// Size: 0x0398 (920 bytes) (0x000260 - 0x000398) align 8 MaxSize: 0x0398
class UW_CheatMenu_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            WrongPassword;                                              // 0x0268   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x0270   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton_C;                                            // 0x0278   (0x0008)  
	class UW_TextBox_C*                                W_TextBox;                                                  // 0x0280   (0x0008)  
	FBlueprintSessionResult                            Session;                                                    // 0x0288   (0x0108)  
	class UW_ServerbrowserEntry_C*                     ServerBrowserEntry;                                         // 0x0390   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_CheatMenu.W_CheatMenu_C.BndEvt__W_PasswordPrompt_W_CloseButton_C_0_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature
	// void BndEvt__W_PasswordPrompt_W_CloseButton_C_0_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature();         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_CheatMenu.W_CheatMenu_C.BndEvt__W_PasswordPrompt_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_PasswordPrompt_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_CheatMenu.W_CheatMenu_C.BndEvt__W_CheatMenu_W_TextBox_1_K2Node_ComponentBoundEvent_2_OnTextCommited__DelegateSignature
	// void BndEvt__W_CheatMenu_W_TextBox_1_K2Node_ComponentBoundEvent_2_OnTextCommited__DelegateSignature(FText Text);         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_CheatMenu.W_CheatMenu_C.ExecuteUbergraph_W_CheatMenu
	// void ExecuteUbergraph_W_CheatMenu(int32_t EntryPoint);                                                                   // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_UnOpenedChest.W_UnOpenedChest_C
/// Size: 0x0430 (1072 bytes) (0x000260 - 0x000430) align 8 MaxSize: 0x0430
class UW_UnOpenedChest_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            Open;                                                       // 0x0268   (0x0008)  
	class UWidgetAnimation*                            hover;                                                      // 0x0270   (0x0008)  
	class UWidgetAnimation*                            NewAnimation;                                               // 0x0278   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0280   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0288   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0298   (0x0008)  
	FST_Unlockable                                     ChestItem;                                                  // 0x02A0   (0x0188)  
	int32_t                                            Amount;                                                     // 0x0428   (0x0004)  
	int32_t                                            ChestID;                                                    // 0x042C   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_UnOpenedChest.W_UnOpenedChest_C.SetAmount
	// FText SetAmount();                                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_UnOpenedChest.W_UnOpenedChest_C.BndEvt__W_UnOpenedChest_Button_108_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_UnOpenedChest_Button_108_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();            // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_UnOpenedChest.W_UnOpenedChest_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_UnOpenedChest.W_UnOpenedChest_C.BndEvt__W_UnOpenedChest_Button_108_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_UnOpenedChest_Button_108_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();            // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_UnOpenedChest.W_UnOpenedChest_C.BndEvt__W_UnOpenedChest_Button_108_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_UnOpenedChest_Button_108_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_UnOpenedChest.W_UnOpenedChest_C.ExecuteUbergraph_W_UnOpenedChest
	// void ExecuteUbergraph_W_UnOpenedChest(int32_t EntryPoint);                                                               // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_ChestSeasonSlot.W_ChestSeasonSlot_C
/// Size: 0x05D0 (1488 bytes) (0x000260 - 0x0005D0) align 8 MaxSize: 0x05D0
class UW_ChestSeasonSlot_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0278   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock2;                                                 // 0x0290   (0x0008)  
	class UW_BattleChest_Entry_C*                      W_BattleChest_Entry;                                        // 0x0298   (0x0008)  
	class UW_BattleChest_Entry_C*                      W_BattleChest_Entry3;                                       // 0x02A0   (0x0008)  
	bool                                               bShowRightLine;                                             // 0x02A8   (0x0001)  
	bool                                               bShowBottomLine;                                            // 0x02A9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x02AA   (0x0006)  MISSED
	FST_Unlockable                                     Chest1;                                                     // 0x02B0   (0x0188)  
	FST_Unlockable                                     Chest2;                                                     // 0x0438   (0x0188)  
	TArray<class UW_BattleChest_Entry_C*>              Chests;                                                     // 0x05C0   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_ChestSeasonSlot.W_ChestSeasonSlot_C.ShowBottomLine
	// ESlateVisibility ShowBottomLine();                                                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ChestSeasonSlot.W_ChestSeasonSlot_C.ShowRightLine
	// ESlateVisibility ShowRightLine();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ChestSeasonSlot.W_ChestSeasonSlot_C.LoadChest
	// void LoadChest(FST_Unlockable ChestItem);                                                                                // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ChestSeasonSlot.W_ChestSeasonSlot_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ChestSeasonSlot.W_ChestSeasonSlot_C.Init
	// void Init();                                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ChestSeasonSlot.W_ChestSeasonSlot_C.ExecuteUbergraph_W_ChestSeasonSlot
	// void ExecuteUbergraph_W_ChestSeasonSlot(int32_t EntryPoint);                                                             // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_BattleChests.W_BattleChests_C
/// Size: 0x02F0 (752 bytes) (0x000260 - 0x0002F0) align 8 MaxSize: 0x02F0
class UW_BattleChests_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            LuckyChestCraft;                                            // 0x0268   (0x0008)  
	class UWidgetAnimation*                            BasicChestCraft;                                            // 0x0270   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0278   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0288   (0x0008)  
	class UWrapBox*                                    WrapBox;                                                    // 0x0290   (0x0008)  
	class UW_MainMenu_C*                               MainMenuRef;                                                // 0x0298   (0x0008)  
	int32_t                                            CoinAmount;                                                 // 0x02A0   (0x0004)  
	bool                                               CanCraftBasicChest;                                         // 0x02A4   (0x0001)  
	bool                                               CanCraftLuckyChest;                                         // 0x02A5   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02A6   (0x0002)  MISSED
	class UW_SteamProcessingPopup_C*                   SteamProcessingWidgetRef;                                   // 0x02A8   (0x0008)  
	bool                                               CanOpenBasicChest;                                          // 0x02B0   (0x0001)  
	bool                                               CanOpenLuckyChest;                                          // 0x02B1   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x02B2   (0x0006)  MISSED
	TArray<class UW_ChestSeasonSlot_C*>                LastChestSlot;                                              // 0x02B8   (0x0010)  
	int32_t                                            LastEdition;                                                // 0x02C8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02CC   (0x0004)  MISSED
	TArray<FName>                                      CachedItemRowNames;                                         // 0x02D0   (0x0010)  
	TArray<class UW_ChestSeasonSlot_C*>                ChestSeasons;                                               // 0x02E0   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_BattleChests.W_BattleChests_C.ShowNoChests
	// ESlateVisibility ShowNoChests();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_BattleChests.W_BattleChests_C.GetColorAndOpacity
	// FSlateColor GetColorAndOpacity();                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_BattleChests.W_BattleChests_C.GetbIsEnabled
	// bool GetbIsEnabled();                                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_BattleChests.W_BattleChests_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_BattleChests.W_BattleChests_C.SteamInventoryRefreshed
	// void SteamInventoryRefreshed();                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_BattleChests.W_BattleChests_C.BasicChestCrafted
	// void BasicChestCrafted(TEnumAsByte<E_ChestTypes> ChestType);                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_BattleChests.W_BattleChests_C.ExecuteUbergraph_W_BattleChests
	// void ExecuteUbergraph_W_BattleChests(int32_t EntryPoint);                                                                // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_EventRewardsEntry.W_EventRewardsEntry_C
/// Size: 0x0784 (1924 bytes) (0x000260 - 0x000784) align 8 MaxSize: 0x0784
class UW_EventRewardsEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            PopIn;                                                      // 0x0268   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0270   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0278   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0280   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0288   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0290   (0x0008)  
	class UProgressBar*                                ProgressBar_left;                                           // 0x0298   (0x0008)  
	class UProgressBar*                                ProgressBar_Right;                                          // 0x02A0   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x02A8   (0x0008)  
	class UTextBlock*                                  TextBlock2;                                                 // 0x02B0   (0x0008)  
	class UTextBlock*                                  TextBlock3;                                                 // 0x02B8   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x02C0   (0x0008)  
	class UW_CosmeticItem_C*                           W_CosmeticItem;                                             // 0x02C8   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x02D0   (0x0008)  
	FST_Unlockable                                     Item;                                                       // 0x02D8   (0x0188)  
	FST_Unlockable                                     NextItem;                                                   // 0x0460   (0x0188)  
	FST_Unlockable                                     PreviousItem;                                               // 0x05E8   (0x0188)  
	float                                              RevealDelay;                                                // 0x0770   (0x0004)  
	int32_t                                            RequiredAmount;                                             // 0x0774   (0x0004)  
	int32_t                                            OwnedTokenAmount;                                           // 0x0778   (0x0004)  
	bool                                               FirstEntry;                                                 // 0x077C   (0x0001)  
	bool                                               LastEntry;                                                  // 0x077D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x077E   (0x0002)  MISSED
	int32_t                                            Index;                                                      // 0x0780   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_EventRewardsEntry.W_EventRewardsEntry_C.ShowTitle
	// ESlateVisibility ShowTitle();                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardsEntry.W_EventRewardsEntry_C.SetCheckMarkColor
	// FLinearColor SetCheckMarkColor();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardsEntry.W_EventRewardsEntry_C.ShowRightConnection
	// ESlateVisibility ShowRightConnection();                                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardsEntry.W_EventRewardsEntry_C.ShowLeftConnection
	// ESlateVisibility ShowLeftConnection();                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardsEntry.W_EventRewardsEntry_C.SetLeftConnectionColor
	// FLinearColor SetLeftConnectionColor();                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardsEntry.W_EventRewardsEntry_C.SetRightConnectionColor
	// FLinearColor SetRightConnectionColor();                                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardsEntry.W_EventRewardsEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EventRewardsEntry.W_EventRewardsEntry_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EventRewardsEntry.W_EventRewardsEntry_C.ExecuteUbergraph_W_EventRewardsEntry
	// void ExecuteUbergraph_W_EventRewardsEntry(int32_t EntryPoint);                                                           // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_KeybindEntry.W_KeybindEntry_C
/// Size: 0x0282 (642 bytes) (0x000260 - 0x000282) align 8 MaxSize: 0x0282
class UW_KeybindEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UInputKeySelector*                           InputKeySelector;                                           // 0x0268   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0270   (0x0008)  
	FName                                              ActionName;                                                 // 0x0278   (0x0008)  
	bool                                               AxisMapping;                                                // 0x0280   (0x0001)  
	bool                                               ReverseKey_opposite_;                                       // 0x0281   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_KeybindEntry.W_KeybindEntry_C.BndEvt__W_KeybindEntry_InputKeySelector_29_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature
	// void BndEvt__W_KeybindEntry_InputKeySelector_29_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature(FInputChord SelectedKey); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_KeybindEntry.W_KeybindEntry_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_KeybindEntry.W_KeybindEntry_C.ReloadKey
	// void ReloadKey();                                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_KeybindEntry.W_KeybindEntry_C.ExecuteUbergraph_W_KeybindEntry
	// void ExecuteUbergraph_W_KeybindEntry(int32_t EntryPoint);                                                                // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_LeaderboardCard.W_LeaderboardCard_C
/// Size: 0x0380 (896 bytes) (0x000260 - 0x000380) align 8 MaxSize: 0x0380
class UW_LeaderboardCard_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            ShowSteamID;                                                // 0x0268   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0270   (0x0008)  
	class UBorder*                                     Border0;                                                    // 0x0278   (0x0008)  
	class UBorder*                                     Border1;                                                    // 0x0280   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0288   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x0290   (0x0008)  
	class UImage*                                      Image3;                                                     // 0x0298   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x02A0   (0x0008)  
	class UTextBlock*                                  TextBlock4;                                                 // 0x02A8   (0x0008)  
	class UTextBlock*                                  TextBlock5;                                                 // 0x02B0   (0x0008)  
	class UTextBlock*                                  TextBlock6;                                                 // 0x02B8   (0x0008)  
	class UTextBlock*                                  TextBlock7;                                                 // 0x02C0   (0x0008)  
	class UTextBlock*                                  TextBlock8;                                                 // 0x02C8   (0x0008)  
	class UThrobber*                                   Throbber;                                                   // 0x02D0   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x02D8   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton_C;                                            // 0x02E0   (0x0008)  
	class UW_TextBox_C*                                W_TextBox;                                                  // 0x02E8   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x02F0   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher9;                                            // 0x02F8   (0x0008)  
	FString                                            SteamID;                                                    // 0x0300   (0x0010)  
	class UTexture2D*                                  LargeAvatar;                                                // 0x0310   (0x0008)  
	FText                                              PlayerName;                                                 // 0x0318   (0x0018)  
	TArray<FST_UnitProgress>                           UserUnitProgress;                                           // 0x0330   (0x0010)  
	int32_t                                            PlayerTotalRank;                                            // 0x0340   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0344   (0x0004)  MISSED
	FString                                            RankTitle;                                                  // 0x0348   (0x0010)  
	FSteamID                                           Steam_ID;                                                   // 0x0358   (0x0008)  
	FRequestUserStatsData                              UserData;                                                   // 0x0360   (0x0018)  
	bool                                               isSupporter;                                                // 0x0378   (0x0001)  
	bool                                               ShowingSteamID;                                             // 0x0379   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x037A   (0x0002)  MISSED
	int32_t                                            PrestigeLevel;                                              // 0x037C   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_LeaderboardCard.W_LeaderboardCard_C.PrestigeText
	// FText PrestigeText();                                                                                                    // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_LeaderboardCard.W_LeaderboardCard_C.SetSupporterColor
	// FSlateColor SetSupporterColor();                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_LeaderboardCard.W_LeaderboardCard_C.ShowSupporter
	// ESlateVisibility ShowSupporter();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_LeaderboardCard.W_LeaderboardCard_C.SetPlayerRank
	// FText SetPlayerRank();                                                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_LeaderboardCard.W_LeaderboardCard_C.SetAvatar
	// FSlateBrush SetAvatar();                                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_LeaderboardCard.W_LeaderboardCard_C.OnCallback_D6FC45694A220A552A501082777C796D
	// void OnCallback_D6FC45694A220A552A501082777C796D(FRequestUserStatsData& Data, bool bWasSuccessful);                      // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_LeaderboardCard.W_LeaderboardCard_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_LeaderboardCard.W_LeaderboardCard_C.BndEvt__W_SteamID_W_CloseButton_C_0_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_SteamID_W_CloseButton_C_0_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_LeaderboardCard.W_LeaderboardCard_C.BndEvt__W_LeaderboardCard_W_Button_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature
	// void BndEvt__W_LeaderboardCard_W_Button_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_LeaderboardCard.W_LeaderboardCard_C.ExecuteUbergraph_W_LeaderboardCard
	// void ExecuteUbergraph_W_LeaderboardCard(int32_t EntryPoint);                                                             // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_LeaderboardsEntry.W_LeaderboardsEntry_C
/// Size: 0x0398 (920 bytes) (0x000260 - 0x000398) align 8 MaxSize: 0x0398
class UW_LeaderboardsEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            SwitchToGold;                                               // 0x0268   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0270   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0278   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock0;                                                 // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock1;                                                 // 0x0298   (0x0008)  
	class UTextBlock*                                  TextBlock2;                                                 // 0x02A0   (0x0008)  
	FString                                            UserName;                                                   // 0x02A8   (0x0010)  
	int32_t                                            RankingNumber;                                              // 0x02B8   (0x0004)  
	int32_t                                            Score;                                                      // 0x02BC   (0x0004)  
	bool                                               FetchName;                                                  // 0x02C0   (0x0001)  
	bool                                               IsSelf;                                                     // 0x02C1   (0x0001)  
	bool                                               isSupporter;                                                // 0x02C2   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x02C3   (0x0005)  MISSED
	FSlateFontInfo                                     CachedFontStyle;                                            // 0x02C8   (0x0058)  
	FSteamID                                           SteamID;                                                    // 0x0320   (0x0008)  
	class UTexture2D*                                  Avatar;                                                     // 0x0328   (0x0008)  
	bool                                               FetchSmallAvatar;                                           // 0x0330   (0x0001)  
	bool                                               FetchLargeAvatar;                                           // 0x0331   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x0332   (0x0006)  MISSED
	class UTexture2D*                                  LargeAvatar;                                                // 0x0338   (0x0008)  
	FRequestUserStatsData                              UserData;                                                   // 0x0340   (0x0018)  
	TArray<FST_UnitProgress>                           UserUnitProgress;                                           // 0x0358   (0x0010)  
	int32_t                                            PlayerTotalRank;                                            // 0x0368   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x036C   (0x0004)  MISSED
	FString                                            RankTitle;                                                  // 0x0370   (0x0010)  
	FRequestUserStatsData                              Data;                                                       // 0x0380   (0x0018)  


	/// Functions
	// Function /Game/Widgets/W_LeaderboardsEntry.W_LeaderboardsEntry_C.SetBgColor
	// FLinearColor SetBgColor();                                                                                               // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_LeaderboardsEntry.W_LeaderboardsEntry_C.SetrankNumber
	// FText SetrankNumber();                                                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_LeaderboardsEntry.W_LeaderboardsEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_LeaderboardsEntry.W_LeaderboardsEntry_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_LeaderboardsEntry.W_LeaderboardsEntry_C.BndEvt__W_LeaderboardsEntry_Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_LeaderboardsEntry_Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_LeaderboardsEntry.W_LeaderboardsEntry_C.ExecuteUbergraph_W_LeaderboardsEntry
	// void ExecuteUbergraph_W_LeaderboardsEntry(int32_t EntryPoint);                                                           // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_Tab.W_Tab_C
/// Size: 0x02D0 (720 bytes) (0x000260 - 0x0002D0) align 8 MaxSize: 0x02D0
class UW_Tab_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0268   (0x0008)  
	class USizeBox*                                    SizeBox;                                                    // 0x0270   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0278   (0x0008)  
	FText                                              TabText;                                                    // 0x0280   (0x0018)  
	SDK_UNDEFINED(16,644) /* FMulticastInlineDelegate */ __um(ButtonPressed);                                      // 0x0298   (0x0010)  
	bool                                               IsHighlighted;                                              // 0x02A8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02A9   (0x0003)  MISSED
	float                                              Min_Tab_Width;                                              // 0x02AC   (0x0004)  
	bool                                               FlipUpsideDown;                                             // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02B1   (0x0003)  MISSED
	int32_t                                            FontSize;                                                   // 0x02B4   (0x0004)  
	FText                                              TabGroupTag;                                                // 0x02B8   (0x0018)  


	/// Functions
	// Function /Game/Widgets/W_Tab.W_Tab_C.SetHighlighted
	// void SetHighlighted(bool IsHighlighted);                                                                                 // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_Tab.W_Tab_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_Tab.W_Tab_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_Tab.W_Tab_C.BndEvt__W_Tab_Button_1_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_Tab_Button_1_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();                      // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Tab.W_Tab_C.ExecuteUbergraph_W_Tab
	// void ExecuteUbergraph_W_Tab(int32_t EntryPoint);                                                                         // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Widgets/W_Tab.W_Tab_C.ButtonPressed__DelegateSignature
	// void ButtonPressed__DelegateSignature();                                                                                 // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_KeyBinds.W_KeyBinds_C
/// Size: 0x0400 (1024 bytes) (0x000260 - 0x000400) align 8 MaxSize: 0x0400
class UW_KeyBinds_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UScrollBox*                                  ScrollBox;                                                  // 0x0268   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x0270   (0x0008)  
	class UW_Button_C*                                 W_Button0;                                                  // 0x0278   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry;                                             // 0x0280   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry1;                                            // 0x0288   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry2;                                            // 0x0290   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry3;                                            // 0x0298   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry4;                                            // 0x02A0   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry5;                                            // 0x02A8   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry6;                                            // 0x02B0   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry7;                                            // 0x02B8   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry8;                                            // 0x02C0   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry9;                                            // 0x02C8   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry10;                                           // 0x02D0   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry11;                                           // 0x02D8   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry12;                                           // 0x02E0   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry13;                                           // 0x02E8   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry14;                                           // 0x02F0   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry15;                                           // 0x02F8   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry16;                                           // 0x0300   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry17;                                           // 0x0308   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry18;                                           // 0x0310   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry19;                                           // 0x0318   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry20;                                           // 0x0320   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry21;                                           // 0x0328   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry22;                                           // 0x0330   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry23;                                           // 0x0338   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry24;                                           // 0x0340   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry25;                                           // 0x0348   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry26;                                           // 0x0350   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry27;                                           // 0x0358   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry28;                                           // 0x0360   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry29;                                           // 0x0368   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry30;                                           // 0x0370   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry31;                                           // 0x0378   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry32;                                           // 0x0380   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry33;                                           // 0x0388   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry34;                                           // 0x0390   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry35;                                           // 0x0398   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry36;                                           // 0x03A0   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry37;                                           // 0x03A8   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry38;                                           // 0x03B0   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry39;                                           // 0x03B8   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry40;                                           // 0x03C0   (0x0008)  
	class UW_KeybindEntry_C*                           W_KeybindEntry41;                                           // 0x03C8   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C;                                            // 0x03D0   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C42;                                          // 0x03D8   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C43;                                          // 0x03E0   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C44;                                          // 0x03E8   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C45;                                          // 0x03F0   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C46;                                          // 0x03F8   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_KeyBinds.W_KeyBinds_C.SetActionMapping
	// void SetActionMapping(FName InAxisName, FKey Key);                                                                       // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_KeyBinds.W_KeyBinds_C.SetAxisMapping
	// void SetAxisMapping(FName InAxisName, FKey Key);                                                                         // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_KeyBinds.W_KeyBinds_C.BndEvt__W_KeyBinds_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_KeyBinds_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_KeyBinds.W_KeyBinds_C.BndEvt__W_KeyBinds_W_Button_110_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature
	// void BndEvt__W_KeyBinds_W_Button_110_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature();                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_KeyBinds.W_KeyBinds_C.ExecuteUbergraph_W_KeyBinds
	// void ExecuteUbergraph_W_KeyBinds(int32_t EntryPoint);                                                                    // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_PasswordPrompt.W_PasswordPrompt_C
/// Size: 0x03A0 (928 bytes) (0x000260 - 0x0003A0) align 8 MaxSize: 0x03A0
class UW_PasswordPrompt_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            WrongPassword;                                              // 0x0268   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x0270   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton_C;                                            // 0x0278   (0x0008)  
	class UW_TextBox_C*                                W_TextBox;                                                  // 0x0280   (0x0008)  
	class UW_ServerbrowserEntry_C*                     ServerBrowserEntry;                                         // 0x0288   (0x0008)  
	class UW_ServerBrowserEntry2_C*                    ServerBrowserEntry2;                                        // 0x0290   (0x0008)  
	FBlueprintSessionResult                            Session;                                                    // 0x0298   (0x0108)  


	/// Functions
	// Function /Game/Widgets/W_PasswordPrompt.W_PasswordPrompt_C.BndEvt__W_PasswordPrompt_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_PasswordPrompt_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_PasswordPrompt.W_PasswordPrompt_C.BndEvt__W_PasswordPrompt_W_CloseButton_C_0_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature
	// void BndEvt__W_PasswordPrompt_W_CloseButton_C_0_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature();         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_PasswordPrompt.W_PasswordPrompt_C.ExecuteUbergraph_W_PasswordPrompt
	// void ExecuteUbergraph_W_PasswordPrompt(int32_t EntryPoint);                                                              // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_DisconnectErrorMessage.W_DisconnectErrorMessage_C
/// Size: 0x0288 (648 bytes) (0x000260 - 0x000288) align 8 MaxSize: 0x0288
class UW_DisconnectErrorMessage_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0268   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x0270   (0x0008)  
	FString                                            ErrorCode;                                                  // 0x0278   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_DisconnectErrorMessage.W_DisconnectErrorMessage_C.BndEvt__W_DisconnectErrorMessage_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_DisconnectErrorMessage_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_DisconnectErrorMessage.W_DisconnectErrorMessage_C.ExecuteUbergraph_W_DisconnectErrorMessage
	// void ExecuteUbergraph_W_DisconnectErrorMessage(int32_t EntryPoint);                                                      // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_TokenPouchSpacer.W_TokenPouchSpacer_C
/// Size: 0x0260 (608 bytes) (0x000260 - 0x000260) align 8 MaxSize: 0x0260
class UW_TokenPouchSpacer_C : public UUserWidget
{ 
public:
};

/// Class /Game/Widgets/W_TokenPouchHeader.W_TokenPouchHeader_C
/// Size: 0x02A0 (672 bytes) (0x000260 - 0x0002A0) align 8 MaxSize: 0x02A0
class UW_TokenPouchHeader_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0270   (0x0008)  
	class UTextBlock*                                  TextBlock0;                                                 // 0x0278   (0x0008)  
	bool                                               EventIsActive;                                              // 0x0280   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0281   (0x0007)  MISSED
	FText                                              Title;                                                      // 0x0288   (0x0018)  


	/// Functions
	// Function /Game/Widgets/W_TokenPouchHeader.W_TokenPouchHeader_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_TokenPouchHeader.W_TokenPouchHeader_C.ExecuteUbergraph_W_TokenPouchHeader
	// void ExecuteUbergraph_W_TokenPouchHeader(int32_t EntryPoint);                                                            // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_TokenPouchEntry.W_TokenPouchEntry_C
/// Size: 0x03B0 (944 bytes) (0x000260 - 0x0003B0) align 8 MaxSize: 0x03B0
class UW_TokenPouchEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            LiveAnimation;                                              // 0x0268   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0270   (0x0008)  
	class UBorder*                                     Border0;                                                    // 0x0278   (0x0008)  
	class UBorder*                                     Border1;                                                    // 0x0280   (0x0008)  
	class UBorder*                                     Border2;                                                    // 0x0288   (0x0008)  
	class UBorder*                                     Border3;                                                    // 0x0290   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0298   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x02A0   (0x0008)  
	class UCanvasPanel*                                CanvasPanel4;                                               // 0x02A8   (0x0008)  
	class UImage*                                      Image;                                                      // 0x02B0   (0x0008)  
	class UImage*                                      Image5;                                                     // 0x02B8   (0x0008)  
	class UImage*                                      Image6;                                                     // 0x02C0   (0x0008)  
	class UImage*                                      Image7;                                                     // 0x02C8   (0x0008)  
	class UProgressBar*                                ProgressBar;                                                // 0x02D0   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x02D8   (0x0008)  
	class UTextBlock*                                  TextBlock8;                                                 // 0x02E0   (0x0008)  
	class UTextBlock*                                  TextBlock_EventName;                                        // 0x02E8   (0x0008)  
	class UTextBlock*                                  TextBlock_Year;                                             // 0x02F0   (0x0008)  
	class UTextBlock*                                  TextBlock_Year9;                                            // 0x02F8   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x0300   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x0308   (0x0008)  
	FText                                              EventTokenName;                                             // 0x0310   (0x0018)  
	FText                                              Year;                                                       // 0x0328   (0x0018)  
	int32_t                                            Amount;                                                     // 0x0340   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0344   (0x0004)  MISSED
	class UTexture2D*                                  EventTokenIcon;                                             // 0x0348   (0x0008)  
	class UTexture2D*                                  EventTokenIconBg;                                           // 0x0350   (0x0008)  
	bool                                               EnableYear;                                                 // 0x0358   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0359   (0x0007)  MISSED
	FDataTableRowHandle                                EventID;                                                    // 0x0360   (0x0010)  
	TEnumAsByte<E_EventCategories>                     EventCategory;                                              // 0x0370   (0x0001)  
	bool                                               Hovered;                                                    // 0x0371   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x0372   (0x0002)  MISSED
	FLinearColor                                       BgColorBottom;                                              // 0x0374   (0x0010)  
	FLinearColor                                       BgColorTop;                                                 // 0x0384   (0x0010)  
	bool                                               IsActive;                                                   // 0x0394   (0x0001)  
	bool                                               IsSelected;                                                 // 0x0395   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2];                                       // 0x0396   (0x0002)  MISSED
	FLinearColor                                       SelectedColor;                                              // 0x0398   (0x0010)  
	int32_t                                            HighestEventTokenAmount;                                    // 0x03A8   (0x0004)  
	int32_t                                            OwnedTokenAmount;                                           // 0x03AC   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_TokenPouchEntry.W_TokenPouchEntry_C.GetEventProgressPercent
	// float GetEventProgressPercent();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_TokenPouchEntry.W_TokenPouchEntry_C.GetHighestEventPassRewardTokenAmount
	// void GetHighestEventPassRewardTokenAmount(int32_t& HighestTokenAmount);                                                  // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_TokenPouchEntry.W_TokenPouchEntry_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_TokenPouchEntry.W_TokenPouchEntry_C.BndEvt__W_TokenPouchEntry_Button_292_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_TokenPouchEntry_Button_292_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_TokenPouchEntry.W_TokenPouchEntry_C.BndEvt__W_TokenPouchEntry_Button_292_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_TokenPouchEntry_Button_292_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_TokenPouchEntry.W_TokenPouchEntry_C.BndEvt__W_TokenPouchEntry_Button_292_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_TokenPouchEntry_Button_292_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_TokenPouchEntry.W_TokenPouchEntry_C.ExecuteUbergraph_W_TokenPouchEntry
	// void ExecuteUbergraph_W_TokenPouchEntry(int32_t EntryPoint);                                                             // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_TokenPouch.W_TokenPouch_C
/// Size: 0x02A1 (673 bytes) (0x000260 - 0x0002A1) align 8 MaxSize: 0x02A1
class UW_TokenPouch_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x0270   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton;                                              // 0x0278   (0x0008)  
	class UW_TokenPouchEntry_C*                        W_CoinPouchEntry;                                           // 0x0280   (0x0008)  
	class UW_TokenPouchEntry_C*                        W_CoinPouchEntry0;                                          // 0x0288   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C;                                            // 0x0290   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C1;                                           // 0x0298   (0x0008)  
	bool                                               AddSpacer;                                                  // 0x02A0   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_TokenPouch.W_TokenPouch_C.AddTokenEntriesForEvent
	// void AddTokenEntriesForEvent(TEnumAsByte<E_EventCategories> Event, bool EventIsActive);                                  // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_TokenPouch.W_TokenPouch_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_TokenPouch.W_TokenPouch_C.BndEvt__W_TokenPouch_W_CloseButton_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_TokenPouch_W_CloseButton_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_TokenPouch.W_TokenPouch_C.ReloadTokenPouch
	// void ReloadTokenPouch();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_TokenPouch.W_TokenPouch_C.ExecuteUbergraph_W_TokenPouch
	// void ExecuteUbergraph_W_TokenPouch(int32_t EntryPoint);                                                                  // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_TextBox.W_TextBox_C
/// Size: 0x02C9 (713 bytes) (0x000260 - 0x0002C9) align 8 MaxSize: 0x02C9
class UW_TextBox_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UEditableTextBox*                            EditableTextBox;                                            // 0x0268   (0x0008)  
	FText                                              HintText;                                                   // 0x0270   (0x0018)  
	FText                                              PreText;                                                    // 0x0288   (0x0018)  
	SDK_UNDEFINED(16,645) /* FMulticastInlineDelegate */ __um(OnTextChanged);                                      // 0x02A0   (0x0010)  
	SDK_UNDEFINED(16,646) /* FMulticastInlineDelegate */ __um(OnTextCommited);                                     // 0x02B0   (0x0010)  
	bool                                               IsPassword;                                                 // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02C1   (0x0003)  MISSED
	int32_t                                            MaxTextLength;                                              // 0x02C4   (0x0004)  
	bool                                               CenterText;                                                 // 0x02C8   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_TextBox.W_TextBox_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_TextBox.W_TextBox_C.Reload
	// void Reload();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_TextBox.W_TextBox_C.BndEvt__W_TextBox_EditableTextBox_74_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature
	// void BndEvt__W_TextBox_EditableTextBox_74_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature(FText& Text); // [0x1325ea0] HasOutParms|BlueprintEvent 
	// Function /Game/Widgets/W_TextBox.W_TextBox_C.BndEvt__W_TextBox_EditableTextBox_74_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature
	// void BndEvt__W_TextBox_EditableTextBox_74_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature(FText& Text, TEnumAsByte<ETextCommit> CommitMethod); // [0x1325ea0] HasOutParms|BlueprintEvent 
	// Function /Game/Widgets/W_TextBox.W_TextBox_C.ExecuteUbergraph_W_TextBox
	// void ExecuteUbergraph_W_TextBox(int32_t EntryPoint);                                                                     // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Widgets/W_TextBox.W_TextBox_C.OnTextCommited__DelegateSignature
	// void OnTextCommited__DelegateSignature(FText Text);                                                                      // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_TextBox.W_TextBox_C.OnTextChanged__DelegateSignature
	// void OnTextChanged__DelegateSignature(FText Text);                                                                       // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_SmallHeader.W_SmallHeader_C
/// Size: 0x02B0 (688 bytes) (0x000260 - 0x0002B0) align 8 MaxSize: 0x02B0
class UW_SmallHeader_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0268   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0270   (0x0008)  
	FText                                              Title;                                                      // 0x0278   (0x0018)  
	FLinearColor                                       BgColor;                                                    // 0x0290   (0x0010)  
	FLinearColor                                       TextColor;                                                  // 0x02A0   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_SmallHeader.W_SmallHeader_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SmallHeader.W_SmallHeader_C.Reload
	// void Reload();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SmallHeader.W_SmallHeader_C.ExecuteUbergraph_W_SmallHeader
	// void ExecuteUbergraph_W_SmallHeader(int32_t EntryPoint);                                                                 // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_Slider.W_Slider_C
/// Size: 0x028D (653 bytes) (0x000260 - 0x00028D) align 8 MaxSize: 0x028D
class UW_Slider_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class USlider*                                     Slider;                                                     // 0x0268   (0x0008)  
	SDK_UNDEFINED(16,647) /* FMulticastInlineDelegate */ __um(OnValueChanged);                                     // 0x0270   (0x0010)  
	float                                              InitialValue;                                               // 0x0280   (0x0004)  
	float                                              MinValue;                                                   // 0x0284   (0x0004)  
	float                                              StepSize;                                                   // 0x0288   (0x0004)  
	bool                                               HideSliderBar;                                              // 0x028C   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_Slider.W_Slider_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_Slider.W_Slider_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_Slider.W_Slider_C.BndEvt__W_Slider_Slider_49_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
	// void BndEvt__W_Slider_Slider_49_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value);   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Slider.W_Slider_C.Reload
	// void Reload();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_Slider.W_Slider_C.ExecuteUbergraph_W_Slider
	// void ExecuteUbergraph_W_Slider(int32_t EntryPoint);                                                                      // [0x1325ea0] Final                
	// Function /Game/Widgets/W_Slider.W_Slider_C.OnValueChanged__DelegateSignature
	// void OnValueChanged__DelegateSignature(float Value);                                                                     // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_ServerBrowserEntry2.W_ServerBrowserEntry2_C
/// Size: 0x0400 (1024 bytes) (0x000260 - 0x000400) align 8 MaxSize: 0x0400
class UW_ServerBrowserEntry2_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0270   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0278   (0x0008)  
	class UImage*                                      Image_Lock;                                                 // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock_Players;                                          // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock_Servername;                                       // 0x0290   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x0298   (0x0008)  
	bool                                               CorrectVersion;                                             // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02A1   (0x0003)  MISSED
	int32_t                                            PlayersOnServer;                                            // 0x02A4   (0x0004)  
	bool                                               UsesPassword;                                               // 0x02A8   (0x0001)  
	bool                                               TeamBalanceEnabled;                                         // 0x02A9   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x02AA   (0x0006)  MISSED
	FText                                              MapName;                                                    // 0x02B0   (0x0018)  
	FText                                              ServerName;                                                 // 0x02C8   (0x0018)  
	FSteamSessionResult                                ProSession;                                                 // 0x02E0   (0x0120)  


	/// Functions
	// Function /Game/Widgets/W_ServerBrowserEntry2.W_ServerBrowserEntry2_C.Get_TextBlock_Servername_ColorAndOpacity
	// FSlateColor Get_TextBlock_Servername_ColorAndOpacity();                                                                  // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ServerBrowserEntry2.W_ServerBrowserEntry2_C.ShowBalance
	// ESlateVisibility ShowBalance();                                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ServerBrowserEntry2.W_ServerBrowserEntry2_C.ShowLock
	// ESlateVisibility ShowLock();                                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ServerBrowserEntry2.W_ServerBrowserEntry2_C.GetbIsEnabled
	// bool GetbIsEnabled();                                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ServerBrowserEntry2.W_ServerBrowserEntry2_C.OnFailure_61A0539142E357E3762B729340DE36BE
	// void OnFailure_61A0539142E357E3762B729340DE36BE(FString JoinFailReason);                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ServerBrowserEntry2.W_ServerBrowserEntry2_C.OnSuccess_61A0539142E357E3762B729340DE36BE
	// void OnSuccess_61A0539142E357E3762B729340DE36BE(FString JoinFailReason);                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ServerBrowserEntry2.W_ServerBrowserEntry2_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ServerBrowserEntry2.W_ServerBrowserEntry2_C.BndEvt__W_ServerbrowserEntry_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_ServerbrowserEntry_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_ServerBrowserEntry2.W_ServerBrowserEntry2_C.JoinServer
	// void JoinServer();                                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ServerBrowserEntry2.W_ServerBrowserEntry2_C.ExecuteUbergraph_W_ServerBrowserEntry2
	// void ExecuteUbergraph_W_ServerBrowserEntry2(int32_t EntryPoint);                                                         // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_ServerbrowserEntry.W_ServerbrowserEntry_C
/// Size: 0x0420 (1056 bytes) (0x000260 - 0x000420) align 8 MaxSize: 0x0420
class UW_ServerbrowserEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0278   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0280   (0x0008)  
	class USizeBox*                                    SizeBox;                                                    // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock_Map;                                              // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock_Players;                                          // 0x0298   (0x0008)  
	class UTextBlock*                                  TextBlock_Servername;                                       // 0x02A0   (0x0008)  
	class UW_Button_C*                                 W_Button;                                                   // 0x02A8   (0x0008)  
	bool                                               CorrectVersion;                                             // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02B1   (0x0003)  MISSED
	int32_t                                            PlayersOnServer;                                            // 0x02B4   (0x0004)  
	FText                                              MapNameWithScenario;                                        // 0x02B8   (0x0018)  
	FText                                              MapName;                                                    // 0x02D0   (0x0018)  
	bool                                               TeamBalanceEnabled;                                         // 0x02E8   (0x0001)  
	bool                                               UsesPassword;                                               // 0x02E9   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x02EA   (0x0006)  MISSED
	FText                                              ServerName;                                                 // 0x02F0   (0x0018)  
	TArray<FSessionPropertyKeyPair>                    Extra_Settings;                                             // 0x0308   (0x0010)  
	FBlueprintSessionResult                            BlueprintSession;                                           // 0x0318   (0x0108)  


	/// Functions
	// Function /Game/Widgets/W_ServerbrowserEntry.W_ServerbrowserEntry_C.SetBgColor
	// FLinearColor SetBgColor();                                                                                               // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ServerbrowserEntry.W_ServerbrowserEntry_C.ShowBalance
	// ESlateVisibility ShowBalance();                                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ServerbrowserEntry.W_ServerbrowserEntry_C.EnableJoinButton
	// bool EnableJoinButton();                                                                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ServerbrowserEntry.W_ServerbrowserEntry_C.SetTextColor
	// FSlateColor SetTextColor();                                                                                              // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ServerbrowserEntry.W_ServerbrowserEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ServerbrowserEntry.W_ServerbrowserEntry_C.BndEvt__W_ServerbrowserEntry_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_ServerbrowserEntry_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_ServerbrowserEntry.W_ServerbrowserEntry_C.JoinServer
	// void JoinServer();                                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ServerbrowserEntry.W_ServerbrowserEntry_C.ExecuteUbergraph_W_ServerbrowserEntry
	// void ExecuteUbergraph_W_ServerbrowserEntry(int32_t EntryPoint);                                                          // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_QuickPlay.W_QuickPlay_C
/// Size: 0x04E0 (1248 bytes) (0x000260 - 0x0004E0) align 8 MaxSize: 0x04E0
class UW_QuickPlay_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0270   (0x0008)  
	class UThrobber*                                   Throbber;                                                   // 0x0278   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton_C;                                            // 0x0280   (0x0008)  
	TArray<FBlueprintSessionResult>                    FoundSessionsTemp;                                          // 0x0288   (0x0010)  
	FBlueprintSessionResult                            BestSessionSoFar;                                           // 0x0298   (0x0108)  
	FString                                            Status;                                                     // 0x03A0   (0x0010)  
	TArray<FSteamSessionResult>                        FoundProSessions;                                           // 0x03B0   (0x0010)  
	FSteamSessionResult                                BestProSessionSoFar;                                        // 0x03C0   (0x0120)  


	/// Functions
	// Function /Game/Widgets/W_QuickPlay.W_QuickPlay_C.OnCallback_CF5694DA4B1F030CF1F359BF249F4684
	// void OnCallback_CF5694DA4B1F030CF1F359BF249F4684(TArray<FSteamSessionResult>& Results);                                  // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_QuickPlay.W_QuickPlay_C.OnFailure_DCCDEBC64C85330E556180B21069345D
	// void OnFailure_DCCDEBC64C85330E556180B21069345D(FString JoinFailReason);                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_QuickPlay.W_QuickPlay_C.OnSuccess_DCCDEBC64C85330E556180B21069345D
	// void OnSuccess_DCCDEBC64C85330E556180B21069345D(FString JoinFailReason);                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_QuickPlay.W_QuickPlay_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_QuickPlay.W_QuickPlay_C.BndEvt__W_QuickPlay_W_CloseButton_C_0_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_QuickPlay_W_CloseButton_C_0_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_QuickPlay.W_QuickPlay_C.StopSearch
	// void StopSearch();                                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_QuickPlay.W_QuickPlay_C.Retry
	// void Retry();                                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_QuickPlay.W_QuickPlay_C.ExecuteUbergraph_W_QuickPlay
	// void ExecuteUbergraph_W_QuickPlay(int32_t EntryPoint);                                                                   // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C
/// Size: 0x05B8 (1464 bytes) (0x000260 - 0x0005B8) align 8 MaxSize: 0x05B8
class UW_OptionsMenu_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0268   (0x0008)  
	class UHorizontalBox*                              HorizontalBox0;                                             // 0x0270   (0x0008)  
	class UHorizontalBox*                              HorizontalBox1;                                             // 0x0278   (0x0008)  
	class UHorizontalBox*                              HorizontalBox2;                                             // 0x0280   (0x0008)  
	class UHorizontalBox*                              HorizontalBox3;                                             // 0x0288   (0x0008)  
	class UHorizontalBox*                              HorizontalBox4;                                             // 0x0290   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0298   (0x0008)  
	class UScaleBox*                                   ScaleBox;                                                   // 0x02A0   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x02A8   (0x0008)  
	class UTextBlock*                                  TextBlock5;                                                 // 0x02B0   (0x0008)  
	class UTextBlock*                                  TextBlock6;                                                 // 0x02B8   (0x0008)  
	class UTextBlock*                                  TextBlock7;                                                 // 0x02C0   (0x0008)  
	class UTextBlock*                                  TextBlock8;                                                 // 0x02C8   (0x0008)  
	class UTextBlock*                                  TextBlock9;                                                 // 0x02D0   (0x0008)  
	class UTextBlock*                                  TextBlock10;                                                // 0x02D8   (0x0008)  
	class UTextBlock*                                  TextBlock11;                                                // 0x02E0   (0x0008)  
	class UTextBlock*                                  TextBlock12;                                                // 0x02E8   (0x0008)  
	class UTextBlock*                                  TextBlock13;                                                // 0x02F0   (0x0008)  
	class UTextBlock*                                  TextBlock14;                                                // 0x02F8   (0x0008)  
	class UTextBlock*                                  TextBlock15;                                                // 0x0300   (0x0008)  
	class UTextBlock*                                  TextBlock16;                                                // 0x0308   (0x0008)  
	class UTextBlock*                                  TextBlock17;                                                // 0x0310   (0x0008)  
	class UTextBlock*                                  TextBlock18;                                                // 0x0318   (0x0008)  
	class UTextBlock*                                  TextBlock19;                                                // 0x0320   (0x0008)  
	class UTextBlock*                                  TextBlock_AnnouncerVolume;                                  // 0x0328   (0x0008)  
	class UTextBlock*                                  TextBlock_CameraDistance;                                   // 0x0330   (0x0008)  
	class UTextBlock*                                  TextBlock_CameraHeight;                                     // 0x0338   (0x0008)  
	class UTextBlock*                                  TextBlock_CameraHorOffset;                                  // 0x0340   (0x0008)  
	class UTextBlock*                                  TextBlock_EffectsVolume;                                    // 0x0348   (0x0008)  
	class UTextBlock*                                  TextBlock_HitmarkerSize;                                    // 0x0350   (0x0008)  
	class UTextBlock*                                  TextBlock_MasterVolume;                                     // 0x0358   (0x0008)  
	class UTextBlock*                                  TextBlock_MotionBlur;                                       // 0x0360   (0x0008)  
	class UTextBlock*                                  TextBlock_MusicVolume;                                      // 0x0368   (0x0008)  
	class UTextBlock*                                  TextBlock_Title;                                            // 0x0370   (0x0008)  
	class UVerticalBox*                                VerticalBox_Crosshair;                                      // 0x0378   (0x0008)  
	class UW_Button_C*                                 W_Button_C;                                                 // 0x0380   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox;                                                 // 0x0388   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox20;                                               // 0x0390   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox21;                                               // 0x0398   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox22;                                               // 0x03A0   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox23;                                               // 0x03A8   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_AmbientOcclusion;                                // 0x03B0   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_CamShake;                                        // 0x03B8   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_CenterDot;                                       // 0x03C0   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_CenterDot24;                                     // 0x03C8   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_CharHitFlash;                                    // 0x03D0   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_CharTesselation;                                 // 0x03D8   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_InvertedMouseY;                                  // 0x03E0   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_Shadow;                                          // 0x03E8   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_StaticCrosshair;                                 // 0x03F0   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_ToggleAim;                                       // 0x03F8   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_ToggleSprint;                                    // 0x0400   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton;                                              // 0x0408   (0x0008)  
	class UW_Combobox_C*                               W_Combobox;                                                 // 0x0410   (0x0008)  
	class UW_Combobox_C*                               W_Combobox_AAQuality;                                       // 0x0418   (0x0008)  
	class UW_Combobox_C*                               W_Combobox_MaxFPS;                                          // 0x0420   (0x0008)  
	class UW_Combobox_C*                               W_Combobox_Resolutions;                                     // 0x0428   (0x0008)  
	class UW_Combobox_C*                               W_Combobox_ScreenMode;                                      // 0x0430   (0x0008)  
	class UW_Combobox_C*                               W_Combobox_ScreenMode25;                                    // 0x0438   (0x0008)  
	class UW_Combobox_C*                               W_Combobox_ShadowQuality;                                   // 0x0440   (0x0008)  
	class UW_Combobox_C*                               W_Combobox_Sharpen;                                         // 0x0448   (0x0008)  
	class UW_Combobox_C*                               W_Combobox_VSync;                                           // 0x0450   (0x0008)  
	class UW_DynamicCrosshair_C*                       W_DynamicCrosshair;                                         // 0x0458   (0x0008)  
	class UW_KeyBinds_C*                               W_KeyBinds;                                                 // 0x0460   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_AnnouncerVolume;                             // 0x0468   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_Blue;                                        // 0x0470   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_C;                                           // 0x0478   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_C26;                                         // 0x0480   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_C27;                                         // 0x0488   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_C28;                                         // 0x0490   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_CameraDistance;                              // 0x0498   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_CameraHeight;                                // 0x04A0   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_CameraHorOffset;                             // 0x04A8   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_CrosshairSize;                               // 0x04B0   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_CrossSize;                                   // 0x04B8   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_EffectsVolume;                               // 0x04C0   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_Green;                                       // 0x04C8   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_LineLength;                                  // 0x04D0   (0x0008)  
	class UW_Slider_C*                                 W_SliderNoStep_Linewidth;                                   // 0x04D8   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_MasterVolume;                                // 0x04E0   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_MotionBlur;                                  // 0x04E8   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_MusicVolume;                                 // 0x04F0   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep_Red;                                         // 0x04F8   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C;                                            // 0x0500   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C29;                                          // 0x0508   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C30;                                          // 0x0510   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C31;                                          // 0x0518   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C32;                                          // 0x0520   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C33;                                          // 0x0528   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C34;                                          // 0x0530   (0x0008)  
	class UW_Tab_C*                                    W_Tab_Audio;                                                // 0x0538   (0x0008)  
	class UW_Tab_C*                                    W_Tab_Gameplay;                                             // 0x0540   (0x0008)  
	class UW_Tab_C*                                    W_Tab_Keybinds;                                             // 0x0548   (0x0008)  
	class UW_Tab_C*                                    W_Tab_Keybinds35;                                           // 0x0550   (0x0008)  
	class UW_Tab_C*                                    W_Tab_Video;                                                // 0x0558   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x0560   (0x0008)  
	bool                                               OverrideCloseButton;                                        // 0x0568   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0569   (0x0007)  MISSED
	SDK_UNDEFINED(16,648) /* FMulticastInlineDelegate */ __um(CloseButtonPressed);                                 // 0x0570   (0x0010)  
	TEnumAsByte<E_CrosshairTypes>                      CrosshairType;                                              // 0x0580   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0581   (0x0003)  MISSED
	FST_CrosshairSettings                              CrosshairSettingTemp;                                       // 0x0584   (0x0020)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x05A4   (0x0004)  MISSED
	TArray<FST_CrosshairSettings>                      AllCrosshairsTemp;                                          // 0x05A8   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.ShowCrosshair
	// ESlateVisibility ShowCrosshair();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.EnableStaticCrosshairSize
	// bool EnableStaticCrosshairSize();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CloseButton_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CloseButton_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.RefreshGameplayOptionsText
	// void RefreshGameplayOptionsText();                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_K2Node_ComponentBoundEvent_3_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_K2Node_ComponentBoundEvent_3_StateChanged__DelegateSignature(bool State);          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_1_K2Node_ComponentBoundEvent_4_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_1_K2Node_ComponentBoundEvent_4_StateChanged__DelegateSignature(bool State);        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_0_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_0_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_1_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_1_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_2_K2Node_ComponentBoundEvent_1_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_2_K2Node_ComponentBoundEvent_1_StateChanged__DelegateSignature(bool State);        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_3_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_3_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature(bool State);        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_2_K2Node_ComponentBoundEvent_10_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_2_K2Node_ComponentBoundEvent_10_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_3_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_3_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.RefreshAudioOptionsText
	// void RefreshAudioOptionsText();                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Combobox_K2Node_ComponentBoundEvent_13_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Combobox_K2Node_ComponentBoundEvent_13_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Combobox_1_K2Node_ComponentBoundEvent_14_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Combobox_1_K2Node_ComponentBoundEvent_14_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Combobox_AAQuality_1_K2Node_ComponentBoundEvent_15_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Combobox_AAQuality_1_K2Node_ComponentBoundEvent_15_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Combobox_Sharpen_1_K2Node_ComponentBoundEvent_16_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Combobox_Sharpen_1_K2Node_ComponentBoundEvent_16_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Combobox_MaxFPS_1_K2Node_ComponentBoundEvent_17_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Combobox_MaxFPS_1_K2Node_ComponentBoundEvent_17_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Combobox_MaxFPS_1_K2Node_ComponentBoundEvent_18_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Combobox_MaxFPS_1_K2Node_ComponentBoundEvent_18_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Combobox_Resolutions_K2Node_ComponentBoundEvent_19_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Combobox_Resolutions_K2Node_ComponentBoundEvent_19_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Combobox_Resolutions_1_K2Node_ComponentBoundEvent_20_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Combobox_Resolutions_1_K2Node_ComponentBoundEvent_20_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Tab_K2Node_ComponentBoundEvent_21_ButtonPressed__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Tab_K2Node_ComponentBoundEvent_21_ButtonPressed__DelegateSignature();                       // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Tab_2_K2Node_ComponentBoundEvent_8_ButtonPressed__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Tab_2_K2Node_ComponentBoundEvent_8_ButtonPressed__DelegateSignature();                      // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Tab_3_K2Node_ComponentBoundEvent_22_ButtonPressed__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Tab_3_K2Node_ComponentBoundEvent_22_ButtonPressed__DelegateSignature();                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_CrosshairGlow_K2Node_ComponentBoundEvent_12_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_CrosshairGlow_K2Node_ComponentBoundEvent_12_StateChanged__DelegateSignature(bool State); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_K2Node_ComponentBoundEvent_23_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_K2Node_ComponentBoundEvent_23_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_4_K2Node_ComponentBoundEvent_24_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_4_K2Node_ComponentBoundEvent_24_StateChanged__DelegateSignature(bool State);       // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Tab_Keybinds_K2Node_ComponentBoundEvent_25_ButtonPressed__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Tab_Keybinds_K2Node_ComponentBoundEvent_25_ButtonPressed__DelegateSignature();              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_CrosshairReloadBar_K2Node_ComponentBoundEvent_26_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_CrosshairReloadBar_K2Node_ComponentBoundEvent_26_StateChanged__DelegateSignature(bool State); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_2_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_2_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_3_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_3_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_4_K2Node_ComponentBoundEvent_28_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_4_K2Node_ComponentBoundEvent_28_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_5_K2Node_ComponentBoundEvent_29_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_5_K2Node_ComponentBoundEvent_29_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_CrosshairSize_1_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_CrosshairSize_1_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_LineLength_1_K2Node_ComponentBoundEvent_31_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_LineLength_1_K2Node_ComponentBoundEvent_31_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Tab_Keybinds_1_K2Node_ComponentBoundEvent_32_ButtonPressed__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Tab_Keybinds_1_K2Node_ComponentBoundEvent_32_ButtonPressed__DelegateSignature();            // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Combobox_ScreenMode_1_K2Node_ComponentBoundEvent_33_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Combobox_ScreenMode_1_K2Node_ComponentBoundEvent_33_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.ReloadSettings
	// void ReloadSettings();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_CenterDot_1_K2Node_ComponentBoundEvent_34_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_CenterDot_1_K2Node_ComponentBoundEvent_34_StateChanged__DelegateSignature(bool State); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_2_K2Node_ComponentBoundEvent_36_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_2_K2Node_ComponentBoundEvent_36_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_CrossSize_1_K2Node_ComponentBoundEvent_37_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_CrossSize_1_K2Node_ComponentBoundEvent_37_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_7_K2Node_ComponentBoundEvent_38_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_7_K2Node_ComponentBoundEvent_38_StateChanged__DelegateSignature(bool State);       // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_CharTesselation_1_K2Node_ComponentBoundEvent_39_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_CharTesselation_1_K2Node_ComponentBoundEvent_39_StateChanged__DelegateSignature(bool State); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_5_K2Node_ComponentBoundEvent_40_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_5_K2Node_ComponentBoundEvent_40_StateChanged__DelegateSignature(bool State);       // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_5_K2Node_ComponentBoundEvent_41_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_5_K2Node_ComponentBoundEvent_41_StateChanged__DelegateSignature(bool State);       // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_CenterDot_1_K2Node_ComponentBoundEvent_35_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_CenterDot_1_K2Node_ComponentBoundEvent_35_StateChanged__DelegateSignature(bool State); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_Button_C_4_K2Node_ComponentBoundEvent_42_ButtonPressed__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_Button_C_4_K2Node_ComponentBoundEvent_42_ButtonPressed__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_C_2_K2Node_ComponentBoundEvent_43_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_C_2_K2Node_ComponentBoundEvent_43_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_CrossSize_1_K2Node_ComponentBoundEvent_44_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_CrossSize_1_K2Node_ComponentBoundEvent_44_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_CrossSize_2_K2Node_ComponentBoundEvent_45_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_CrossSize_2_K2Node_ComponentBoundEvent_45_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_CameraHorOffset_1_K2Node_ComponentBoundEvent_46_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_CameraHorOffset_1_K2Node_ComponentBoundEvent_46_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_SliderNoStep_MusicVolume_1_K2Node_ComponentBoundEvent_47_OnValueChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_SliderNoStep_MusicVolume_1_K2Node_ComponentBoundEvent_47_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_ToggleAim_1_K2Node_ComponentBoundEvent_48_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_ToggleAim_1_K2Node_ComponentBoundEvent_48_StateChanged__DelegateSignature(bool State); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.BndEvt__W_OptionsMenu_W_CheckBox_CamShake_K2Node_ComponentBoundEvent_49_StateChanged__DelegateSignature
	// void BndEvt__W_OptionsMenu_W_CheckBox_CamShake_K2Node_ComponentBoundEvent_49_StateChanged__DelegateSignature(bool State); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.ExecuteUbergraph_W_OptionsMenu
	// void ExecuteUbergraph_W_OptionsMenu(int32_t EntryPoint);                                                                 // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Widgets/W_OptionsMenu.W_OptionsMenu_C.CloseButtonPressed__DelegateSignature
	// void CloseButtonPressed__DelegateSignature();                                                                            // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_Leaderboards.W_Leaderboards_C
/// Size: 0x0368 (872 bytes) (0x000260 - 0x000368) align 8 MaxSize: 0x0368
class UW_Leaderboards_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UCircularThrobber*                           CircularThrobber;                                           // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0278   (0x0008)  
	class UTextBlock*                                  TextBlock0;                                                 // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock1;                                                 // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock_Title;                                            // 0x0290   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x0298   (0x0008)  
	class UW_Button_C*                                 W_Button_C;                                                 // 0x02A0   (0x0008)  
	class UW_Button_C*                                 W_Button_C2;                                                // 0x02A8   (0x0008)  
	class UW_Button_C*                                 W_Button_C3;                                                // 0x02B0   (0x0008)  
	class UW_Button_C*                                 W_Button_C4;                                                // 0x02B8   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton;                                              // 0x02C0   (0x0008)  
	class UW_Combobox_C*                               W_Combobox_ScreenMode;                                      // 0x02C8   (0x0008)  
	class UW_LeaderboardsEntry_C*                      W_LeaderboardsEntry;                                        // 0x02D0   (0x0008)  
	class UW_LeaderboardsEntry_C*                      W_LeaderboardsEntry5;                                       // 0x02D8   (0x0008)  
	class UW_LeaderboardsEntry_C*                      W_LeaderboardsEntry6;                                       // 0x02E0   (0x0008)  
	class UW_LeaderboardsEntry_C*                      W_LeaderboardsEntry7;                                       // 0x02E8   (0x0008)  
	class UW_LeaderboardsEntry_C*                      W_LeaderboardsEntry8;                                       // 0x02F0   (0x0008)  
	class UW_LeaderboardsEntry_C*                      W_LeaderboardsEntry9;                                       // 0x02F8   (0x0008)  
	class UW_LeaderboardsEntry_C*                      W_LeaderboardsEntry10;                                      // 0x0300   (0x0008)  
	class UW_LeaderboardsEntry_C*                      W_LeaderboardsEntry11;                                      // 0x0308   (0x0008)  
	class UW_LeaderboardsEntry_C*                      W_LeaderboardsEntry12;                                      // 0x0310   (0x0008)  
	class UW_LeaderboardsEntry_C*                      W_LeaderboardsEntry13;                                      // 0x0318   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x0320   (0x0008)  
	class UW_MainMenu_C*                               MainMenuRef;                                                // 0x0328   (0x0008)  
	int32_t                                            StartNumber;                                                // 0x0330   (0x0004)  
	bool                                               LoadingLeaderboards;                                        // 0x0334   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0335   (0x0003)  MISSED
	int32_t                                            OwnRank;                                                    // 0x0338   (0x0004)  
	int32_t                                            TotalLederboardEntryAmount;                                 // 0x033C   (0x0004)  
	FLeaderboardScoresDownloaded                       DownloadedLeaderboard;                                      // 0x0340   (0x0018)  
	FString                                            SelectedLeaderBoard;                                        // 0x0358   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.EnableGoBackButton
	// bool EnableGoBackButton();                                                                                               // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.SetRange
	// FText SetRange();                                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.EnableGoForwardButton
	// bool EnableGoForwardButton();                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.ShowLoadingCircle
	// ESlateVisibility ShowLoadingCircle();                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.OnCallback_EDA5F92B4F472ED1B895F6BD57AA0177
	// void OnCallback_EDA5F92B4F472ED1B895F6BD57AA0177(FLeaderboardFindResult& Data, bool bWasSuccessful);                     // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.OnCallback_AE9AC8344CAEDDF98F3A3DA6DB3F555F
	// void OnCallback_AE9AC8344CAEDDF98F3A3DA6DB3F555F(FLeaderboardScoresDownloadedForUsers& Data, bool bWasSuccessful);       // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.OnCallback_C745A5BF4EBB4CF2E488AC90AADF3B2A
	// void OnCallback_C745A5BF4EBB4CF2E488AC90AADF3B2A(FLeaderboardFindResult& Data, bool bWasSuccessful);                     // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.OnCallback_1B159D134069ECAEF795908028A68F70
	// void OnCallback_1B159D134069ECAEF795908028A68F70(FLeaderboardScoresDownloaded& Data, bool bWasSuccessful);               // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.BndEvt__W_Leaderboards_W_CloseButton_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_Leaderboards_W_CloseButton_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.BndEvt__W_Leaderboards_W_Button_C_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature
	// void BndEvt__W_Leaderboards_W_Button_C_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.ReloadScoreboard
	// void ReloadScoreboard();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.BndEvt__W_Leaderboards_W_Button_C_0_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature
	// void BndEvt__W_Leaderboards_W_Button_C_0_K2Node_ComponentBoundEvent_2_ButtonPressed__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.BndEvt__W_Leaderboards_W_Combobox_ScreenMode_K2Node_ComponentBoundEvent_3_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_Leaderboards_W_Combobox_ScreenMode_K2Node_ComponentBoundEvent_3_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.BndEvt__W_Leaderboards_W_Button_C_9_K2Node_ComponentBoundEvent_4_ButtonPressed__DelegateSignature
	// void BndEvt__W_Leaderboards_W_Button_C_9_K2Node_ComponentBoundEvent_4_ButtonPressed__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.BndEvt__W_Leaderboards_W_Button_C_1_K2Node_ComponentBoundEvent_5_ButtonPressed__DelegateSignature
	// void BndEvt__W_Leaderboards_W_Button_C_1_K2Node_ComponentBoundEvent_5_ButtonPressed__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.ReloadEntries
	// void ReloadEntries();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_Leaderboards.W_Leaderboards_C.ExecuteUbergraph_W_Leaderboards
	// void ExecuteUbergraph_W_Leaderboards(int32_t EntryPoint);                                                                // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C
/// Size: 0x0350 (848 bytes) (0x000260 - 0x000350) align 8 MaxSize: 0x0350
class UW_EventRewardPass_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            PopUp;                                                      // 0x0268   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0270   (0x0008)  
	class UBorder*                                     Border0;                                                    // 0x0278   (0x0008)  
	class UBorder*                                     Border1;                                                    // 0x0280   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0288   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0290   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x0298   (0x0008)  
	class UImage*                                      Image3;                                                     // 0x02A0   (0x0008)  
	class UImage*                                      Image_BgColor;                                              // 0x02A8   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x02B0   (0x0008)  
	class UTextBlock*                                  TextBlock4;                                                 // 0x02B8   (0x0008)  
	class UTextBlock*                                  TextBlock5;                                                 // 0x02C0   (0x0008)  
	class UW_Button_C*                                 W_Button_C;                                                 // 0x02C8   (0x0008)  
	class UW_Button_C*                                 W_Button_C6;                                                // 0x02D0   (0x0008)  
	TArray<FST_Unlockable>                             Items;                                                      // 0x02D8   (0x0010)  
	bool                                               DisplayItems;                                               // 0x02E8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02E9   (0x0007)  MISSED
	FDataTableRowHandle                                EventID;                                                    // 0x02F0   (0x0010)  
	FLinearColor                                       TitleBg;                                                    // 0x0300   (0x0010)  
	FLinearColor                                       PassBgColorFront;                                           // 0x0310   (0x0010)  
	FLinearColor                                       PassBgColorBack;                                            // 0x0320   (0x0010)  
	class UTexture2D*                                  Event_Pass_Header_Image;                                    // 0x0330   (0x0008)  
	class UMaterialInstanceDynamic*                    BackgroundMID;                                              // 0x0338   (0x0008)  
	bool                                               EventIsLive;                                                // 0x0340   (0x0001)  
	bool                                               EventIsActive;                                              // 0x0341   (0x0001)  
	TEnumAsByte<E_EventCategories>                     EventCategory;                                              // 0x0342   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x0343   (0x0005)  MISSED
	class UTexture2D*                                  TokenTexture;                                               // 0x0348   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.SetTokenIconTexture
	// FSlateBrush SetTokenIconTexture();                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.ShowToken
	// ESlateVisibility ShowToken();                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.SetBottomTextColor
	// FSlateColor SetBottomTextColor();                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.SetBottomtext
	// FText SetBottomtext();                                                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.SetActivateButtonEnabled
	// bool SetActivateButtonEnabled();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.ShowHeaderImage
	// ESlateVisibility ShowHeaderImage();                                                                                      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.SetHeaderImage
	// FSlateBrush SetHeaderImage();                                                                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.SortItems
	// void SortItems();                                                                                                        // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.BndEvt__W_EventRewards_W_Button_C_2_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_EventRewards_W_Button_C_2_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.BndEvt__W_EventRewardPass_W_Button_C_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature
	// void BndEvt__W_EventRewardPass_W_Button_C_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature();               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.ReloadActiveState
	// void ReloadActiveState();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_EventRewardPass.W_EventRewardPass_C.ExecuteUbergraph_W_EventRewardPass
	// void ExecuteUbergraph_W_EventRewardPass(int32_t EntryPoint);                                                             // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_Credits.W_Credits_C
/// Size: 0x02D8 (728 bytes) (0x000260 - 0x0002D8) align 8 MaxSize: 0x02D8
class UW_Credits_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0270   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0278   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x0280   (0x0008)  
	class UImage*                                      Image3;                                                     // 0x0288   (0x0008)  
	class UImage*                                      Image4;                                                     // 0x0290   (0x0008)  
	class UImage*                                      Image5;                                                     // 0x0298   (0x0008)  
	class UImage*                                      Image6;                                                     // 0x02A0   (0x0008)  
	class UImage*                                      Image7;                                                     // 0x02A8   (0x0008)  
	class UImage*                                      Image8;                                                     // 0x02B0   (0x0008)  
	class UImage*                                      Image9;                                                     // 0x02B8   (0x0008)  
	class UImage*                                      Image10;                                                    // 0x02C0   (0x0008)  
	class UTextBlock*                                  TextBlock_Title;                                            // 0x02C8   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton;                                              // 0x02D0   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_Credits.W_Credits_C.BndEvt__W_Credits_W_CloseButton_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_Credits_W_CloseButton_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Credits.W_Credits_C.ExecuteUbergraph_W_Credits
	// void ExecuteUbergraph_W_Credits(int32_t EntryPoint);                                                                     // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_BattleShop.W_BattleShop_C
/// Size: 0x02B8 (696 bytes) (0x000260 - 0x0002B8) align 8 MaxSize: 0x02B8
class UW_BattleShop_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0270   (0x0008)  
	class UTextBlock*                                  TextBlock_Title;                                            // 0x0278   (0x0008)  
	class UW_BattleChests_C*                           W_BattleCrafting;                                           // 0x0280   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton_C;                                            // 0x0288   (0x0008)  
	class UW_Tab_C*                                    W_Tab_BattleChests;                                         // 0x0290   (0x0008)  
	class UW_Tab_C*                                    W_Tab_BattleChests0;                                        // 0x0298   (0x0008)  
	class UW_Tab_C*                                    W_Tab_BattleChests1;                                        // 0x02A0   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x02A8   (0x0008)  
	class UW_MainMenu_C*                               MainMenuRef;                                                // 0x02B0   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_BattleShop.W_BattleShop_C.SetCoinAmount
	// FText SetCoinAmount();                                                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_BattleShop.W_BattleShop_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_BattleShop.W_BattleShop_C.BndEvt__W_BattleShop_W_CloseButton_C_0_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_BattleShop_W_CloseButton_C_0_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_BattleShop.W_BattleShop_C.ExecuteUbergraph_W_BattleShop
	// void ExecuteUbergraph_W_BattleShop(int32_t EntryPoint);                                                                  // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_TitleComboBoxEntry.W_TitleComboBoxEntry_C
/// Size: 0x0288 (648 bytes) (0x000260 - 0x000288) align 8 MaxSize: 0x0288
class UW_TitleComboBoxEntry_C : public UUserWidget
{ 
public:
	class UImage*                                      Image;                                                      // 0x0260   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0268   (0x0008)  
	FString                                            Text;                                                       // 0x0270   (0x0010)  
	class UTexture2D*                                  Icon;                                                       // 0x0280   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_TitleComboBoxEntry.W_TitleComboBoxEntry_C.GetBrush
	// FSlateBrush GetBrush();                                                                                                  // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Widgets/W_SliderNoStep.W_SliderNoStep_C
/// Size: 0x0288 (648 bytes) (0x000260 - 0x000288) align 8 MaxSize: 0x0288
class UW_SliderNoStep_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class USlider*                                     Slider;                                                     // 0x0268   (0x0008)  
	SDK_UNDEFINED(16,649) /* FMulticastInlineDelegate */ __um(OnValueChanged);                                     // 0x0270   (0x0010)  
	float                                              InitialValue;                                               // 0x0280   (0x0004)  
	float                                              MinValue;                                                   // 0x0284   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_SliderNoStep.W_SliderNoStep_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SliderNoStep.W_SliderNoStep_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SliderNoStep.W_SliderNoStep_C.BndEvt__W_Slider_Slider_49_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
	// void BndEvt__W_Slider_Slider_49_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value);   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SliderNoStep.W_SliderNoStep_C.Reload
	// void Reload();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SliderNoStep.W_SliderNoStep_C.ExecuteUbergraph_W_SliderNoStep
	// void ExecuteUbergraph_W_SliderNoStep(int32_t EntryPoint);                                                                // [0x1325ea0] Final                
	// Function /Game/Widgets/W_SliderNoStep.W_SliderNoStep_C.OnValueChanged__DelegateSignature
	// void OnValueChanged__DelegateSignature(float Value);                                                                     // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_MainMenu.W_MainMenu_C
/// Size: 0x0708 (1800 bytes) (0x000260 - 0x000708) align 8 MaxSize: 0x0708
class UW_MainMenu_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            NewVersion;                                                 // 0x0268   (0x0008)  
	class UWidgetAnimation*                            BattleShop;                                                 // 0x0270   (0x0008)  
	class UWidgetAnimation*                            PendingRewards;                                             // 0x0278   (0x0008)  
	class UWidgetAnimation*                            HideMenu;                                                   // 0x0280   (0x0008)  
	class UWidgetAnimation*                            MenuLoad;                                                   // 0x0288   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0290   (0x0008)  
	class UBorder*                                     Border_Banner;                                              // 0x0298   (0x0008)  
	class UBorder*                                     Border_LevelInfo;                                           // 0x02A0   (0x0008)  
	class UButton*                                     Button;                                                     // 0x02A8   (0x0008)  
	class UButton*                                     Button0;                                                    // 0x02B0   (0x0008)  
	class UButton*                                     Button1;                                                    // 0x02B8   (0x0008)  
	class UButton*                                     Button2;                                                    // 0x02C0   (0x0008)  
	class UButton*                                     Button3;                                                    // 0x02C8   (0x0008)  
	class UButton*                                     Button4;                                                    // 0x02D0   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x02D8   (0x0008)  
	class UCanvasPanel*                                CanvasPanel5;                                               // 0x02E0   (0x0008)  
	class UCanvasPanel*                                CanvasPanel6;                                               // 0x02E8   (0x0008)  
	class UCircularThrobber*                           CircularThrobber;                                           // 0x02F0   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x02F8   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0300   (0x0008)  
	class UImage*                                      Image7;                                                     // 0x0308   (0x0008)  
	class UImage*                                      Image8;                                                     // 0x0310   (0x0008)  
	class UImage*                                      Image9;                                                     // 0x0318   (0x0008)  
	class UImage*                                      Image10;                                                    // 0x0320   (0x0008)  
	class UImage*                                      Image11;                                                    // 0x0328   (0x0008)  
	class UImage*                                      Image12;                                                    // 0x0330   (0x0008)  
	class UImage*                                      Image13;                                                    // 0x0338   (0x0008)  
	class UImage*                                      Image14;                                                    // 0x0340   (0x0008)  
	class UImage*                                      Image15;                                                    // 0x0348   (0x0008)  
	class UImage*                                      Image16;                                                    // 0x0350   (0x0008)  
	class UImage*                                      Image17;                                                    // 0x0358   (0x0008)  
	class UImage*                                      Image18;                                                    // 0x0360   (0x0008)  
	class UImage*                                      Image19;                                                    // 0x0368   (0x0008)  
	class UImage*                                      Image20;                                                    // 0x0370   (0x0008)  
	class UImage*                                      Image21;                                                    // 0x0378   (0x0008)  
	class UImage*                                      Image22;                                                    // 0x0380   (0x0008)  
	class UImage*                                      Image23;                                                    // 0x0388   (0x0008)  
	class UImage*                                      Image24;                                                    // 0x0390   (0x0008)  
	class UImage*                                      Image25;                                                    // 0x0398   (0x0008)  
	class UImage*                                      Image26;                                                    // 0x03A0   (0x0008)  
	class UImage*                                      Image27;                                                    // 0x03A8   (0x0008)  
	class UImage*                                      Image28;                                                    // 0x03B0   (0x0008)  
	class UImage*                                      Image29;                                                    // 0x03B8   (0x0008)  
	class UImage*                                      Image_CurrentEventTokenIcon;                                // 0x03C0   (0x0008)  
	class UImage*                                      Image_Logo;                                                 // 0x03C8   (0x0008)  
	class UMultiLineEditableText*                      MultiLineEditableText;                                      // 0x03D0   (0x0008)  
	class URichTextBlock*                              RichTextBlock;                                              // 0x03D8   (0x0008)  
	class UScrollBox*                                  ScrollBox;                                                  // 0x03E0   (0x0008)  
	class UWrapBox*                                    ScrollBox_ServerList;                                       // 0x03E8   (0x0008)  
	class USizeBox*                                    SizeBox;                                                    // 0x03F0   (0x0008)  
	class USizeBox*                                    SizeBox30;                                                  // 0x03F8   (0x0008)  
	class USizeBox*                                    SizeBox31;                                                  // 0x0400   (0x0008)  
	class USizeBox*                                    SizeBox32;                                                  // 0x0408   (0x0008)  
	class USizeBox*                                    SizeBox33;                                                  // 0x0410   (0x0008)  
	class USizeBox*                                    SizeBox_MaxHeavies;                                         // 0x0418   (0x0008)  
	class USizeBox*                                    SizeBox_MaxRecons;                                          // 0x0420   (0x0008)  
	class USizeBox*                                    SizeBox_MaxTroopers;                                        // 0x0428   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0430   (0x0008)  
	class UTextBlock*                                  TextBlock34;                                                // 0x0438   (0x0008)  
	class UTextBlock*                                  TextBlock35;                                                // 0x0440   (0x0008)  
	class UTextBlock*                                  TextBlock36;                                                // 0x0448   (0x0008)  
	class UTextBlock*                                  TextBlock37;                                                // 0x0450   (0x0008)  
	class UTextBlock*                                  TextBlock38;                                                // 0x0458   (0x0008)  
	class UTextBlock*                                  TextBlock_Bots;                                             // 0x0460   (0x0008)  
	class UTextBlock*                                  TextBlock_Bots39;                                           // 0x0468   (0x0008)  
	class UTextBlock*                                  TextBlock_CurrentEventTokenAmount;                          // 0x0470   (0x0008)  
	class UTextBlock*                                  TextBlock_Difficulty;                                       // 0x0478   (0x0008)  
	class UTextBlock*                                  TextBlock_MaxHeavies;                                       // 0x0480   (0x0008)  
	class UTextBlock*                                  TextBlock_MaxPlayers;                                       // 0x0488   (0x0008)  
	class UTextBlock*                                  TextBlock_MaxRecons;                                        // 0x0490   (0x0008)  
	class UTextBlock*                                  TextBlock_MaxTroopers;                                      // 0x0498   (0x0008)  
	class UTextBlock*                                  TextBlock_Tickets;                                          // 0x04A0   (0x0008)  
	class UTextBlock*                                  TextBlock_Title;                                            // 0x04A8   (0x0008)  
	class UTextBlock*                                  TextBlock_Title40;                                          // 0x04B0   (0x0008)  
	class UTextBlock*                                  TextBlock_Title41;                                          // 0x04B8   (0x0008)  
	class UTextBlock*                                  TextBlock_Title42;                                          // 0x04C0   (0x0008)  
	class UTextBlock*                                  TextBlock_Title43;                                          // 0x04C8   (0x0008)  
	class UTextBlock*                                  TextBlock_Title44;                                          // 0x04D0   (0x0008)  
	class UTextBlock*                                  TextBlock_Tokens;                                           // 0x04D8   (0x0008)  
	class UThrobber*                                   Throbber;                                                   // 0x04E0   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x04E8   (0x0008)  
	class UVerticalBox*                                VerticalBox_LookingForServers;                              // 0x04F0   (0x0008)  
	class UVerticalBox*                                VerticalBox_Servers;                                        // 0x04F8   (0x0008)  
	class UW_BattleShop_C*                             W_BattleShop;                                               // 0x0500   (0x0008)  
	class UW_Button_C*                                 W_Button_C;                                                 // 0x0508   (0x0008)  
	class UW_Button_C*                                 W_Button_C45;                                               // 0x0510   (0x0008)  
	class UW_Button_C*                                 W_Button_C46;                                               // 0x0518   (0x0008)  
	class UW_Button_C*                                 W_Button_C47;                                               // 0x0520   (0x0008)  
	class UW_Button_C*                                 W_Button_C48;                                               // 0x0528   (0x0008)  
	class UW_Button_C*                                 W_Button_C49;                                               // 0x0530   (0x0008)  
	class UW_Button_C*                                 W_Button_C50;                                               // 0x0538   (0x0008)  
	class UW_Button_C*                                 W_Button_C51;                                               // 0x0540   (0x0008)  
	class UW_Button_C*                                 W_Button_C52;                                               // 0x0548   (0x0008)  
	class UW_Button_C*                                 W_Button_C53;                                               // 0x0550   (0x0008)  
	class UW_Button_C*                                 W_Button_C54;                                               // 0x0558   (0x0008)  
	class UW_Button_C*                                 W_Button_C55;                                               // 0x0560   (0x0008)  
	class UW_Button_C*                                 W_Button_C56;                                               // 0x0568   (0x0008)  
	class UW_Button_C*                                 W_Button_Quickplay;                                         // 0x0570   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox;                                                 // 0x0578   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_ClassLimits;                                     // 0x0580   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_TeamBalance;                                     // 0x0588   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton_C;                                            // 0x0590   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton_C57;                                          // 0x0598   (0x0008)  
	class UW_Combobox_C*                               W_Combobox_Map;                                             // 0x05A0   (0x0008)  
	class UW_HeroCustomizationScreen_C*                W_EquipScreen;                                              // 0x05A8   (0x0008)  
	class UW_Leaderboards_C*                           W_Leaderboards;                                             // 0x05B0   (0x0008)  
	class UW_OptionsMenu_C*                            W_OptionsMenu;                                              // 0x05B8   (0x0008)  
	class UW_ServerbrowserEntry_C*                     W_ServerbrowserEntry;                                       // 0x05C0   (0x0008)  
	class UW_ServerbrowserEntry_C*                     W_ServerbrowserEntry58;                                     // 0x05C8   (0x0008)  
	class UW_ServerBrowserEntry2_C*                    W_ServerBrowserEntry2;                                      // 0x05D0   (0x0008)  
	class UW_ServerBrowserEntry2_C*                    W_ServerBrowserEntry259;                                    // 0x05D8   (0x0008)  
	class UW_Slider_C*                                 W_Slider_BotsPerTeam;                                       // 0x05E0   (0x0008)  
	class UW_Slider_C*                                 W_Slider_Difficulty;                                        // 0x05E8   (0x0008)  
	class UW_Slider_C*                                 W_Slider_MaxHeavies;                                        // 0x05F0   (0x0008)  
	class UW_Slider_C*                                 W_Slider_MaxPlayers;                                        // 0x05F8   (0x0008)  
	class UW_Slider_C*                                 W_Slider_MaxRecons;                                         // 0x0600   (0x0008)  
	class UW_Slider_C*                                 W_Slider_MaxTroopers;                                       // 0x0608   (0x0008)  
	class UW_Slider_C*                                 W_Slider_Tickets;                                           // 0x0610   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C;                                            // 0x0618   (0x0008)  
	class UW_SmallHeader_C*                            W_SmallHeader_C60;                                          // 0x0620   (0x0008)  
	class UW_TextBox_C*                                W_TextBox_Password;                                         // 0x0628   (0x0008)  
	class UW_TextBox_C*                                W_TextBox_Servername;                                       // 0x0630   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x0638   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher61;                                           // 0x0640   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher62;                                           // 0x0648   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_HostMenu;                                    // 0x0650   (0x0008)  
	int32_t                                            BotAmount;                                                  // 0x0658   (0x0004)  
	int32_t                                            Tickets;                                                    // 0x065C   (0x0004)  
	FString                                            MapToLoad;                                                  // 0x0660   (0x0010)  
	TEnumAsByte<E_Scenarios>                           Scenario;                                                   // 0x0670   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0671   (0x0003)  MISSED
	float                                              AIDifficulty;                                               // 0x0674   (0x0004)  
	TArray<FString>                                    RandomMaps;                                                 // 0x0678   (0x0010)  
	bool                                               UseRandomMap;                                               // 0x0688   (0x0001)  
	bool                                               bShowLogo;                                                  // 0x0689   (0x0001)  
	bool                                               LookingForServers;                                          // 0x068A   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x068B   (0x0005)  MISSED
	class AActor*                                      EquipCam;                                                   // 0x0690   (0x0008)  
	class AActor*                                      MainCam;                                                    // 0x0698   (0x0008)  
	bool                                               SwappingCameras;                                            // 0x06A0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x06A1   (0x0003)  MISSED
	int32_t                                            TotalLevel;                                                 // 0x06A4   (0x0004)  
	bool                                               CompactServerView;                                          // 0x06A8   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x06A9   (0x0007)  MISSED
	TArray<FText>                                      ServerRuleCached;                                           // 0x06B0   (0x0010)  
	bool                                               EnableClassLimits;                                          // 0x06C0   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x06C1   (0x0003)  MISSED
	int32_t                                            MaxRecons;                                                  // 0x06C4   (0x0004)  
	int32_t                                            MaxTroopers;                                                // 0x06C8   (0x0004)  
	int32_t                                            MaxHeavies;                                                 // 0x06CC   (0x0004)  
	int32_t                                            CoinAmount;                                                 // 0x06D0   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x06D4   (0x0004)  MISSED
	TArray<FString>                                    OriginalMapNames;                                           // 0x06D8   (0x0010)  
	bool                                               PlayerHasUnopenedChests;                                    // 0x06E8   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x06E9   (0x0003)  MISSED
	int32_t                                            MaxPlayers;                                                 // 0x06EC   (0x0004)  
	TEnumAsByte<E_PrestigeRanks>                       PrestigeRank;                                               // 0x06F0   (0x0001)  
	unsigned char                                      UnknownData07_6[0x7];                                       // 0x06F1   (0x0007)  MISSED
	FString                                            Rank;                                                       // 0x06F8   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.CheckIfPlayerHasUnopenedChests
	// void CheckIfPlayerHasUnopenedChests(bool& HasUnopenedChests);                                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.SetBorderStyle
	// FSlateBrush SetBorderStyle();                                                                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.SetBannerBorderColor
	// FLinearColor SetBannerBorderColor();                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.SetPrestigeEmblem
	// FSlateBrush SetPrestigeEmblem();                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ShowPendingRewardsIndicator
	// ESlateVisibility ShowPendingRewardsIndicator();                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ShowBattleShopAttraction
	// ESlateVisibility ShowBattleShopAttraction();                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.GetCurrentEventToken
	// void GetCurrentEventToken(TArray<FST_TokenAmount>& Array, bool& CurrentEventTokenFound, FST_EventAndTokenSettings& TokenInfo, FST_TokenAmount& TokenAmount); // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ShowHighCPUCostWarning
	// ESlateVisibility ShowHighCPUCostWarning();                                                                               // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.SetBannerColor
	// FLinearColor SetBannerColor();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ShowLevelStar
	// ESlateVisibility ShowLevelStar();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.SetRank
	// FText SetRank();                                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ShowBannerStats
	// ESlateVisibility ShowBannerStats();                                                                                      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ShowStatsLoading
	// ESlateVisibility ShowStatsLoading();                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ShowRankInfo
	// ESlateVisibility ShowRankInfo();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.SetLevel
	// FText SetLevel();                                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.EnableRefreshButton
	// bool EnableRefreshButton();                                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ShowLookingForServers
	// ESlateVisibility ShowLookingForServers();                                                                                // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ShowNoServersFound
	// ESlateVisibility ShowNoServersFound();                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ShowLogo
	// ESlateVisibility ShowLogo();                                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.SetVersion
	// FText SetVersion();                                                                                                      // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ShowHideMenus
	// void ShowHideMenus(bool Show);                                                                                           // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.OnCallback_D5E8CEB14D6B182C983EF7A6EB15A862
	// void OnCallback_D5E8CEB14D6B182C983EF7A6EB15A862(TArray<FSteamSessionResult>& Results);                                  // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.OnCallback_5CEDFA6A431F98602F88BC88DBB9D94E
	// void OnCallback_5CEDFA6A431F98602F88BC88DBB9D94E(TArray<FSteamSessionResult>& Results);                                  // [0x1325ea0] HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_3_K2Node_ComponentBoundEvent_5_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_3_K2Node_ComponentBoundEvent_5_ButtonPressed__DelegateSignature();                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_2_K2Node_ComponentBoundEvent_7_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_2_K2Node_ComponentBoundEvent_7_ButtonPressed__DelegateSignature();                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_CloseButton_C_0_K2Node_ComponentBoundEvent_9_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_CloseButton_C_0_K2Node_ComponentBoundEvent_9_ButtonPressed__DelegateSignature();               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_K2Node_ComponentBoundEvent_11_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_K2Node_ComponentBoundEvent_11_ButtonPressed__DelegateSignature();                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_CloseButton_C_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_CloseButton_C_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature
	// void BndEvt__W_MainMenu_W_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature(float Value);            // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Slider_1_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature
	// void BndEvt__W_MainMenu_W_Slider_1_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature(float Value);          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Slider_2_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature
	// void BndEvt__W_MainMenu_W_Slider_2_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature(float Value);         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_6_K2Node_ComponentBoundEvent_8_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_6_K2Node_ComponentBoundEvent_8_ButtonPressed__DelegateSignature();                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.LoadInitMusicVolume
	// void LoadInitMusicVolume();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_4_K2Node_ComponentBoundEvent_14_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_4_K2Node_ComponentBoundEvent_14_ButtonPressed__DelegateSignature();                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_OptionsMenu_K2Node_ComponentBoundEvent_15_CloseButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_OptionsMenu_K2Node_ComponentBoundEvent_15_CloseButtonPressed__DelegateSignature();             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_1_K2Node_ComponentBoundEvent_4_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_1_K2Node_ComponentBoundEvent_4_ButtonPressed__DelegateSignature();                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_9_K2Node_ComponentBoundEvent_6_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_9_K2Node_ComponentBoundEvent_6_ButtonPressed__DelegateSignature();                    // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_7_K2Node_ComponentBoundEvent_17_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_7_K2Node_ComponentBoundEvent_17_ButtonPressed__DelegateSignature();                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ReturnToMainCam
	// void ReturnToMainCam(bool WithAnimation);                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ReturnToMainMenu
	// void ReturnToMainMenu(bool WithAnimation);                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_Button_K2Node_ComponentBoundEvent_16_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_MainMenu_Button_K2Node_ComponentBoundEvent_16_OnButtonClickedEvent__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.StatsRefreshed
	// void StatsRefreshed();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.SteamInventoryReady
	// void SteamInventoryReady();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_TextBox_Servername_K2Node_ComponentBoundEvent_18_OnTextCommited__DelegateSignature
	// void BndEvt__W_MainMenu_W_TextBox_Servername_K2Node_ComponentBoundEvent_18_OnTextCommited__DelegateSignature(FText Text); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_TextBox_Password_K2Node_ComponentBoundEvent_19_OnTextCommited__DelegateSignature
	// void BndEvt__W_MainMenu_W_TextBox_Password_K2Node_ComponentBoundEvent_19_OnTextCommited__DelegateSignature(FText Text);  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_Button_1_K2Node_ComponentBoundEvent_20_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_MainMenu_Button_1_K2Node_ComponentBoundEvent_20_OnButtonClickedEvent__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.SimpleReturnToMainScreen
	// void SimpleReturnToMainScreen();                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_Button_501_K2Node_ComponentBoundEvent_21_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_MainMenu_Button_501_K2Node_ComponentBoundEvent_21_OnButtonClickedEvent__DelegateSignature();              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_Button_3_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_MainMenu_Button_3_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_CheckBox_TeamBalance_K2Node_ComponentBoundEvent_22_StateChanged__DelegateSignature
	// void BndEvt__W_MainMenu_W_CheckBox_TeamBalance_K2Node_ComponentBoundEvent_22_StateChanged__DelegateSignature(bool State); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_CheckBox_1_K2Node_ComponentBoundEvent_23_StateChanged__DelegateSignature
	// void BndEvt__W_MainMenu_W_CheckBox_1_K2Node_ComponentBoundEvent_23_StateChanged__DelegateSignature(bool State);          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_5_K2Node_ComponentBoundEvent_24_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_5_K2Node_ComponentBoundEvent_24_ButtonPressed__DelegateSignature();                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_8_K2Node_ComponentBoundEvent_25_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_8_K2Node_ComponentBoundEvent_25_ButtonPressed__DelegateSignature();                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_CheckBox_TeamBalance_1_K2Node_ComponentBoundEvent_27_StateChanged__DelegateSignature
	// void BndEvt__W_MainMenu_W_CheckBox_TeamBalance_1_K2Node_ComponentBoundEvent_27_StateChanged__DelegateSignature(bool State); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Slider_Tickets_1_K2Node_ComponentBoundEvent_28_OnValueChanged__DelegateSignature
	// void BndEvt__W_MainMenu_W_Slider_Tickets_1_K2Node_ComponentBoundEvent_28_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Slider_Tickets_2_K2Node_ComponentBoundEvent_29_OnValueChanged__DelegateSignature
	// void BndEvt__W_MainMenu_W_Slider_Tickets_2_K2Node_ComponentBoundEvent_29_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Slider_Tickets_3_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature
	// void BndEvt__W_MainMenu_W_Slider_Tickets_3_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_MultiLineEditableText_519_K2Node_ComponentBoundEvent_32_OnMultiLineEditableTextChangedEvent__DelegateSignature
	// void BndEvt__W_MainMenu_MultiLineEditableText_519_K2Node_ComponentBoundEvent_32_OnMultiLineEditableTextChangedEvent__DelegateSignature(FText& Text); // [0x1325ea0] HasOutParms|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_10_K2Node_ComponentBoundEvent_3_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_10_K2Node_ComponentBoundEvent_3_ButtonPressed__DelegateSignature();                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_Button_0_K2Node_ComponentBoundEvent_26_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_MainMenu_Button_0_K2Node_ComponentBoundEvent_26_OnButtonClickedEvent__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_Button_0_K2Node_ComponentBoundEvent_31_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_MainMenu_Button_0_K2Node_ComponentBoundEvent_31_OnButtonHoverEvent__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_Button_0_K2Node_ComponentBoundEvent_33_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_MainMenu_Button_0_K2Node_ComponentBoundEvent_33_OnButtonHoverEvent__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_10_K2Node_ComponentBoundEvent_34_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_10_K2Node_ComponentBoundEvent_34_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_11_K2Node_ComponentBoundEvent_12_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_11_K2Node_ComponentBoundEvent_12_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Button_C_12_K2Node_ComponentBoundEvent_35_ButtonPressed__DelegateSignature
	// void BndEvt__W_MainMenu_W_Button_C_12_K2Node_ComponentBoundEvent_35_ButtonPressed__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.TokenChanged
	// void TokenChanged();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ReloadTokenAmount
	// void ReloadTokenAmount();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.BndEvt__W_MainMenu_W_Slider_MaxPlayers_K2Node_ComponentBoundEvent_36_OnValueChanged__DelegateSignature
	// void BndEvt__W_MainMenu_W_Slider_MaxPlayers_K2Node_ComponentBoundEvent_36_OnValueChanged__DelegateSignature(float Value); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.SetMainMenuPresence
	// void SetMainMenuPresence();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ReloadServerRuleEntries
	// void ReloadServerRuleEntries();                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_MainMenu.W_MainMenu_C.ExecuteUbergraph_W_MainMenu
	// void ExecuteUbergraph_W_MainMenu(int32_t EntryPoint);                                                                    // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_CustomizationScreenMouseWheelZone.W_CustomizationScreenMouseWheelZone_C
/// Size: 0x0269 (617 bytes) (0x000260 - 0x000269) align 8 MaxSize: 0x0269
class UW_CustomizationScreenMouseWheelZone_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	bool                                               MouzeInZone;                                                // 0x0268   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_CustomizationScreenMouseWheelZone.W_CustomizationScreenMouseWheelZone_C.OnMouseEnter
	// void OnMouseEnter(FGeometry MyGeometry, FPointerEvent& MouseEvent);                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Game/Widgets/W_CustomizationScreenMouseWheelZone.W_CustomizationScreenMouseWheelZone_C.OnMouseLeave
	// void OnMouseLeave(FPointerEvent& MouseEvent);                                                                            // [0x1325ea0] BlueprintCosmetic|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Game/Widgets/W_CustomizationScreenMouseWheelZone.W_CustomizationScreenMouseWheelZone_C.ExecuteUbergraph_W_CustomizationScreenMouseWheelZone
	// void ExecuteUbergraph_W_CustomizationScreenMouseWheelZone(int32_t EntryPoint);                                           // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_Combobox.W_Combobox_C
/// Size: 0x02A0 (672 bytes) (0x000260 - 0x0002A0) align 8 MaxSize: 0x02A0
class UW_Combobox_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UComboBoxString*                             ComboBoxString;                                             // 0x0268   (0x0008)  
	TArray<FString>                                    OPTIONS;                                                    // 0x0270   (0x0010)  
	SDK_UNDEFINED(16,650) /* FMulticastInlineDelegate */ __um(OnSelectionChanged);                                 // 0x0280   (0x0010)  
	FString                                            SelectedOption;                                             // 0x0290   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_Combobox.W_Combobox_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_Combobox.W_Combobox_C.BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature
	// void BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature(FString SelectedItem, TEnumAsByte<ESelectInfo> SelectionType); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Combobox.W_Combobox_C.Reload
	// void Reload();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_Combobox.W_Combobox_C.ExecuteUbergraph_W_Combobox
	// void ExecuteUbergraph_W_Combobox(int32_t EntryPoint);                                                                    // [0x1325ea0] Final                
	// Function /Game/Widgets/W_Combobox.W_Combobox_C.OnSelectionChanged__DelegateSignature
	// void OnSelectionChanged__DelegateSignature(FString Selection);                                                           // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_ShopToolTipPreview.W_ShopToolTipPreview_C
/// Size: 0x0400 (1024 bytes) (0x000260 - 0x000400) align 8 MaxSize: 0x0400
class UW_ShopToolTipPreview_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class ABP_CosmeticPreview_C*                       CosmeticPreviewActorRef;                                    // 0x0270   (0x0008)  
	FST_Unlockable                                     Item;                                                       // 0x0278   (0x0188)  


	/// Functions
	// Function /Game/Widgets/W_ShopToolTipPreview.W_ShopToolTipPreview_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ShopToolTipPreview.W_ShopToolTipPreview_C.LoadItem
	// void LoadItem();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ShopToolTipPreview.W_ShopToolTipPreview_C.ExecuteUbergraph_W_ShopToolTipPreview
	// void ExecuteUbergraph_W_ShopToolTipPreview(int32_t EntryPoint);                                                          // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C
/// Size: 0x0464 (1124 bytes) (0x000260 - 0x000464) align 8 MaxSize: 0x0464
class UW_HeroCustomizationScreen_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            EventIconPulsate;                                           // 0x0268   (0x0008)  
	class UWidgetAnimation*                            Menu;                                                       // 0x0270   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0278   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0280   (0x0008)  
	class UButton*                                     Button0;                                                    // 0x0288   (0x0008)  
	class UButton*                                     Button1;                                                    // 0x0290   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0298   (0x0008)  
	class UComboBoxString*                             ComboBoxString;                                             // 0x02A0   (0x0008)  
	class UImage*                                      Image;                                                      // 0x02A8   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x02B0   (0x0008)  
	class UImage*                                      Image3;                                                     // 0x02B8   (0x0008)  
	class UImage*                                      Image4;                                                     // 0x02C0   (0x0008)  
	class UImage*                                      Image5;                                                     // 0x02C8   (0x0008)  
	class UImage*                                      Image6;                                                     // 0x02D0   (0x0008)  
	class UImage*                                      Image7;                                                     // 0x02D8   (0x0008)  
	class UImage*                                      Image8;                                                     // 0x02E0   (0x0008)  
	class UImage*                                      Image9;                                                     // 0x02E8   (0x0008)  
	class UImage*                                      Image10;                                                    // 0x02F0   (0x0008)  
	class UImage*                                      Image11;                                                    // 0x02F8   (0x0008)  
	class UImage*                                      Image12;                                                    // 0x0300   (0x0008)  
	class UProgressBar*                                ProgressBar;                                                // 0x0308   (0x0008)  
	class UScrollBox*                                  ScrollBox;                                                  // 0x0310   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0318   (0x0008)  
	class UTextBlock*                                  TextBlock13;                                                // 0x0320   (0x0008)  
	class UTextBlock*                                  TextBlock_Level;                                            // 0x0328   (0x0008)  
	class UTextBlock*                                  TextBlock_TeamAndUnitType;                                  // 0x0330   (0x0008)  
	class UTextBlock*                                  TextBlock_XP;                                               // 0x0338   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x0340   (0x0008)  
	class UW_Button_C*                                 W_Button_C;                                                 // 0x0348   (0x0008)  
	class UW_Button_C*                                 W_Button_Commando;                                          // 0x0350   (0x0008)  
	class UW_Button_C*                                 W_Button_Commando14;                                        // 0x0358   (0x0008)  
	class UW_Button_C*                                 W_Button_Gunner;                                            // 0x0360   (0x0008)  
	class UW_Button_C*                                 W_Button_Soldier;                                           // 0x0368   (0x0008)  
	class UW_Combobox_C*                               W_Combobox;                                                 // 0x0370   (0x0008)  
	class UW_Combobox_C*                               W_Combobox15;                                               // 0x0378   (0x0008)  
	class UW_Combobox_C*                               W_Combobox16;                                               // 0x0380   (0x0008)  
	class UW_Combobox_C*                               W_Combobox17;                                               // 0x0388   (0x0008)  
	class UW_CustomizationScreenMouseWheelZone_C*      W_CustomizationScreenMouseWheelZone;                        // 0x0390   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_Back;                                             // 0x0398   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_Event;                                            // 0x03A0   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_Feet;                                             // 0x03A8   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_Hands;                                            // 0x03B0   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_Hats;                                             // 0x03B8   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_Legs;                                             // 0x03C0   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_LowerFace;                                        // 0x03C8   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_Shirts;                                           // 0x03D0   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_Steam;                                            // 0x03D8   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_Tattoos;                                          // 0x03E0   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_Torso;                                            // 0x03E8   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_UpperFace;                                        // 0x03F0   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_Waist;                                            // 0x03F8   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_WeaponSkins;                                      // 0x0400   (0x0008)  
	class UW_IconTab_C*                                W_IconTab_XP;                                               // 0x0408   (0x0008)  
	class UW_SliderNoStep_C*                           W_SliderNoStep;                                             // 0x0410   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x0418   (0x0008)  
	class UWrapBox*                                    WrapBox;                                                    // 0x0420   (0x0008)  
	class ABP_EquipPreview_C*                          EquipPreviewActorRef;                                       // 0x0428   (0x0008)  
	class UW_MainMenu_C*                               MainMenuRef;                                                // 0x0430   (0x0008)  
	bool                                               SwappingCameras;                                            // 0x0438   (0x0001)  
	TEnumAsByte<E_Teams>                               SelectedTeam;                                               // 0x0439   (0x0001)  
	TEnumAsByte<E_Units>                               SelectedClass;                                              // 0x043A   (0x0001)  
	TEnumAsByte<E_UnlockableCategories>                SelectedCategory;                                           // 0x043B   (0x0001)  
	bool                                               EventItemsSelected;                                         // 0x043C   (0x0001)  
	TEnumAsByte<E_CurrencyTypes>                       CurrencyType;                                               // 0x043D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x043E   (0x0002)  MISSED
	TArray<FString>                                    UnOwnedTitles;                                              // 0x0440   (0x0010)  
	FString                                            LastSelectedTitle;                                          // 0x0450   (0x0010)  
	int32_t                                            MasteryLevels;                                              // 0x0460   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.SetMasteryText
	// FText SetMasteryText();                                                                                                  // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.ShowMasteryLevels
	// ESlateVisibility ShowMasteryLevels();                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.SetMannequinWeaponMode
	// void SetMannequinWeaponMode(TEnumAsByte<E_UnlockableCategories> Category);                                               // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.SetTitle
	// void SetTitle(int32_t& Index);                                                                                           // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.ShowTitleIcon
	// ESlateVisibility ShowTitleIcon();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.TitleDropBoxWidgetSet
	// class UWidget* TitleDropBoxWidgetSet(FString Item);                                                                      // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.SetEyeColor
	// void SetEyeColor(int32_t& Index);                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.SetUnitBgColor
	// FLinearColor SetUnitBgColor();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.ShowNoItemsText
	// ESlateVisibility ShowNoItemsText();                                                                                      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.SetHairStyle
	// void SetHairStyle(int32_t& Index);                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.SetSkinTone
	// void SetSkinTone(float& Index);                                                                                          // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.ShowBottomButtons
	// ESlateVisibility ShowBottomButtons();                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.SetHairColor
	// void SetHairColor(int32_t& Index);                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.SetFacialHairStyle
	// void SetFacialHairStyle(int32_t& Index);                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.SetSelectedUnitName
	// FText SetSelectedUnitName();                                                                                             // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.SetLevelColor
	// FLinearColor SetLevelColor();                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.ShowNoSteamOnnection
	// ESlateVisibility ShowNoSteamOnnection();                                                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.ShowLevel
	// ESlateVisibility ShowLevel();                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.LoadItemList
	// void LoadItemList(TEnumAsByte<E_UnlockableCategories> Category);                                                         // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.LoadMenu
	// void LoadMenu();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_Button_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_EquipScreen_Button_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_Button_37_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_EquipScreen_Button_37_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();             // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_Button_C_8_K2Node_ComponentBoundEvent_3_ButtonPressed__DelegateSignature
	// void BndEvt__W_EquipScreen_W_Button_C_8_K2Node_ComponentBoundEvent_3_ButtonPressed__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.ApplyFilter
	// void ApplyFilter();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_Button_C_2_K2Node_ComponentBoundEvent_4_ButtonPressed__DelegateSignature
	// void BndEvt__W_EquipScreen_W_Button_C_2_K2Node_ComponentBoundEvent_4_ButtonPressed__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_Button_C_1_K2Node_ComponentBoundEvent_5_ButtonPressed__DelegateSignature
	// void BndEvt__W_EquipScreen_W_Button_C_1_K2Node_ComponentBoundEvent_5_ButtonPressed__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.RefreshLevel
	// void RefreshLevel();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.RefreshButtonLevels
	// void RefreshButtonLevels();                                                                                              // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_Combobox_1_K2Node_ComponentBoundEvent_9_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_EquipScreen_W_Combobox_1_K2Node_ComponentBoundEvent_9_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_Combobox_2_K2Node_ComponentBoundEvent_8_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_EquipScreen_W_Combobox_2_K2Node_ComponentBoundEvent_8_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_SliderNoStep_K2Node_ComponentBoundEvent_12_OnValueChanged__DelegateSignature
	// void BndEvt__W_EquipScreen_W_SliderNoStep_K2Node_ComponentBoundEvent_12_OnValueChanged__DelegateSignature(float Value);  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_Combobox_K2Node_ComponentBoundEvent_14_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_EquipScreen_W_Combobox_K2Node_ComponentBoundEvent_14_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_Button_C_0_K2Node_ComponentBoundEvent_15_ButtonPressed__DelegateSignature
	// void BndEvt__W_EquipScreen_W_Button_C_0_K2Node_ComponentBoundEvent_15_ButtonPressed__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_3_K2Node_ComponentBoundEvent_7_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_3_K2Node_ComponentBoundEvent_7_ButtonClicked__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_10_K2Node_ComponentBoundEvent_13_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_10_K2Node_ComponentBoundEvent_13_ButtonClicked__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_13_K2Node_ComponentBoundEvent_6_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_13_K2Node_ComponentBoundEvent_6_ButtonClicked__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_11_K2Node_ComponentBoundEvent_16_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_11_K2Node_ComponentBoundEvent_16_ButtonClicked__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_12_K2Node_ComponentBoundEvent_17_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_12_K2Node_ComponentBoundEvent_17_ButtonClicked__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_K2Node_ComponentBoundEvent_18_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_K2Node_ComponentBoundEvent_18_ButtonClicked__DelegateSignature();                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_5_K2Node_ComponentBoundEvent_19_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_5_K2Node_ComponentBoundEvent_19_ButtonClicked__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_177_K2Node_ComponentBoundEvent_10_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_177_K2Node_ComponentBoundEvent_10_ButtonClicked__DelegateSignature();               // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_2_K2Node_ComponentBoundEvent_11_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_2_K2Node_ComponentBoundEvent_11_ButtonClicked__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_9_K2Node_ComponentBoundEvent_20_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_9_K2Node_ComponentBoundEvent_20_ButtonClicked__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_4_K2Node_ComponentBoundEvent_21_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_4_K2Node_ComponentBoundEvent_21_ButtonClicked__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_1_K2Node_ComponentBoundEvent_22_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_1_K2Node_ComponentBoundEvent_22_ButtonClicked__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_6_K2Node_ComponentBoundEvent_24_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_6_K2Node_ComponentBoundEvent_24_ButtonClicked__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_EquipScreen_W_IconTab_7_K2Node_ComponentBoundEvent_25_ButtonClicked__DelegateSignature
	// void BndEvt__W_EquipScreen_W_IconTab_7_K2Node_ComponentBoundEvent_25_ButtonClicked__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_HeroCustomizationScreen_W_IconTab_Back_1_K2Node_ComponentBoundEvent_23_ButtonClicked__DelegateSignature
	// void BndEvt__W_HeroCustomizationScreen_W_IconTab_Back_1_K2Node_ComponentBoundEvent_23_ButtonClicked__DelegateSignature(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_HeroCustomizationScreen_Button_107_K2Node_ComponentBoundEvent_26_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_HeroCustomizationScreen_Button_107_K2Node_ComponentBoundEvent_26_OnButtonClickedEvent__DelegateSignature(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_HeroCustomizationScreen_Button_107_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_HeroCustomizationScreen_Button_107_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_HeroCustomizationScreen_Button_107_K2Node_ComponentBoundEvent_27_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_HeroCustomizationScreen_Button_107_K2Node_ComponentBoundEvent_27_OnButtonHoverEvent__DelegateSignature(); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_HeroCustomizationScreen_W_Combobox_3_K2Node_ComponentBoundEvent_28_OnSelectionChanged__DelegateSignature
	// void BndEvt__W_HeroCustomizationScreen_W_Combobox_3_K2Node_ComponentBoundEvent_28_OnSelectionChanged__DelegateSignature(FString Selection); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.BndEvt__W_HeroCustomizationScreen_ComboBoxString_428_K2Node_ComponentBoundEvent_29_OnSelectionChangedEvent__DelegateSignature
	// void BndEvt__W_HeroCustomizationScreen_ComboBoxString_428_K2Node_ComponentBoundEvent_29_OnSelectionChangedEvent__DelegateSignature(FString SelectedItem, TEnumAsByte<ESelectInfo> SelectionType); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.ReloadUnitTitle
	// void ReloadUnitTitle();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HeroCustomizationScreen.W_HeroCustomizationScreen_C.ExecuteUbergraph_W_HeroCustomizationScreen
	// void ExecuteUbergraph_W_HeroCustomizationScreen(int32_t EntryPoint);                                                     // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C
/// Size: 0x0479 (1145 bytes) (0x000260 - 0x000479) align 8 MaxSize: 0x0479
class UW_CosmeticItem_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0268   (0x0008)  
	class UBorder*                                     Border0;                                                    // 0x0270   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0278   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0280   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0288   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0290   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0298   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x02A0   (0x0008)  
	class UImage*                                      Image3;                                                     // 0x02A8   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x02B0   (0x0008)  
	class UTextBlock*                                  TextBlock4;                                                 // 0x02B8   (0x0008)  
	FST_Unlockable                                     Item;                                                       // 0x02C0   (0x0188)  
	class UMaterialInstanceDynamic*                    WeaponSkinTexture;                                          // 0x0448   (0x0008)  
	class UW_HeroCustomizationScreen_C*                EquipScreenRef;                                             // 0x0450   (0x0008)  
	int32_t                                            ItemIndex;                                                  // 0x0458   (0x0004)  
	bool                                               Unlocked;                                                   // 0x045C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x045D   (0x0003)  MISSED
	class UW_ShopToolTipPreview_C*                     ToolTipRef;                                                 // 0x0460   (0x0008)  
	TEnumAsByte<E_CurrencyTypes>                       CurrencyType;                                               // 0x0468   (0x0001)  
	bool                                               NewItemPopup;                                               // 0x0469   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x046A   (0x0002)  MISSED
	int32_t                                            IconSize;                                                   // 0x046C   (0x0004)  
	int32_t                                            ItemPadding;                                                // 0x0470   (0x0004)  
	int32_t                                            TopOffset;                                                  // 0x0474   (0x0004)  
	bool                                               SteamOwned;                                                 // 0x0478   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.ShowOwnedBorder
	// ESlateVisibility ShowOwnedBorder();                                                                                      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetWaist
	// void SetWaist(int32_t& ItemIndex);                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.GetBgColor
	// FLinearColor GetBgColor();                                                                                               // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.ShowItemRequirementInfo
	// ESlateVisibility ShowItemRequirementInfo();                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetBack
	// void SetBack(int32_t& ItemIndex);                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetHands
	// void SetHands(int32_t& ItemIndex);                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetFeet
	// void SetFeet(int32_t& ItemIndex);                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetTattoo
	// void SetTattoo(int32_t& ItemIndex);                                                                                      // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetLegs
	// void SetLegs(int32_t& ItemIndex);                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetItemTypeIcon
	// FSlateBrush SetItemTypeIcon();                                                                                           // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.ShowRequiredAmountNumber
	// ESlateVisibility ShowRequiredAmountNumber();                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.GetSteamItemUnlockedState
	// void GetSteamItemUnlockedState(int32_t ItemIndex, bool& Unlocked);                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetLowerFace
	// void SetLowerFace(int32_t& ItemIndex);                                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetBorderColor
	// FLinearColor SetBorderColor();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetTorso
	// void SetTorso(int32_t& ItemIndex);                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetShirt
	// void SetShirt(int32_t& ItemIndex);                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetUpperFace
	// void SetUpperFace(int32_t& ItemIndex);                                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetHat
	// void SetHat(int32_t& ItemIndex);                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetPriceColor
	// FSlateColor SetPriceColor();                                                                                             // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetCurrencyIcon
	// FSlateBrush SetCurrencyIcon();                                                                                           // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.ShowEventIcon
	// ESlateVisibility ShowEventIcon();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetWeaponSkin
	// void SetWeaponSkin(int32_t& ItemIndex);                                                                                  // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.SetIconColor
	// FLinearColor SetIconColor();                                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.ShowLocked
	// ESlateVisibility ShowLocked();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.ShowEquipedCheckMark
	// ESlateVisibility ShowEquipedCheckMark();                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.BndEvt__W_EquipEntry_Button_55_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_EquipEntry_Button_55_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.BndEvt__W_EquipEntry_Button_55_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_EquipEntry_Button_55_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.Reload
	// void Reload();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CosmeticItem.W_CosmeticItem_C.ExecuteUbergraph_W_CosmeticItem
	// void ExecuteUbergraph_W_CosmeticItem(int32_t EntryPoint);                                                                // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_CloseButton.W_CloseButton_C
/// Size: 0x0298 (664 bytes) (0x000260 - 0x000298) align 8 MaxSize: 0x0298
class UW_CloseButton_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0268   (0x0008)  
	SDK_UNDEFINED(16,651) /* FMulticastInlineDelegate */ __um(ButtonPressed);                                      // 0x0270   (0x0010)  
	FText                                              ButtonText;                                                 // 0x0280   (0x0018)  


	/// Functions
	// Function /Game/Widgets/W_CloseButton.W_CloseButton_C.BndEvt__W_Button_Button_1_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_Button_Button_1_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_CloseButton.W_CloseButton_C.ExecuteUbergraph_W_CloseButton
	// void ExecuteUbergraph_W_CloseButton(int32_t EntryPoint);                                                                 // [0x1325ea0] Final                
	// Function /Game/Widgets/W_CloseButton.W_CloseButton_C.ButtonPressed__DelegateSignature
	// void ButtonPressed__DelegateSignature();                                                                                 // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_SteamProcessingPopup.W_SteamProcessingPopup_C
/// Size: 0x0299 (665 bytes) (0x000260 - 0x000299) align 8 MaxSize: 0x0299
class UW_SteamProcessingPopup_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0268   (0x0008)  
	class UThrobber*                                   Throbber;                                                   // 0x0270   (0x0008)  
	class UW_CloseButton_C*                            W_CloseButton_C;                                            // 0x0278   (0x0008)  
	FText                                              InfoText;                                                   // 0x0280   (0x0018)  
	bool                                               ShowCloseButton;                                            // 0x0298   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_SteamProcessingPopup.W_SteamProcessingPopup_C.GetVisibility
	// ESlateVisibility GetVisibility();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SteamProcessingPopup.W_SteamProcessingPopup_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SteamProcessingPopup.W_SteamProcessingPopup_C.BndEvt__W_SteamProcessingPopup_W_CloseButton_C_0_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_SteamProcessingPopup_W_CloseButton_C_0_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SteamProcessingPopup.W_SteamProcessingPopup_C.ExecuteUbergraph_W_SteamProcessingPopup
	// void ExecuteUbergraph_W_SteamProcessingPopup(int32_t EntryPoint);                                                        // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_NewItemPopup.W_NewItemPopup_C
/// Size: 0x0288 (648 bytes) (0x000260 - 0x000288) align 8 MaxSize: 0x0288
class UW_NewItemPopup_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0268   (0x0008)  
	class UW_Button_C*                                 W_Button_C;                                                 // 0x0270   (0x0008)  
	TArray<FSteamItemDetails>                          NewItemsPro;                                                // 0x0278   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_NewItemPopup.W_NewItemPopup_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_NewItemPopup.W_NewItemPopup_C.BndEvt__W_NewItemPopup_W_Button_C_0_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature
	// void BndEvt__W_NewItemPopup_W_Button_C_0_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_NewItemPopup.W_NewItemPopup_C.ExecuteUbergraph_W_NewItemPopup
	// void ExecuteUbergraph_W_NewItemPopup(int32_t EntryPoint);                                                                // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_IconTab.W_IconTab_C
/// Size: 0x02B5 (693 bytes) (0x000260 - 0x0002B5) align 8 MaxSize: 0x02B5
class UW_IconTab_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            HighlightedAnim;                                            // 0x0268   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0270   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0278   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0280   (0x0008)  
	class UTexture2D*                                  Icon;                                                       // 0x0288   (0x0008)  
	SDK_UNDEFINED(16,652) /* FMulticastInlineDelegate */ __um(ButtonClicked);                                      // 0x0290   (0x0010)  
	bool                                               Highlighted;                                                // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02A1   (0x0003)  MISSED
	float                                              SetIconRotation;                                            // 0x02A4   (0x0004)  
	float                                              PaddingAmount;                                              // 0x02A8   (0x0004)  
	FName                                              CategoryTag;                                                // 0x02AC   (0x0008)  
	bool                                               EnableHighlightedAnimation;                                 // 0x02B4   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_IconTab.W_IconTab_C.SetHighlighted
	// void SetHighlighted(bool Highlighted);                                                                                   // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_IconTab.W_IconTab_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_IconTab.W_IconTab_C.BndEvt__W_IconTab_Button_4_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_IconTab_Button_4_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();                  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_IconTab.W_IconTab_C.ExecuteUbergraph_W_IconTab
	// void ExecuteUbergraph_W_IconTab(int32_t EntryPoint);                                                                     // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Widgets/W_IconTab.W_IconTab_C.ButtonClicked__DelegateSignature
	// void ButtonClicked__DelegateSignature();                                                                                 // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_Tooltip.W_Tooltip_C
/// Size: 0x02C4 (708 bytes) (0x000260 - 0x0002C4) align 8 MaxSize: 0x02C4
class UW_Tooltip_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UTextBlock*                                  TextBlock_Text;                                             // 0x0270   (0x0008)  
	class UTextBlock*                                  TextBlock_Title;                                            // 0x0278   (0x0008)  
	FText                                              TipText;                                                    // 0x0280   (0x0018)  
	FText                                              Title;                                                      // 0x0298   (0x0018)  
	int32_t                                            TextFontSize;                                               // 0x02B0   (0x0004)  
	int32_t                                            TitleFontSize;                                              // 0x02B4   (0x0004)  
	class UTexture2D*                                  Icon;                                                       // 0x02B8   (0x0008)  
	int32_t                                            IconSize;                                                   // 0x02C0   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_Tooltip.W_Tooltip_C.ShowIcon
	// ESlateVisibility ShowIcon();                                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_Tooltip.W_Tooltip_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_Tooltip.W_Tooltip_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_Tooltip.W_Tooltip_C.ExecuteUbergraph_W_Tooltip
	// void ExecuteUbergraph_W_Tooltip(int32_t EntryPoint);                                                                     // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_SelectionDropDownEntry.W_SelectionDropDownEntry_C
/// Size: 0x042B (1067 bytes) (0x000260 - 0x00042B) align 8 MaxSize: 0x042B
class UW_SelectionDropDownEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0268   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0270   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0278   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock1;                                                 // 0x0290   (0x0008)  
	int32_t                                            Index;                                                      // 0x0298   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x029C   (0x0004)  MISSED
	class UW_SelectionDropDown_C*                      DropDown;                                                   // 0x02A0   (0x0008)  
	bool                                               ShowName;                                                   // 0x02A8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02A9   (0x0007)  MISSED
	FST_Selectable                                     Selectable;                                                 // 0x02B0   (0x0176)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x0426   (0x0002)  MISSED
	bool                                               EnableIconTilt;                                             // 0x0428   (0x0001)  
	bool                                               Unselectable;                                               // 0x0429   (0x0001)  
	bool                                               NonDoubleWieldingWeaponType;                                // 0x042A   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_SelectionDropDownEntry.W_SelectionDropDownEntry_C.ShowSkullIcon
	// ESlateVisibility ShowSkullIcon();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SelectionDropDownEntry.W_SelectionDropDownEntry_C.ShowRifleDualEquipWarning
	// ESlateVisibility ShowRifleDualEquipWarning();                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SelectionDropDownEntry.W_SelectionDropDownEntry_C.SetSelectableColor
	// FLinearColor SetSelectableColor();                                                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SelectionDropDownEntry.W_SelectionDropDownEntry_C.EnableButton
	// bool EnableButton();                                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SelectionDropDownEntry.W_SelectionDropDownEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SelectionDropDownEntry.W_SelectionDropDownEntry_C.BndEvt__W_SelectionDropDownEntry_Button_41_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_SelectionDropDownEntry_Button_41_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();  // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SelectionDropDownEntry.W_SelectionDropDownEntry_C.ExecuteUbergraph_W_SelectionDropDownEntry
	// void ExecuteUbergraph_W_SelectionDropDownEntry(int32_t EntryPoint);                                                      // [0x1325ea0] Final|HasDefaults    
};

/// Struct /Game/Widgets/ST_DropDownItem.ST_DropDownItem
/// Size: 0x0230 (560 bytes) (0x000000 - 0x000230) align 8 MaxSize: 0x0230
struct FST_DropDownItem
{ 
	int32_t                                            Index_5_86F2DE7C40835FAE17710CAB80B78E98;                   // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	FSlateBrush                                        Icon_12_6380223C4895FD4A2D120B96273BF23E;                   // 0x0008   (0x0088)  
	FString                                            ItemName_8_67D62A024DB96B7111E90AA857E3B18A;                // 0x0090   (0x0010)  
	FText                                              Description_11_43FBC27548EAA1F955E881B99A5F6B46;            // 0x00A0   (0x0018)  
	FST_Selectable                                     Selectable_15_19D6D9BC4596D7AFFF7F0EBB895213E6;             // 0x00B8   (0x0176)  
	unsigned char                                      UnknownData01_7[0x2];                                       // 0x022E   (0x0002)  MISSED
};

/// Class /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C
/// Size: 0x0533 (1331 bytes) (0x000260 - 0x000533) align 8 MaxSize: 0x0533
class UW_SelectionDropDown_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0268   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0270   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0278   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0280   (0x0008)  
	class UScaleBox*                                   ScaleBox;                                                   // 0x0288   (0x0008)  
	class UScrollBox*                                  ScrollBox;                                                  // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0298   (0x0008)  
	FVector2D                                          ButtonSize;                                                 // 0x02A0   (0x0008)  
	FSlateBrush                                        Icon;                                                       // 0x02A8   (0x0088)  
	FText                                              TipText;                                                    // 0x0330   (0x0018)  
	bool                                               MenuOpen;                                                   // 0x0348   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0349   (0x0007)  MISSED
	TArray<FST_DropDownItem>                           ItemsToList;                                                // 0x0350   (0x0010)  
	int32_t                                            SelectedItemIndex;                                          // 0x0360   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0364   (0x0004)  MISSED
	FText                                              ItemName;                                                   // 0x0368   (0x0018)  
	class UW_SpawnSelect_C*                            SpawnSelectMenu;                                            // 0x0380   (0x0008)  
	class UDataTable*                                  DT;                                                         // 0x0388   (0x0008)  
	bool                                               ButtonEnabled;                                              // 0x0390   (0x0001)  
	TEnumAsByte<E_Selectables>                         Selectable;                                                 // 0x0391   (0x0001)  
	bool                                               ShowExtraBorder;                                            // 0x0392   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x0393   (0x0001)  MISSED
	float                                              BorderPadding;                                              // 0x0394   (0x0004)  
	float                                              ImagePadding;                                               // 0x0398   (0x0004)  
	bool                                               ShowName;                                                   // 0x039C   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x039D   (0x0003)  MISSED
	FText                                              Description;                                                // 0x03A0   (0x0018)  
	FST_Selectable                                     SelectedItem;                                               // 0x03B8   (0x0176)  
	unsigned char                                      UnknownData04_6[0x2];                                       // 0x052E   (0x0002)  MISSED
	bool                                               EnableIconTilt;                                             // 0x0530   (0x0001)  
	bool                                               NonDoubleWieldingWeaponType;                                // 0x0531   (0x0001)  
	bool                                               CanListSkullWeapons;                                        // 0x0532   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C.ShowSkullIcon
	// ESlateVisibility ShowSkullIcon();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C.GetItemList
	// void GetItemList(TEnumAsByte<E_Teams> Team, TEnumAsByte<E_Units> Class, class UDataTable* Table, TArray<FST_DropDownItem>& Items); // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C.SetSelectedItemIndex
	// void SetSelectedItemIndex(int32_t SelectedItem);                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C.CloseItemList
	// void CloseItemList();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C.SetSelectedItem
	// void SetSelectedItem(int32_t ItemIndex);                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C.BndEvt__W_SelectionDropDown_Button_1_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_SelectionDropDown_Button_1_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();        // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C.Reload
	// void Reload();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C.CheckItemValidity
	// void CheckItemValidity();                                                                                                // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SelectionDropDown.W_SelectionDropDown_C.ExecuteUbergraph_W_SelectionDropDown
	// void ExecuteUbergraph_W_SelectionDropDown(int32_t EntryPoint);                                                           // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_FadeToBlack.W_FadeToBlack_C
/// Size: 0x0278 (632 bytes) (0x000260 - 0x000278) align 8 MaxSize: 0x0278
class UW_FadeToBlack_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            Fade;                                                       // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_FadeToBlack.W_FadeToBlack_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_FadeToBlack.W_FadeToBlack_C.ExecuteUbergraph_W_FadeToBlack
	// void ExecuteUbergraph_W_FadeToBlack(int32_t EntryPoint);                                                                 // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_Button.W_Button_C
/// Size: 0x02FC (764 bytes) (0x000260 - 0x0002FC) align 8 MaxSize: 0x02FC
class UW_Button_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0268   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0270   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0278   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0280   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0288   (0x0008)  
	class UImage*                                      Image_Icon;                                                 // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0298   (0x0008)  
	SDK_UNDEFINED(16,653) /* FMulticastInlineDelegate */ __um(ButtonPressed);                                      // 0x02A0   (0x0010)  
	FText                                              ButtonText;                                                 // 0x02B0   (0x0018)  
	int32_t                                            TextSize;                                                   // 0x02C8   (0x0004)  
	bool                                               IsHighlightButton;                                          // 0x02CC   (0x0001)  
	bool                                               Highlighted;                                                // 0x02CD   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02CE   (0x0002)  MISSED
	class UTexture2D*                                  Icon;                                                       // 0x02D0   (0x0008)  
	float                                              ContentPadding;                                             // 0x02D8   (0x0004)  
	float                                              IconSize;                                                   // 0x02DC   (0x0004)  
	float                                              LeftPaddingOffset;                                          // 0x02E0   (0x0004)  
	FName                                              Category_Tag;                                               // 0x02E4   (0x0008)  
	FLinearColor                                       BackgroundColor;                                            // 0x02EC   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_Button.W_Button_C.SetHighlighted
	// void SetHighlighted(bool Highlighted);                                                                                   // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_Button.W_Button_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_Button.W_Button_C.BndEvt__W_Button_Button_1_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_Button_Button_1_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Button.W_Button_C.ReloadButton
	// void ReloadButton();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_Button.W_Button_C.BndEvt__W_Button_Button_1_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_Button_Button_1_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Button.W_Button_C.BndEvt__W_Button_Button_1_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_Button_Button_1_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();                     // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_Button.W_Button_C.ExecuteUbergraph_W_Button
	// void ExecuteUbergraph_W_Button(int32_t EntryPoint);                                                                      // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Widgets/W_Button.W_Button_C.ButtonPressed__DelegateSignature
	// void ButtonPressed__DelegateSignature();                                                                                 // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_StealthMeter.W_StealthMeter_C
/// Size: 0x02A0 (672 bytes) (0x000260 - 0x0002A0) align 8 MaxSize: 0x02A0
class UW_StealthMeter_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0270   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0278   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x0280   (0x0008)  
	class UImage*                                      Image3;                                                     // 0x0288   (0x0008)  
	class UImage*                                      Image4;                                                     // 0x0290   (0x0008)  
	class ABP_Skill_Invisbility_C*                     InvisibilitySkillRef;                                       // 0x0298   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_StealthMeter.W_StealthMeter_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_StealthMeter.W_StealthMeter_C.ExecuteUbergraph_W_StealthMeter
	// void ExecuteUbergraph_W_StealthMeter(int32_t EntryPoint);                                                                // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/M_PiercingShotScreenEffect.M_PiercingShotScreenEffect_C
/// Size: 0x0280 (640 bytes) (0x000260 - 0x000280) align 8 MaxSize: 0x0280
class UM_PiercingShotScreenEffect_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            AimScope;                                                   // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0278   (0x0008)  


	/// Functions
	// Function /Game/Widgets/M_PiercingShotScreenEffect.M_PiercingShotScreenEffect_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/M_PiercingShotScreenEffect.M_PiercingShotScreenEffect_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/M_PiercingShotScreenEffect.M_PiercingShotScreenEffect_C.ExecuteUbergraph_M_PiercingShotScreenEffect
	// void ExecuteUbergraph_M_PiercingShotScreenEffect(int32_t EntryPoint);                                                    // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_ActionbarSlot.W_ActionbarSlot_C
/// Size: 0x02ED (749 bytes) (0x000260 - 0x0002ED) align 8 MaxSize: 0x02ED
class UW_ActionbarSlot_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            RechargedAngled;                                            // 0x0268   (0x0008)  
	class UWidgetAnimation*                            Recharged;                                                  // 0x0270   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0278   (0x0008)  
	class UHorizontalBox*                              HorizontalBox_Ammo;                                         // 0x0280   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0288   (0x0008)  
	class UImage*                                      Image_BulletIcon;                                           // 0x0290   (0x0008)  
	class UImage*                                      Image_Icon;                                                 // 0x0298   (0x0008)  
	class UImage*                                      Image_Icon0;                                                // 0x02A0   (0x0008)  
	class UProgressBar*                                ProgressBar_Square;                                         // 0x02A8   (0x0008)  
	class UProgressBar*                                ProgressBar_Wide;                                           // 0x02B0   (0x0008)  
	class UTextBlock*                                  TextBlock_AmmoAmount;                                       // 0x02B8   (0x0008)  
	class UTextBlock*                                  TextBlock_Hotkey;                                           // 0x02C0   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Bg;                                          // 0x02C8   (0x0008)  
	TEnumAsByte<E_ActionbarSlotStyles>                 SlotType;                                                   // 0x02D0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02D1   (0x0003)  MISSED
	FLinearColor                                       BgColor;                                                    // 0x02D4   (0x0010)  
	bool                                               Selected;                                                   // 0x02E4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02E5   (0x0003)  MISSED
	float                                              RechargePercentage;                                         // 0x02E8   (0x0004)  
	bool                                               IsMeleeWeapon;                                              // 0x02EC   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_ActionbarSlot.W_ActionbarSlot_C.ProgressPercentage
	// float ProgressPercentage();                                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ActionbarSlot.W_ActionbarSlot_C.ShowBulletIcon
	// ESlateVisibility ShowBulletIcon();                                                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ActionbarSlot.W_ActionbarSlot_C.GetEquipableAmmoInfo
	// void GetEquipableAmmoInfo(class UObject* Equipable, float& Percentage, int32_t& CurrentAmmo, int32_t& MaxAmmo);          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ActionbarSlot.W_ActionbarSlot_C.SetSelected
	// void SetSelected(bool Selected);                                                                                         // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ActionbarSlot.W_ActionbarSlot_C.ShowAmmo
	// ESlateVisibility ShowAmmo();                                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ActionbarSlot.W_ActionbarSlot_C.SetIcon
	// void SetIcon(FDataTableRowHandle Equipable);                                                                             // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ActionbarSlot.W_ActionbarSlot_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ActionbarSlot.W_ActionbarSlot_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_ActionbarSlot.W_ActionbarSlot_C.SetAmmoAmount
	// void SetAmmoAmount(int32_t Current, int32_t Max);                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ActionbarSlot.W_ActionbarSlot_C.ExecuteUbergraph_W_ActionbarSlot
	// void ExecuteUbergraph_W_ActionbarSlot(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_EliminationPlaque.W_EliminationPlaque_C
/// Size: 0x0270 (624 bytes) (0x000260 - 0x000270) align 8 MaxSize: 0x0270
class UW_EliminationPlaque_C : public UUserWidget
{ 
public:
	class UImage*                                      Image;                                                      // 0x0260   (0x0008)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x0268   (0x0001)  
	bool                                               IsAlive;                                                    // 0x0269   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x026A   (0x0002)  MISSED
	int32_t                                            PlayerIndex;                                                // 0x026C   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_EliminationPlaque.W_EliminationPlaque_C.SetPlaqueImage
	// FSlateBrush SetPlaqueImage();                                                                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Widgets/W_SpecialActionNotification.W_SpecialActionNotification_C
/// Size: 0x02ED (749 bytes) (0x000260 - 0x0002ED) align 8 MaxSize: 0x02ED
class UW_SpecialActionNotification_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            KillAnim;                                                   // 0x0268   (0x0008)  
	class UWidgetAnimation*                            PopUp;                                                      // 0x0270   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0278   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock1;                                                 // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock2;                                                 // 0x0298   (0x0008)  
	FText                                              Message;                                                    // 0x02A0   (0x0018)  
	FLinearColor                                       Color;                                                      // 0x02B8   (0x0010)  
	FName                                              Tag;                                                        // 0x02C8   (0x0008)  
	FText                                              KilledPlayerUsername;                                       // 0x02D0   (0x0018)  
	float                                              SoundPitch;                                                 // 0x02E8   (0x0004)  
	bool                                               PlayingSpecialKillSound;                                    // 0x02EC   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_SpecialActionNotification.W_SpecialActionNotification_C.ShouldPlayKillSound
	// void ShouldPlayKillSound(bool& Yes);                                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpecialActionNotification.W_SpecialActionNotification_C.UpdateData
	// void UpdateData(FText Message, FLinearColor Color, FName Tag, FText KilledPlayerUsername, float SoundPitch);             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpecialActionNotification.W_SpecialActionNotification_C.ReplayAnimation
	// void ReplayAnimation();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpecialActionNotification.W_SpecialActionNotification_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SpecialActionNotification.W_SpecialActionNotification_C.ExecuteUbergraph_W_SpecialActionNotification
	// void ExecuteUbergraph_W_SpecialActionNotification(int32_t EntryPoint);                                                   // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_VehiclePassengers.W_VehiclePassengers_C
/// Size: 0x0288 (648 bytes) (0x000260 - 0x000288) align 8 MaxSize: 0x0288
class UW_VehiclePassengers_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x0268   (0x0008)  
	class ABP_VehicleBase_C*                           Vehicle;                                                    // 0x0270   (0x0008)  
	TArray<class ABP_VehicleSeat_C*>                   Seats;                                                      // 0x0278   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_VehiclePassengers.W_VehiclePassengers_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_VehiclePassengers.W_VehiclePassengers_C.Init
	// void Init();                                                                                                             // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_VehiclePassengers.W_VehiclePassengers_C.ExecuteUbergraph_W_VehiclePassengers
	// void ExecuteUbergraph_W_VehiclePassengers(int32_t EntryPoint);                                                           // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_VehiclePassengerEntry.W_VehiclePassengerEntry_C
/// Size: 0x0288 (648 bytes) (0x000260 - 0x000288) align 8 MaxSize: 0x0288
class UW_VehiclePassengerEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0268   (0x0008)  
	class ABP_VehicleBase_C*                           VehicleRef;                                                 // 0x0270   (0x0008)  
	int32_t                                            Index;                                                      // 0x0278   (0x0004)  
	bool                                               DriverSeat;                                                 // 0x027C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x027D   (0x0003)  MISSED
	class ABP_VehicleSeat_C*                           Seat;                                                       // 0x0280   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_VehiclePassengerEntry.W_VehiclePassengerEntry_C.GetColorAndOpacity
	// FSlateColor GetColorAndOpacity();                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VehiclePassengerEntry.W_VehiclePassengerEntry_C.GetText
	// FText GetText();                                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VehiclePassengerEntry.W_VehiclePassengerEntry_C.GetVisibility
	// ESlateVisibility GetVisibility();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VehiclePassengerEntry.W_VehiclePassengerEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_VehiclePassengerEntry.W_VehiclePassengerEntry_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_VehiclePassengerEntry.W_VehiclePassengerEntry_C.Update
	// void Update(class ABP_VehicleBase_C* VehicleRef);                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_VehiclePassengerEntry.W_VehiclePassengerEntry_C.ExecuteUbergraph_W_VehiclePassengerEntry
	// void ExecuteUbergraph_W_VehiclePassengerEntry(int32_t EntryPoint);                                                       // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_PassengerSeatDot.W_PassengerSeatDot_C
/// Size: 0x0290 (656 bytes) (0x000260 - 0x000290) align 8 MaxSize: 0x0290
class UW_PassengerSeatDot_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UW_VehicleBaseUI_C*                          VehicleBaseRef;                                             // 0x0270   (0x0008)  
	int32_t                                            SeatIndex;                                                  // 0x0278   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x027C   (0x0004)  MISSED
	class ABP_VehicleSeat_C*                           SeatRef;                                                    // 0x0280   (0x0008)  
	class ABP_VehicleBase_C*                           VehicleRef;                                                 // 0x0288   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_PassengerSeatDot.W_PassengerSeatDot_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_PassengerSeatDot.W_PassengerSeatDot_C.UpdateSeat
	// void UpdateSeat(class ABP_VehicleBase_C* VehicleRef);                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_PassengerSeatDot.W_PassengerSeatDot_C.ExecuteUbergraph_W_PassengerSeatDot
	// void ExecuteUbergraph_W_PassengerSeatDot(int32_t EntryPoint);                                                            // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_VehicleBaseUI.W_VehicleBaseUI_C
/// Size: 0x02E9 (745 bytes) (0x000260 - 0x0002E9) align 8 MaxSize: 0x02E9
class UW_VehicleBaseUI_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            Warning;                                                    // 0x0268   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0270   (0x0008)  
	class UCanvasPanel*                                CanvasPanel_Dots;                                           // 0x0278   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0280   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0288   (0x0008)  
	class UProgressBar*                                ProgressBar;                                                // 0x0290   (0x0008)  
	class USizeBox*                                    SizeBox;                                                    // 0x0298   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x02A0   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x02A8   (0x0008)  
	class UW_VehiclePassengers_C*                      W_VehiclePassengers;                                        // 0x02B0   (0x0008)  
	class ABP_VehicleBase_C*                           VehicleRef;                                                 // 0x02B8   (0x0008)  
	float                                              HealthPercentage;                                           // 0x02C0   (0x0004)  
	int32_t                                            HealthAmount;                                               // 0x02C4   (0x0004)  
	TArray<FST_VehicleSeatUIDot>                       VehicleSeatDotLocations;                                    // 0x02C8   (0x0010)  
	class UTexture2D*                                  VehicleTopViewImage;                                        // 0x02D8   (0x0008)  
	float                                              TopViewImageSize;                                           // 0x02E0   (0x0004)  
	float                                              VehicleTopViewHeight;                                       // 0x02E4   (0x0004)  
	bool                                               ShowVehicleTopView;                                         // 0x02E8   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_VehicleBaseUI.W_VehicleBaseUI_C.ShowTopView
	// ESlateVisibility ShowTopView();                                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VehicleBaseUI.W_VehicleBaseUI_C.GetVehicleRef
	// void GetVehicleRef(class ABP_VehicleBase_C*& AsBPVehicleBase);                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_VehicleBaseUI.W_VehicleBaseUI_C.SetHealthPercentage
	// float SetHealthPercentage();                                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VehicleBaseUI.W_VehicleBaseUI_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_VehicleBaseUI.W_VehicleBaseUI_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_VehicleBaseUI.W_VehicleBaseUI_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_VehicleBaseUI.W_VehicleBaseUI_C.LoadPassengerDotLocations
	// void LoadPassengerDotLocations();                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_VehicleBaseUI.W_VehicleBaseUI_C.ExecuteUbergraph_W_VehicleBaseUI
	// void ExecuteUbergraph_W_VehicleBaseUI(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_VotekickVotePopup.W_VotekickVotePopup_C
/// Size: 0x02A8 (680 bytes) (0x000260 - 0x0002A8) align 8 MaxSize: 0x02A8
class UW_VotekickVotePopup_C : public UUserWidget
{ 
public:
	class UBorder*                                     Border;                                                     // 0x0260   (0x0008)  
	class UBorder*                                     Border0;                                                    // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0278   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock2;                                                 // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock3;                                                 // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock4;                                                 // 0x0298   (0x0008)  
	class UTextBlock*                                  TextBlock5;                                                 // 0x02A0   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_VotekickVotePopup.W_VotekickVotePopup_C.SetRequiredVotesText
	// FText SetRequiredVotesText();                                                                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VotekickVotePopup.W_VotekickVotePopup_C.ShowYesBorder
	// FLinearColor ShowYesBorder();                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VotekickVotePopup.W_VotekickVotePopup_C.ShowNoBorder
	// FLinearColor ShowNoBorder();                                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VotekickVotePopup.W_VotekickVotePopup_C.GetNoVoteAmount
	// FText GetNoVoteAmount();                                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VotekickVotePopup.W_VotekickVotePopup_C.GetYesVoteAmount
	// FText GetYesVoteAmount();                                                                                                // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VotekickVotePopup.W_VotekickVotePopup_C.SetPlayerToVoteKickName
	// FText SetPlayerToVoteKickName();                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_VotekickVotePopup.W_VotekickVotePopup_C.SetVoteKickTime
	// FText SetVoteKickTime();                                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Widgets/W_TankHUD.W_TankHUD_C
/// Size: 0x0300 (768 bytes) (0x000260 - 0x000300) align 8 MaxSize: 0x0300
class UW_TankHUD_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0268   (0x0008)  
	class UImage*                                      Image_Skill1;                                               // 0x0270   (0x0008)  
	class UImage*                                      Image_Skill10;                                              // 0x0278   (0x0008)  
	class UImage*                                      Image_Skill2;                                               // 0x0280   (0x0008)  
	class UImage*                                      Image_Skill21;                                              // 0x0288   (0x0008)  
	class UImage*                                      Image_Skill22;                                              // 0x0290   (0x0008)  
	class UProgressBar*                                ProgressBar_Skill2;                                         // 0x0298   (0x0008)  
	class UProgressBar*                                ProgressBar_Skill23;                                        // 0x02A0   (0x0008)  
	class UProgressBar*                                ProgressBar_Skill24;                                        // 0x02A8   (0x0008)  
	class UTextBlock*                                  TextBlock_Skill1;                                           // 0x02B0   (0x0008)  
	class UTextBlock*                                  Textblock_Skill2;                                           // 0x02B8   (0x0008)  
	class UTextBlock*                                  TextBlock_Skill3;                                           // 0x02C0   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x02C8   (0x0008)  
	class UW_VehicleBaseUI_C*                          W_VehicleBaseUI;                                            // 0x02D0   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Skill2;                                      // 0x02D8   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Skill25;                                     // 0x02E0   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Skill26;                                     // 0x02E8   (0x0008)  
	class ABP_TankBase_C*                              TankRef;                                                    // 0x02F0   (0x0008)  
	float                                              HealthPercentage;                                           // 0x02F8   (0x0004)  
	int32_t                                            HealthAmount;                                               // 0x02FC   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_TankHUD.W_TankHUD_C.GetVisibility
	// ESlateVisibility GetVisibility();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_TankHUD.W_TankHUD_C.SetEnableRepair
	// bool SetEnableRepair();                                                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_TankHUD.W_TankHUD_C.SetRepairBorderColor
	// FLinearColor SetRepairBorderColor();                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_TankHUD.W_TankHUD_C.SetMGBorderColor
	// FLinearColor SetMGBorderColor();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_TankHUD.W_TankHUD_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_TankHUD.W_TankHUD_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_TankHUD.W_TankHUD_C.ExecuteUbergraph_W_TankHUD
	// void ExecuteUbergraph_W_TankHUD(int32_t EntryPoint);                                                                     // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_SpecialActionStack.W_SpecialActionStack_C
/// Size: 0x0280 (640 bytes) (0x000260 - 0x000280) align 8 MaxSize: 0x0280
class UW_SpecialActionStack_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UHorizontalBox*                              HorizontalBox_KillConfirms;                                 // 0x0268   (0x0008)  
	class UHorizontalBox*                              HorizontalBox_SpecialKills;                                 // 0x0270   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x0278   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_SpecialActionStack.W_SpecialActionStack_C.AddEntry
	// void AddEntry(class UPanelWidget* HorBox, FST_Notification Notification);                                                // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpecialActionStack.W_SpecialActionStack_C.CheckIfNotificationAlreadyExists
	// void CheckIfNotificationAlreadyExists(FText& Message, FLinearColor Color, FName Tag, FText KilledPlayerUsername, float SoundPitch, bool& AlreadyExistsAndReplayed); // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpecialActionStack.W_SpecialActionStack_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SpecialActionStack.W_SpecialActionStack_C.AddNotification
	// void AddNotification(FText Message, FLinearColor Color, FName Tag, FText KilledPlayerUsername, float SoundPitch);        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpecialActionStack.W_SpecialActionStack_C.ExecuteUbergraph_W_SpecialActionStack
	// void ExecuteUbergraph_W_SpecialActionStack(int32_t EntryPoint);                                                          // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_PlaneHUD.W_PlaneHUD_C
/// Size: 0x0330 (816 bytes) (0x000260 - 0x000330) align 8 MaxSize: 0x0330
class UW_PlaneHUD_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0278   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0280   (0x0008)  
	class UImage*                                      Image_Skill1;                                               // 0x0288   (0x0008)  
	class UImage*                                      Image_Skill12;                                              // 0x0290   (0x0008)  
	class UImage*                                      Image_Skill2;                                               // 0x0298   (0x0008)  
	class UImage*                                      Image_Skill23;                                              // 0x02A0   (0x0008)  
	class UImage*                                      Image_Skill24;                                              // 0x02A8   (0x0008)  
	class UImage*                                      Image_Skill25;                                              // 0x02B0   (0x0008)  
	class UProgressBar*                                ProgressBar_Skill2;                                         // 0x02B8   (0x0008)  
	class UProgressBar*                                ProgressBar_Skill26;                                        // 0x02C0   (0x0008)  
	class UProgressBar*                                ProgressBar_Skill27;                                        // 0x02C8   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x02D0   (0x0008)  
	class UTextBlock*                                  TextBlock_Skill1;                                           // 0x02D8   (0x0008)  
	class UTextBlock*                                  Textblock_Skill2;                                           // 0x02E0   (0x0008)  
	class UTextBlock*                                  TextBlock_Skill3;                                           // 0x02E8   (0x0008)  
	class UW_VehicleBaseUI_C*                          W_VehicleBaseUI;                                            // 0x02F0   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher;                                             // 0x02F8   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Skill2;                                      // 0x0300   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Skill28;                                     // 0x0308   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Skill29;                                     // 0x0310   (0x0008)  
	class UAudioComponent*                             CockpitWarningSound;                                        // 0x0318   (0x0008)  
	class ABP_PlaneBase_C*                             LatestPlaneRef;                                             // 0x0320   (0x0008)  
	class ABP_PlaneBase_C*                             OldPlaneRef;                                                // 0x0328   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_PlaneHUD.W_PlaneHUD_C.SetAlternateWeaponAmount
	// FText SetAlternateWeaponAmount();                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_PlaneHUD.W_PlaneHUD_C.ShowPilotUI
	// ESlateVisibility ShowPilotUI();                                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_PlaneHUD.W_PlaneHUD_C.SetSpeedBoostBorderColor
	// FLinearColor SetSpeedBoostBorderColor();                                                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_PlaneHUD.W_PlaneHUD_C.SetMGBorderColor
	// FLinearColor SetMGBorderColor();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_PlaneHUD.W_PlaneHUD_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_PlaneHUD.W_PlaneHUD_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_PlaneHUD.W_PlaneHUD_C.ExecuteUbergraph_W_PlaneHUD
	// void ExecuteUbergraph_W_PlaneHUD(int32_t EntryPoint);                                                                    // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_NewKillConfirmEntry.W_NewKillConfirmEntry_C
/// Size: 0x02A2 (674 bytes) (0x000260 - 0x0002A2) align 8 MaxSize: 0x02A2
class UW_NewKillConfirmEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            PopUp;                                                      // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0278   (0x0008)  
	class UTextBlock*                                  TextBlock0;                                                 // 0x0280   (0x0008)  
	FText                                              VictimName;                                                 // 0x0288   (0x0018)  
	bool                                               IsAssist;                                                   // 0x02A0   (0x0001)  
	bool                                               CountedAsKill;                                              // 0x02A1   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_NewKillConfirmEntry.W_NewKillConfirmEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_NewKillConfirmEntry.W_NewKillConfirmEntry_C.ExecuteUbergraph_W_NewKillConfirmEntry
	// void ExecuteUbergraph_W_NewKillConfirmEntry(int32_t EntryPoint);                                                         // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_HeroProgressWidget.W_HeroProgressWidget_C
/// Size: 0x02EC (748 bytes) (0x000260 - 0x0002EC) align 8 MaxSize: 0x02EC
class UW_HeroProgressWidget_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0278   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0280   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x0288   (0x0008)  
	class UImage*                                      Image_BaseXP;                                               // 0x0290   (0x0008)  
	class UImage*                                      Image_MatchXP;                                              // 0x0298   (0x0008)  
	class UProgressBar*                                ProgressBar_BaseXP;                                         // 0x02A0   (0x0008)  
	class UProgressBar*                                ProgressBar_MatchXP;                                        // 0x02A8   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x02B0   (0x0008)  
	class UTextBlock*                                  TextBlock3;                                                 // 0x02B8   (0x0008)  
	class UTextBlock*                                  TextBlock4;                                                 // 0x02C0   (0x0008)  
	class UTextBlock*                                  TextBlock5;                                                 // 0x02C8   (0x0008)  
	int32_t                                            RequiredXPUntilNextLevel;                                   // 0x02D0   (0x0004)  
	int32_t                                            CurrentHeroLevel;                                           // 0x02D4   (0x0004)  
	class UMaterialInstanceDynamic*                    HeroXPPercentageBarMatRef;                                  // 0x02D8   (0x0008)  
	class UMaterialInstanceDynamic*                    HeroMatchXPMatRef;                                          // 0x02E0   (0x0008)  
	float                                              CurrentXPPercentage;                                        // 0x02E8   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_HeroProgressWidget.W_HeroProgressWidget_C.ShowSupporterBoost
	// ESlateVisibility ShowSupporterBoost();                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HeroProgressWidget.W_HeroProgressWidget_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_HeroProgressWidget.W_HeroProgressWidget_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_HeroProgressWidget.W_HeroProgressWidget_C.ExecuteUbergraph_W_HeroProgressWidget
	// void ExecuteUbergraph_W_HeroProgressWidget(int32_t EntryPoint);                                                          // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_EliminationHUD.W_EliminationHUD_C
/// Size: 0x0340 (832 bytes) (0x000260 - 0x000340) align 8 MaxSize: 0x0340
class UW_EliminationHUD_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UHorizontalBox*                              HorizontalBox_Players_Allied;                               // 0x0268   (0x0008)  
	class UHorizontalBox*                              HorizontalBox_Players_Axis;                                 // 0x0270   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0278   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0280   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0288   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x0290   (0x0008)  
	class UImage*                                      Image3;                                                     // 0x0298   (0x0008)  
	class UImage*                                      Image4;                                                     // 0x02A0   (0x0008)  
	class UImage*                                      Image5;                                                     // 0x02A8   (0x0008)  
	class UImage*                                      Image6;                                                     // 0x02B0   (0x0008)  
	class UImage*                                      Image7;                                                     // 0x02B8   (0x0008)  
	class UImage*                                      Image8;                                                     // 0x02C0   (0x0008)  
	class UImage*                                      Image9;                                                     // 0x02C8   (0x0008)  
	class UImage*                                      Image10;                                                    // 0x02D0   (0x0008)  
	class UImage*                                      Image11;                                                    // 0x02D8   (0x0008)  
	class UImage*                                      Image12;                                                    // 0x02E0   (0x0008)  
	class UImage*                                      Image13;                                                    // 0x02E8   (0x0008)  
	class UImage*                                      Image14;                                                    // 0x02F0   (0x0008)  
	class UImage*                                      Image15;                                                    // 0x02F8   (0x0008)  
	class UImage*                                      Image16;                                                    // 0x0300   (0x0008)  
	class UImage*                                      Image17;                                                    // 0x0308   (0x0008)  
	class UImage*                                      Image18;                                                    // 0x0310   (0x0008)  
	class UImage*                                      Image19;                                                    // 0x0318   (0x0008)  
	class UImage*                                      Image20;                                                    // 0x0320   (0x0008)  
	class UImage*                                      Image21;                                                    // 0x0328   (0x0008)  
	class UImage*                                      Image22;                                                    // 0x0330   (0x0008)  
	int32_t                                            LastActivePlayerCount;                                      // 0x0338   (0x0004)  
	int32_t                                            NewPlayerCount;                                             // 0x033C   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_EliminationHUD.W_EliminationHUD_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EliminationHUD.W_EliminationHUD_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EliminationHUD.W_EliminationHUD_C.ExecuteUbergraph_W_EliminationHUD
	// void ExecuteUbergraph_W_EliminationHUD(int32_t EntryPoint);                                                              // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_DynamicCrosshair.W_DynamicCrosshair_C
/// Size: 0x02C1 (705 bytes) (0x000260 - 0x0002C1) align 8 MaxSize: 0x02C1
class UW_DynamicCrosshair_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            Hit;                                                        // 0x0268   (0x0008)  
	class UWidgetAnimation*                            Appear;                                                     // 0x0270   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0278   (0x0008)  
	class UImage*                                      Image_bottom;                                               // 0x0280   (0x0008)  
	class UImage*                                      Image_centerdot;                                            // 0x0288   (0x0008)  
	class UImage*                                      Image_Hit;                                                  // 0x0290   (0x0008)  
	class UImage*                                      Image_left;                                                 // 0x0298   (0x0008)  
	class UImage*                                      Image_right;                                                // 0x02A0   (0x0008)  
	class UImage*                                      Image_top;                                                  // 0x02A8   (0x0008)  
	float                                              CrosshairPrecision;                                         // 0x02B0   (0x0004)  
	TEnumAsByte<E_CrosshairTypes>                      CrosshairType;                                              // 0x02B4   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02B5   (0x0003)  MISSED
	class UMaterialInstanceDynamic*                    MIDCrosshair;                                               // 0x02B8   (0x0008)  
	bool                                               ShowCrosshair;                                              // 0x02C0   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_DynamicCrosshair.W_DynamicCrosshair_C.ShowCrossLines
	// ESlateVisibility ShowCrossLines();                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_DynamicCrosshair.W_DynamicCrosshair_C.SetCrosshairColor
	// FLinearColor SetCrosshairColor();                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_DynamicCrosshair.W_DynamicCrosshair_C.ShowCenterDot
	// ESlateVisibility ShowCenterDot();                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_DynamicCrosshair.W_DynamicCrosshair_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_DynamicCrosshair.W_DynamicCrosshair_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_DynamicCrosshair.W_DynamicCrosshair_C.ShowHitMarker
	// void ShowHitMarker();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_DynamicCrosshair.W_DynamicCrosshair_C.ExecuteUbergraph_W_DynamicCrosshair
	// void ExecuteUbergraph_W_DynamicCrosshair(int32_t EntryPoint);                                                            // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_DualRocketHUD.W_DualRocketHUD_C
/// Size: 0x02A8 (680 bytes) (0x000260 - 0x0002A8) align 8 MaxSize: 0x02A8
class UW_DualRocketHUD_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0270   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0278   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x0280   (0x0008)  
	class UProgressBar*                                ProgressBar;                                                // 0x0288   (0x0008)  
	class UProgressBar*                                ProgressBar3;                                               // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0298   (0x0008)  
	class UTextBlock*                                  TextBlock4;                                                 // 0x02A0   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_DualRocketHUD.W_DualRocketHUD_C.GetAxisTimerPercentage
	// float GetAxisTimerPercentage();                                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_DualRocketHUD.W_DualRocketHUD_C.GetAlliedTimerPercentage
	// float GetAlliedTimerPercentage();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_DualRocketHUD.W_DualRocketHUD_C.GetAxisTime
	// FText GetAxisTime();                                                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_DualRocketHUD.W_DualRocketHUD_C.GetAlliedTime
	// FText GetAlliedTime();                                                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_DualRocketHUD.W_DualRocketHUD_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_DualRocketHUD.W_DualRocketHUD_C.ExecuteUbergraph_W_DualRocketHUD
	// void ExecuteUbergraph_W_DualRocketHUD(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_DeathScreen.W_DeathScreen_C
/// Size: 0x0268 (616 bytes) (0x000260 - 0x000268) align 8 MaxSize: 0x0268
class UW_DeathScreen_C : public UUserWidget
{ 
public:
	class UImage*                                      Image;                                                      // 0x0260   (0x0008)  
};

/// Class /Game/Widgets/W_ConquestHUD.W_ConquestHUD_C
/// Size: 0x02A0 (672 bytes) (0x000260 - 0x0002A0) align 8 MaxSize: 0x02A0
class UW_ConquestHUD_C : public UUserWidget
{ 
public:
	class UImage*                                      Image;                                                      // 0x0260   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0268   (0x0008)  
	class UProgressBar*                                ProgressBar;                                                // 0x0270   (0x0008)  
	class UProgressBar*                                ProgressBar1;                                               // 0x0278   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock2;                                                 // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock3;                                                 // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock4;                                                 // 0x0298   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_ConquestHUD.W_ConquestHUD_C.GetAxisTicketPercentage
	// float GetAxisTicketPercentage();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ConquestHUD.W_ConquestHUD_C.GetAlliedTicketPercentage
	// float GetAlliedTicketPercentage();                                                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ConquestHUD.W_ConquestHUD_C.GetAxisTicketCount
	// FText GetAxisTicketCount();                                                                                              // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ConquestHUD.W_ConquestHUD_C.GetAlliedTicketCount
	// FText GetAlliedTicketCount();                                                                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ConquestHUD.W_ConquestHUD_C.GetAxisFlagCount
	// FText GetAxisFlagCount();                                                                                                // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ConquestHUD.W_ConquestHUD_C.GetAlliedFlagCount
	// FText GetAlliedFlagCount();                                                                                              // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Widgets/W_CaptureAndHoldHUD.W_CaptureAndHoldHUD_C
/// Size: 0x02A0 (672 bytes) (0x000260 - 0x0002A0) align 8 MaxSize: 0x02A0
class UW_CaptureAndHoldHUD_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0268   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0270   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0278   (0x0008)  
	class UProgressBar*                                ProgressBar;                                                // 0x0280   (0x0008)  
	class UProgressBar*                                ProgressBar2;                                               // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock3;                                                 // 0x0298   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_CaptureAndHoldHUD.W_CaptureAndHoldHUD_C.GetAxisTimerPercentage
	// float GetAxisTimerPercentage();                                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CaptureAndHoldHUD.W_CaptureAndHoldHUD_C.GetAlliedTimerPercentage
	// float GetAlliedTimerPercentage();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CaptureAndHoldHUD.W_CaptureAndHoldHUD_C.GetAxisTime
	// FText GetAxisTime();                                                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CaptureAndHoldHUD.W_CaptureAndHoldHUD_C.GetAlliedTime
	// FText GetAlliedTime();                                                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CaptureAndHoldHUD.W_CaptureAndHoldHUD_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_CaptureAndHoldHUD.W_CaptureAndHoldHUD_C.ExecuteUbergraph_W_CaptureAndHoldHUD
	// void ExecuteUbergraph_W_CaptureAndHoldHUD(int32_t EntryPoint);                                                           // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_ActiveSkill.W_ActiveSkill_C
/// Size: 0x0315 (789 bytes) (0x000260 - 0x000315) align 8 MaxSize: 0x0315
class UW_ActiveSkill_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            SkillActivate;                                              // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	class UProgressBar*                                ProgressBar;                                                // 0x0278   (0x0008)  
	class UVerticalBox*                                VerticalBox_ActiveSkill;                                    // 0x0280   (0x0008)  
	FSlateBrush                                        SkillIcon;                                                  // 0x0288   (0x0088)  
	float                                              Progress;                                                   // 0x0310   (0x0004)  
	bool                                               ShowInHUD;                                                  // 0x0314   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_ActiveSkill.W_ActiveSkill_C.ShowProgressBar
	// ESlateVisibility ShowProgressBar();                                                                                      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ActiveSkill.W_ActiveSkill_C.SetVisbility
	// ESlateVisibility SetVisbility();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ActiveSkill.W_ActiveSkill_C.SetProgress
	// float SetProgress();                                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ActiveSkill.W_ActiveSkill_C.SetIcon
	// FSlateBrush SetIcon();                                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_ActiveSkill.W_ActiveSkill_C.Activated
	// void Activated();                                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ActiveSkill.W_ActiveSkill_C.Reset
	// void Reset();                                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_ActiveSkill.W_ActiveSkill_C.ExecuteUbergraph_W_ActiveSkill
	// void ExecuteUbergraph_W_ActiveSkill(int32_t EntryPoint);                                                                 // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_Actionbar.W_Actionbar_C
/// Size: 0x0290 (656 bytes) (0x000260 - 0x000290) align 8 MaxSize: 0x0290
class UW_Actionbar_C : public UUserWidget
{ 
public:
	class UW_ActionbarSlot_C*                          W_ActionbarSlot;                                            // 0x0260   (0x0008)  
	class UW_ActionbarSlot_C*                          W_ActionbarSlot0;                                           // 0x0268   (0x0008)  
	class UW_ActionbarSlot_C*                          W_ActionbarSlot1;                                           // 0x0270   (0x0008)  
	class UW_ActionbarSlot_C*                          W_ActionbarWeaponSlot;                                      // 0x0278   (0x0008)  
	class UW_ActionbarSlot_C*                          W_ActionbarWeaponSlot2;                                     // 0x0280   (0x0008)  
	class UW_ActionbarSlot_C*                          W_ActionbarWeaponSlot3;                                     // 0x0288   (0x0008)  
};

/// Class /Game/Widgets/M_MotorBikeHUD.M_MotorBikeHUD_C
/// Size: 0x0268 (616 bytes) (0x000260 - 0x000268) align 8 MaxSize: 0x0268
class UM_MotorBikeHUD_C : public UUserWidget
{ 
public:
	class UW_VehicleBaseUI_C*                          W_VehicleHP;                                                // 0x0260   (0x0008)  
};

/// Class /Game/Widgets/M_AAHUD.M_AAHUD_C
/// Size: 0x0268 (616 bytes) (0x000260 - 0x000268) align 8 MaxSize: 0x0268
class UM_AAHUD_C : public UUserWidget
{ 
public:
	class UW_VehicleBaseUI_C*                          W_VehicleHP;                                                // 0x0260   (0x0008)  
};

/// Class /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C
/// Size: 0x0386 (902 bytes) (0x000260 - 0x000386) align 8 MaxSize: 0x0386
class UW_SpawnSelect_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            SpacebarAnim;                                               // 0x0268   (0x0008)  
	class UWidgetAnimation*                            Swap;                                                       // 0x0270   (0x0008)  
	class UWidgetAnimation*                            DropDown;                                                   // 0x0278   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0280   (0x0008)  
	class UButton*                                     Button_Commando;                                            // 0x0288   (0x0008)  
	class UButton*                                     Button_Gunner;                                              // 0x0290   (0x0008)  
	class UButton*                                     Button_Soldier;                                             // 0x0298   (0x0008)  
	class UImage*                                      Image;                                                      // 0x02A0   (0x0008)  
	class UImage*                                      Image_CommandoIcon;                                         // 0x02A8   (0x0008)  
	class UImage*                                      Image_GunnerIcon;                                           // 0x02B0   (0x0008)  
	class UImage*                                      Image_SoldierIcon;                                          // 0x02B8   (0x0008)  
	class UImage*                                      Image_TeamColorBackgroundFade;                              // 0x02C0   (0x0008)  
	class UImage*                                      Image_TeamFlag;                                             // 0x02C8   (0x0008)  
	class USizeBox*                                    SizeBox;                                                    // 0x02D0   (0x0008)  
	class USizeBox*                                    SizeBox_Commando;                                           // 0x02D8   (0x0008)  
	class USizeBox*                                    SizeBox_CommandoOverlay;                                    // 0x02E0   (0x0008)  
	class USizeBox*                                    SizeBox_Gunner;                                             // 0x02E8   (0x0008)  
	class USizeBox*                                    SizeBox_GunnerOverlay;                                      // 0x02F0   (0x0008)  
	class USizeBox*                                    SizeBox_Soldier;                                            // 0x02F8   (0x0008)  
	class USizeBox*                                    SizeBox_SoldierOverlay;                                     // 0x0300   (0x0008)  
	class UTextBlock*                                  TextBlock_ClassInfo;                                        // 0x0308   (0x0008)  
	class UTextBlock*                                  TextBlock_ClassName;                                        // 0x0310   (0x0008)  
	class UW_Button_C*                                 W_Button_C;                                                 // 0x0318   (0x0008)  
	class UW_Button_C*                                 W_Button_ChangeTeam;                                        // 0x0320   (0x0008)  
	class UW_Button_C*                                 W_Button_Spawn;                                             // 0x0328   (0x0008)  
	class UW_SelectionDropDown_C*                      W_SelectionDropDown_CoreWeapon;                             // 0x0330   (0x0008)  
	class UW_SelectionDropDown_C*                      W_SelectionDropDown_Explosive;                              // 0x0338   (0x0008)  
	class UW_SelectionDropDown_C*                      W_SelectionDropDown_Skill1;                                 // 0x0340   (0x0008)  
	class UW_SelectionDropDown_C*                      W_SelectionDropDown_Skill2;                                 // 0x0348   (0x0008)  
	class UW_SelectionDropDown_C*                      W_SelectionDropDown_Weapon1;                                // 0x0350   (0x0008)  
	class UW_SelectionDropDown_C*                      W_SelectionDropDown_Weapon2;                                // 0x0358   (0x0008)  
	TEnumAsByte<E_Units>                               SelectedClass;                                              // 0x0360   (0x0001)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x0361   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0362   (0x0002)  MISSED
	float                                              DropdownHoverDetectionRange;                                // 0x0364   (0x0004)  
	float                                              SpawnTimer;                                                 // 0x0368   (0x0004)  
	bool                                               CanSpawn;                                                   // 0x036C   (0x0001)  
	bool                                               Initialized;                                                // 0x036D   (0x0001)  
	bool                                               LoadoutMenuOpen;                                            // 0x036E   (0x0001)  
	bool                                               CommandoHovered;                                            // 0x036F   (0x0001)  
	bool                                               GunnerHovered;                                              // 0x0370   (0x0001)  
	bool                                               SoldierHovered;                                             // 0x0371   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x0372   (0x0002)  MISSED
	FLinearColor                                       LoadoutBgColor;                                             // 0x0374   (0x0010)  
	TEnumAsByte<E_Selectables>                         PreSwapSelectable;                                          // 0x0384   (0x0001)  
	bool                                               AllowTeamChange;                                            // 0x0385   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.GetClosestSpawnPointToCenter
	// void GetClosestSpawnPointToCenter(TArray<UW_SpawnSelectPoint_C*>& SpawnPoints, class UW_SpawnSelectPoint_C*& ClosestPoint); // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.EnableChangeTeamButton
	// bool EnableChangeTeamButton();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.SwapMainWeapons
	// void SwapMainWeapons();                                                                                                  // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.SetLoadoutBgColor
	// FLinearColor SetLoadoutBgColor();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.SetVignetteColor
	// FLinearColor SetVignetteColor();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.InitDropdownButton
	// void InitDropdownButton(int32_t ItemIndex, class UDataTable* DT, class UW_SelectionDropDown_C* DropDownButton, TEnumAsByte<E_Selectables> Selectable, bool FetchSkullWeaponListingFromSelection); // [0x1325ea0] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.GetWeaponsToList
	// void GetWeaponsToList(TEnumAsByte<E_Teams> Team, TEnumAsByte<E_Units> Class, int32_t SelectedItem, TArray<FST_DropDownItem>& Items); // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.SetFlag
	// FSlateBrush SetFlag();                                                                                                   // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.LoadGunner
	// void LoadGunner();                                                                                                       // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.LoadCommando
	// void LoadCommando();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.InitSpawnSelect
	// void InitSpawnSelect();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.LoadSoldier
	// void LoadSoldier();                                                                                                      // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_W_Button_C_K2Node_ComponentBoundEvent_4_ButtonPressed__DelegateSignature
	// void BndEvt__W_SpawnSelect_W_Button_C_K2Node_ComponentBoundEvent_4_ButtonPressed__DelegateSignature();                   // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.CloseItemLists
	// void CloseItemLists();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_W_Button_C_3_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature
	// void BndEvt__W_SpawnSelect_W_Button_C_3_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.OpenLoadoutMenu
	// void OpenLoadoutMenu();                                                                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.CloseLoadoutMenu
	// void CloseLoadoutMenu();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_Button_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_SpawnSelect_Button_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();                // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_Button_0_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_SpawnSelect_Button_0_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_Button_1_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_SpawnSelect_Button_1_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();              // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_Button_Commando_K2Node_ComponentBoundEvent_8_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_SpawnSelect_Button_Commando_K2Node_ComponentBoundEvent_8_OnButtonHoverEvent__DelegateSignature();         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_Button_Commando_K2Node_ComponentBoundEvent_9_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_SpawnSelect_Button_Commando_K2Node_ComponentBoundEvent_9_OnButtonHoverEvent__DelegateSignature();         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_Button_Gunner_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_SpawnSelect_Button_Gunner_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature();          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_Button_Gunner_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_SpawnSelect_Button_Gunner_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature();          // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_Button_Soldier_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_SpawnSelect_Button_Soldier_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature();         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_Button_Soldier_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_SpawnSelect_Button_Soldier_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature();         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.InitClassToolTip
	// void InitClassToolTip();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.Spawn
	// void Spawn();                                                                                                            // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.ClassSwapAnimation
	// void ClassSwapAnimation();                                                                                               // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.BndEvt__W_SpawnSelect_W_Button_C_0_K2Node_ComponentBoundEvent_5_ButtonPressed__DelegateSignature
	// void BndEvt__W_SpawnSelect_W_Button_C_0_K2Node_ComponentBoundEvent_5_ButtonPressed__DelegateSignature();                 // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelect.W_SpawnSelect_C.ExecuteUbergraph_W_SpawnSelect
	// void ExecuteUbergraph_W_SpawnSelect(int32_t EntryPoint);                                                                 // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C
/// Size: 0x02C3 (707 bytes) (0x000260 - 0x0002C3) align 8 MaxSize: 0x02C3
class UW_SpawnSelectPoint_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            NewAnimation;                                               // 0x0268   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0270   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0278   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0280   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0288   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock1;                                                 // 0x0298   (0x0008)  
	FText                                              SpawnPointName;                                             // 0x02A0   (0x0018)  
	class ABP_SpawnableBase_C*                         SpawnableRef;                                               // 0x02B8   (0x0008)  
	bool                                               Selected;                                                   // 0x02C0   (0x0001)  
	bool                                               Hovered;                                                    // 0x02C1   (0x0001)  
	bool                                               Contested;                                                  // 0x02C2   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C.ShowContested
	// ESlateVisibility ShowContested();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C.EnableSpawnButton
	// bool EnableSpawnButton();                                                                                                // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C.ShowWidget
	// ESlateVisibility ShowWidget();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C.BndEvt__W_SpawnSelectFlag_Button_44_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_SpawnSelectFlag_Button_44_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C.BndEvt__W_SpawnSelectFlag_Button_44_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
	// void BndEvt__W_SpawnSelectFlag_Button_44_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();           // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C.UnSelect
	// void UnSelect();                                                                                                         // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C.Select
	// void Select();                                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C.BndEvt__W_SpawnSelectFlag_Button_44_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature
	// void BndEvt__W_SpawnSelectFlag_Button_44_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature();         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_SpawnSelectPoint.W_SpawnSelectPoint_C.ExecuteUbergraph_W_SpawnSelectPoint
	// void ExecuteUbergraph_W_SpawnSelectPoint(int32_t EntryPoint);                                                            // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_Notification.W_Notification_C
/// Size: 0x02B8 (696 bytes) (0x000260 - 0x0002B8) align 8 MaxSize: 0x02B8
class UW_Notification_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            PopupAnimation;                                             // 0x0268   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0270   (0x0008)  
	class UTextBlock*                                  TextBlock_Message;                                          // 0x0278   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x0280   (0x0008)  
	FText                                              NotificationMessage;                                        // 0x0288   (0x0018)  
	class UTexture2D*                                  NotificationIcon;                                           // 0x02A0   (0x0008)  
	FLinearColor                                       Color;                                                      // 0x02A8   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_Notification.W_Notification_C.SetBgColor
	// FLinearColor SetBgColor();                                                                                               // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_Notification.W_Notification_C.ShowNotification
	// ESlateVisibility ShowNotification();                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_Notification.W_Notification_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_Notification.W_Notification_C.ExecuteUbergraph_W_Notification
	// void ExecuteUbergraph_W_Notification(int32_t EntryPoint);                                                                // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_LoadingScreen.W_LoadingScreen_C
/// Size: 0x0328 (808 bytes) (0x000260 - 0x000328) align 8 MaxSize: 0x0328
class UW_LoadingScreen_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            Init;                                                       // 0x0268   (0x0008)  
	class UCircularThrobber*                           CircularThrobber;                                           // 0x0270   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0278   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0280   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0288   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x0290   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0298   (0x0008)  
	class UTextBlock*                                  TextBlock3;                                                 // 0x02A0   (0x0008)  
	class UTextBlock*                                  TextBlock4;                                                 // 0x02A8   (0x0008)  
	class UTextBlock*                                  TextBlock5;                                                 // 0x02B0   (0x0008)  
	FText                                              Loading_Text;                                               // 0x02B8   (0x0018)  
	FText                                              MapName;                                                    // 0x02D0   (0x0018)  
	FText                                              ServerName;                                                 // 0x02E8   (0x0018)  
	SDK_UNDEFINED(16,654) /* FMulticastInlineDelegate */ __um(FakeLoadingComplete);                                // 0x0300   (0x0010)  
	class UAudioComponent*                             Music;                                                      // 0x0310   (0x0008)  
	TArray<FText>                                      RandomTips;                                                 // 0x0318   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_LoadingScreen.W_LoadingScreen_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_LoadingScreen.W_LoadingScreen_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_LoadingScreen.W_LoadingScreen_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_LoadingScreen.W_LoadingScreen_C.Destruct
	// void Destruct();                                                                                                         // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_LoadingScreen.W_LoadingScreen_C.ExecuteUbergraph_W_LoadingScreen
	// void ExecuteUbergraph_W_LoadingScreen(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
	// Function /Game/Widgets/W_LoadingScreen.W_LoadingScreen_C.FakeLoadingComplete__DelegateSignature
	// void FakeLoadingComplete__DelegateSignature();                                                                           // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_HUD.W_HUD_C
/// Size: 0x07FC (2044 bytes) (0x000260 - 0x0007FC) align 8 MaxSize: 0x07FC
class UW_HUD_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            SniperShot;                                                 // 0x0268   (0x0008)  
	class UWidgetAnimation*                            SkillEnding;                                                // 0x0270   (0x0008)  
	class UWidgetAnimation*                            LowHealth;                                                  // 0x0278   (0x0008)  
	class UWidgetAnimation*                            Hit;                                                        // 0x0280   (0x0008)  
	class UWidgetAnimation*                            WeaponSwap;                                                 // 0x0288   (0x0008)  
	class UWidgetAnimation*                            DamageDirectionIndicator;                                   // 0x0290   (0x0008)  
	class UWidgetAnimation*                            Skill2Ready;                                                // 0x0298   (0x0008)  
	class UWidgetAnimation*                            Skill1Ready;                                                // 0x02A0   (0x0008)  
	class UWidgetAnimation*                            Killed;                                                     // 0x02A8   (0x0008)  
	class UWidgetAnimation*                            ScopeFocus;                                                 // 0x02B0   (0x0008)  
	class UWidgetAnimation*                            CrosshairAnimation;                                         // 0x02B8   (0x0008)  
	class UWidgetAnimation*                            FInteract;                                                  // 0x02C0   (0x0008)  
	class UWidgetAnimation*                            DamageRecieved;                                             // 0x02C8   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x02D0   (0x0008)  
	class UBorder*                                     Border0;                                                    // 0x02D8   (0x0008)  
	class UBorder*                                     Border1;                                                    // 0x02E0   (0x0008)  
	class UBorder*                                     Border2;                                                    // 0x02E8   (0x0008)  
	class UBorder*                                     Border3;                                                    // 0x02F0   (0x0008)  
	class UBorder*                                     Border4;                                                    // 0x02F8   (0x0008)  
	class UBorder*                                     Border5;                                                    // 0x0300   (0x0008)  
	class UBorder*                                     Border6;                                                    // 0x0308   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0310   (0x0008)  
	class UCanvasPanel*                                CanvasPanel_Crosshair;                                      // 0x0318   (0x0008)  
	class UCanvasPanel*                                CanvasPanel_DeathScreen;                                    // 0x0320   (0x0008)  
	class UCanvasPanel*                                CanvasPanel_Health;                                         // 0x0328   (0x0008)  
	class UCanvasPanel*                                CanvasPanel_SniperScope;                                    // 0x0330   (0x0008)  
	class UHorizontalBox*                              HorizontalBox;                                              // 0x0338   (0x0008)  
	class UHorizontalBox*                              HorizontalBox7;                                             // 0x0340   (0x0008)  
	class UHorizontalBox*                              HorizontalBox_ActiveSkills;                                 // 0x0348   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0350   (0x0008)  
	class UImage*                                      Image8;                                                     // 0x0358   (0x0008)  
	class UImage*                                      Image9;                                                     // 0x0360   (0x0008)  
	class UImage*                                      Image10;                                                    // 0x0368   (0x0008)  
	class UImage*                                      Image11;                                                    // 0x0370   (0x0008)  
	class UImage*                                      Image12;                                                    // 0x0378   (0x0008)  
	class UImage*                                      Image13;                                                    // 0x0380   (0x0008)  
	class UImage*                                      Image14;                                                    // 0x0388   (0x0008)  
	class UImage*                                      Image15;                                                    // 0x0390   (0x0008)  
	class UImage*                                      Image16;                                                    // 0x0398   (0x0008)  
	class UImage*                                      Image17;                                                    // 0x03A0   (0x0008)  
	class UImage*                                      Image_Burning;                                              // 0x03A8   (0x0008)  
	class UImage*                                      Image_ClassicCrosshair;                                     // 0x03B0   (0x0008)  
	class UImage*                                      Image_CoreWeapon;                                           // 0x03B8   (0x0008)  
	class UImage*                                      Image_Crosshair;                                            // 0x03C0   (0x0008)  
	class UImage*                                      Image_Crosshair_Aim;                                        // 0x03C8   (0x0008)  
	class UImage*                                      Image_Crosshair_Hit;                                        // 0x03D0   (0x0008)  
	class UImage*                                      Image_DamageBlood;                                          // 0x03D8   (0x0008)  
	class UImage*                                      Image_DamageIndicator;                                      // 0x03E0   (0x0008)  
	class UImage*                                      Image_Explosive;                                            // 0x03E8   (0x0008)  
	class UImage*                                      Image_Hit;                                                  // 0x03F0   (0x0008)  
	class UImage*                                      Image_Poison;                                               // 0x03F8   (0x0008)  
	class UImage*                                      Image_ReloadBar;                                            // 0x0400   (0x0008)  
	class UImage*                                      Image_Scope;                                                // 0x0408   (0x0008)  
	class UImage*                                      Image_Skill1;                                               // 0x0410   (0x0008)  
	class UImage*                                      Image_Skill118;                                             // 0x0418   (0x0008)  
	class UImage*                                      Image_Skill119;                                             // 0x0420   (0x0008)  
	class UImage*                                      Image_Skill1ReadyIcon;                                      // 0x0428   (0x0008)  
	class UImage*                                      Image_Skill2;                                               // 0x0430   (0x0008)  
	class UImage*                                      Image_Skill2ReadyIcon;                                      // 0x0438   (0x0008)  
	class UImage*                                      Image_TankLookIndicator;                                    // 0x0440   (0x0008)  
	class UImage*                                      Image_Weapon1;                                              // 0x0448   (0x0008)  
	class UImage*                                      Image_Weapon2;                                              // 0x0450   (0x0008)  
	class UImage*                                      Img_SubCrosshairBar;                                        // 0x0458   (0x0008)  
	class UImage*                                      Img_SubcrosshairBarFill;                                    // 0x0460   (0x0008)  
	class UM_AAHUD_C*                                  M_AAHUD;                                                    // 0x0468   (0x0008)  
	class UM_MotorBikeHUD_C*                           M_MotorBikeHUD;                                             // 0x0470   (0x0008)  
	class UProgressBar*                                ProgressBar;                                                // 0x0478   (0x0008)  
	class UProgressBar*                                ProgressBar20;                                              // 0x0480   (0x0008)  
	class UProgressBar*                                ProgressBar_Ammo;                                           // 0x0488   (0x0008)  
	class UProgressBar*                                ProgressBar_Explosive;                                      // 0x0490   (0x0008)  
	class UProgressBar*                                ProgressBar_Skill1;                                         // 0x0498   (0x0008)  
	class UProgressBar*                                ProgressBar_Skill2;                                         // 0x04A0   (0x0008)  
	class UProgressBar*                                ProgressBar_Weapon1;                                        // 0x04A8   (0x0008)  
	class UProgressBar*                                ProgressBar_Weapon121;                                      // 0x04B0   (0x0008)  
	class UProgressBar*                                ProgressBar_Weapon2;                                        // 0x04B8   (0x0008)  
	class UScaleBox*                                   ScaleBox;                                                   // 0x04C0   (0x0008)  
	class UTextBlock*                                  Text_Playername;                                            // 0x04C8   (0x0008)  
	class UTextBlock*                                  Text_SteamID;                                               // 0x04D0   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x04D8   (0x0008)  
	class UTextBlock*                                  TextBlock22;                                                // 0x04E0   (0x0008)  
	class UTextBlock*                                  TextBlock23;                                                // 0x04E8   (0x0008)  
	class UTextBlock*                                  TextBlock24;                                                // 0x04F0   (0x0008)  
	class UTextBlock*                                  TextBlock25;                                                // 0x04F8   (0x0008)  
	class UTextBlock*                                  TextBlock26;                                                // 0x0500   (0x0008)  
	class UTextBlock*                                  TextBlock27;                                                // 0x0508   (0x0008)  
	class UTextBlock*                                  TextBlock28;                                                // 0x0510   (0x0008)  
	class UTextBlock*                                  TextBlock29;                                                // 0x0518   (0x0008)  
	class UTextBlock*                                  TextBlock30;                                                // 0x0520   (0x0008)  
	class UTextBlock*                                  TextBlock_ActionSlot0_CoreWeapon;                           // 0x0528   (0x0008)  
	class UTextBlock*                                  TextBlock_ActionSlot1Key;                                   // 0x0530   (0x0008)  
	class UTextBlock*                                  TextBlock_ActionSlot2Key;                                   // 0x0538   (0x0008)  
	class UTextBlock*                                  TextBlock_ActionSlot3Key;                                   // 0x0540   (0x0008)  
	class UTextBlock*                                  TextBlock_Ammo;                                             // 0x0548   (0x0008)  
	class UTextBlock*                                  TextBlock_Ammo31;                                           // 0x0550   (0x0008)  
	class UTextBlock*                                  TextBlock_Skill1Key;                                        // 0x0558   (0x0008)  
	class UTextBlock*                                  TextBlock_Skill2Key;                                        // 0x0560   (0x0008)  
	class UVerticalBox*                                VerticalBox_Kills;                                          // 0x0568   (0x0008)  
	class UW_Actionbar_C*                              W_Actionbar;                                                // 0x0570   (0x0008)  
	class UW_ActiveSkill_C*                            W_ActiveSkill;                                              // 0x0578   (0x0008)  
	class UW_ActiveSkill_C*                            W_ActiveSkill32;                                            // 0x0580   (0x0008)  
	class UW_ConquestHUD_C*                            W_ConquestHUD;                                              // 0x0588   (0x0008)  
	class UW_DeathScreen_C*                            W_DeathScreen;                                              // 0x0590   (0x0008)  
	class UW_DualRocketHUD_C*                          W_DualRocket;                                               // 0x0598   (0x0008)  
	class UW_DynamicCrosshair_C*                       W_DynamicCrosshair;                                         // 0x05A0   (0x0008)  
	class UW_EliminationHUD_C*                         W_EliminationHUD;                                           // 0x05A8   (0x0008)  
	class UW_HeroProgressWidget_C*                     W_HeroProgressWidget;                                       // 0x05B0   (0x0008)  
	class UW_PlaneHUD_C*                               W_PlaneHUD;                                                 // 0x05B8   (0x0008)  
	class UW_CaptureAndHoldHUD_C*                      W_RocketHUD;                                                // 0x05C0   (0x0008)  
	class UW_SpecialActionStack_C*                     W_SpecialActionStack;                                       // 0x05C8   (0x0008)  
	class UW_TankHUD_C*                                W_TankHUD;                                                  // 0x05D0   (0x0008)  
	class UW_VotekickVotePopup_C*                      W_VotekickVotePopup;                                        // 0x05D8   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_CoreWeapon;                                  // 0x05E0   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Explosive;                                   // 0x05E8   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_GameModeHUD;                                 // 0x05F0   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Skill1;                                      // 0x05F8   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Skill2;                                      // 0x0600   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Weapon1;                                     // 0x0608   (0x0008)  
	class UWidgetSwitcher*                             WidgetSwitcher_Weapon2;                                     // 0x0610   (0x0008)  
	class ABP_Character_C*                             CharacterRef;                                               // 0x0618   (0x0008)  
	class UMaterialInstanceDynamic*                    ReloadbarMaterial;                                          // 0x0620   (0x0008)  
	bool                                               IsReloading;                                                // 0x0628   (0x0001)  
	bool                                               bShowScope;                                                 // 0x0629   (0x0001)  
	bool                                               IsUsingScopedWeapon;                                        // 0x062A   (0x0001)  
	bool                                               IsDead;                                                     // 0x062B   (0x0001)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x062C   (0x0004)  MISSED
	class APawn*                                       CurrentlyControlledPawn;                                    // 0x0630   (0x0008)  
	class ABP_VehicleBase_C*                           LastControlledVehicle;                                      // 0x0638   (0x0008)  
	float                                              BurningOpacity;                                             // 0x0640   (0x0004)  
	float                                              PoisonOpacity;                                              // 0x0644   (0x0004)  
	float                                              DeltaT;                                                     // 0x0648   (0x0004)  
	FVector                                            TankCrosshairLocation;                                      // 0x064C   (0x000C)  
	int32_t                                            CurrentHealthAmount;                                        // 0x0658   (0x0004)  
	int32_t                                            CurrentAmmoAmount;                                          // 0x065C   (0x0004)  
	bool                                               EnlargeCrosshairFromFiring;                                 // 0x0660   (0x0001)  
	bool                                               CanOnlyUseWhileAiming_CurrentWeapon_;                       // 0x0661   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x0662   (0x0002)  MISSED
	FVector                                            LastAttackerLocation;                                       // 0x0664   (0x000C)  
	FST_Selectable                                     CurrentEquipedItem;                                         // 0x0670   (0x0176)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x07E6   (0x0002)  MISSED
	float                                              CharacterHealthPercentage;                                  // 0x07E8   (0x0004)  
	bool                                               HideCrosshairInHip;                                         // 0x07EC   (0x0001)  
	bool                                               CharacterIsAiming;                                          // 0x07ED   (0x0001)  
	bool                                               FrontCamActive;                                             // 0x07EE   (0x0001)  
	bool                                               Repairing;                                                  // 0x07EF   (0x0001)  
	class UMaterialInstanceDynamic*                    SubCrosshairBarMaterial;                                    // 0x07F0   (0x0008)  
	float                                              SubCrosshairBarPercentage;                                  // 0x07F8   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetKillerSteamID
	// FText SetKillerSteamID();                                                                                                // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowAmmo
	// ESlateVisibility ShowAmmo();                                                                                             // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetCurrentAmmoColor
	// FSlateColor SetCurrentAmmoColor();                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.GetMaxAmmoAmount
	// FText GetMaxAmmoAmount();                                                                                                // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetKillerNameColor
	// FSlateColor SetKillerNameColor();                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetActiveSkillProgressColor
	// FLinearColor SetActiveSkillProgressColor();                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.GetVehicleSeatShowCrosshair
	// void GetVehicleSeatShowCrosshair(bool& HideCrosshair);                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowAAHUD
	// ESlateVisibility ShowAAHUD();                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowVoteKickPopup
	// ESlateVisibility ShowVoteKickPopup();                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.OutOfCombatText
	// FText OutOfCombatText();                                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowOutOfCombat
	// ESlateVisibility ShowOutOfCombat();                                                                                      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.HideHUDVisbilityBasic
	// ESlateVisibility HideHUDVisbilityBasic();                                                                                // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowSubCrosshairBar
	// ESlateVisibility ShowSubCrosshairBar();                                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetInteractionText
	// FText SetInteractionText();                                                                                              // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetHealthBarColor
	// FLinearColor SetHealthBarColor();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetHitmarkerColor
	// FLinearColor SetHitmarkerColor();                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetCrosshairColor
	// FLinearColor SetCrosshairColor();                                                                                        // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetScopeType
	// FSlateBrush SetScopeType();                                                                                              // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.GetPawnLocation
	// void GetPawnLocation(FVector& Location);                                                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetActiveWeaponName
	// FText SetActiveWeaponName();                                                                                             // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetActiveWeaponIcon
	// FSlateBrush SetActiveWeaponIcon();                                                                                       // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.GetCorsshairPrecision
	// float GetCorsshairPrecision();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetCoreWeaponIcon
	// FSlateBrush SetCoreWeaponIcon();                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowActionBarBorderCoreWeapon
	// FLinearColor ShowActionBarBorderCoreWeapon();                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowAllCrosshairUI
	// ESlateVisibility ShowAllCrosshairUI();                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.FormatKeybindText
	// FText FormatKeybindText(FText& InText);                                                                                  // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowActionBorder3
	// FLinearColor ShowActionBorder3();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowActionBorder2
	// FLinearColor ShowActionBorder2();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowActionBorder1
	// FLinearColor ShowActionBorder1();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowMatchTokenAmount
	// ESlateVisibility ShowMatchTokenAmount();                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetMatchTokenAmount
	// FText SetMatchTokenAmount();                                                                                             // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetEventTokenAmount
	// FText SetEventTokenAmount();                                                                                             // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowParachuteTooltip
	// ESlateVisibility ShowParachuteTooltip();                                                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetCrosshairHitStyle
	// FSlateBrush SetCrosshairHitStyle();                                                                                      // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowWrench
	// ESlateVisibility ShowWrench();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowSkill2Activity
	// ESlateVisibility ShowSkill2Activity();                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowSkill1Activity
	// ESlateVisibility ShowSkill1Activity();                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.GetCurrentAmmoAmount
	// FText GetCurrentAmmoAmount();                                                                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.GetHPAmount
	// FText GetHPAmount();                                                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetCrosshairStyle
	// FSlateBrush SetCrosshairStyle();                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowTankAimIndicator
	// ESlateVisibility ShowTankAimIndicator();                                                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowEntireHUD
	// ESlateVisibility ShowEntireHUD();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowActionbar
	// ESlateVisibility ShowActionbar();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowMotorBikeHUD
	// ESlateVisibility ShowMotorBikeHUD();                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowTankHUD
	// ESlateVisibility ShowTankHUD();                                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowPlaneHUD
	// ESlateVisibility ShowPlaneHUD();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowActionbarCrosses
	// ESlateVisibility ShowActionbarCrosses();                                                                                 // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.EnableActionbar
	// bool EnableActionbar();                                                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetExplosiveIcon
	// FSlateBrush SetExplosiveIcon();                                                                                          // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetWeapon2Icon
	// FSlateBrush SetWeapon2Icon();                                                                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetWeapon1Icon
	// FSlateBrush SetWeapon1Icon();                                                                                            // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.CoreWeaponCD
	// float CoreWeaponCD();                                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ExplosiveCD
	// float ExplosiveCD();                                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.Weapon2CD
	// float Weapon2CD();                                                                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.Weapon1CD
	// float Weapon1CD();                                                                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetKillerName
	// FText SetKillerName();                                                                                                   // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetSpeedBoostBorder
	// FLinearColor SetSpeedBoostBorder();                                                                                      // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetSkill2Border
	// FLinearColor SetSkill2Border();                                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetSkill1Border
	// FLinearColor SetSkill1Border();                                                                                          // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.Skill2CDPercentage
	// float Skill2CDPercentage();                                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.Skill1CDPercentage
	// float Skill1CDPercentage();                                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetSkill2
	// FSlateBrush SetSkill2();                                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetSkill1
	// FSlateBrush SetSkill1();                                                                                                 // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowDeadInfo
	// ESlateVisibility ShowDeadInfo();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowHUD
	// ESlateVisibility ShowHUD();                                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowScope
	// ESlateVisibility ShowScope();                                                                                            // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetReloading
	// void SetReloading(float ReloadPercentage, bool IsReloading);                                                             // [0x1325ea0] Public|BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowCharacterHUD
	// ESlateVisibility ShowCharacterHUD();                                                                                     // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowCrosshair
	// ESlateVisibility ShowCrosshair();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowReloadBar
	// ESlateVisibility ShowReloadBar();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.Get Ammo
	// float GetAmmo(int32_t& AmmoAmount, int32_t& MaxAmmo);                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.SetHP
	// float SetHP();                                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ShowInteractionText
	// ESlateVisibility ShowInteractionText();                                                                                  // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_HUD.W_HUD_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.OnEnemyKilled
	// void OnEnemyKilled(FText KilledEnemyName, bool IsAssistKill, bool CountAsKill);                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.PlayCrosshairAnimation
	// void PlayCrosshairAnimation();                                                                                           // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.FiredAWeapon
	// void FiredAWeapon();                                                                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.HitMarker
	// void HitMarker();                                                                                                        // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.Skill1IsReady
	// void Skill1IsReady();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.Skill2IsReady
	// void Skill2IsReady();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.DamageReceived
	// void DamageReceived(int32_t DamageAmount, FVector AttackerLocation);                                                     // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.WeaponSwapped
	// void WeaponSwapped();                                                                                                    // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.WeaponReloaded
	// void WeaponReloaded();                                                                                                   // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_HUD.W_HUD_C.ExecuteUbergraph_W_HUD
	// void ExecuteUbergraph_W_HUD(int32_t EntryPoint);                                                                         // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_BlackFadeInAndOut.W_BlackFadeInAndOut_C
/// Size: 0x0278 (632 bytes) (0x000260 - 0x000278) align 8 MaxSize: 0x0278
class UW_BlackFadeInAndOut_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            NewAnimation;                                               // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_BlackFadeInAndOut.W_BlackFadeInAndOut_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_BlackFadeInAndOut.W_BlackFadeInAndOut_C.ExecuteUbergraph_W_BlackFadeInAndOut
	// void ExecuteUbergraph_W_BlackFadeInAndOut(int32_t EntryPoint);                                                           // [0x1325ea0] Final                
};

/// Class /Game/Widgets/W_StatsSaving.W_StatsSaving_C
/// Size: 0x0278 (632 bytes) (0x000260 - 0x000278) align 8 MaxSize: 0x0278
class UW_StatsSaving_C : public UUserWidget
{ 
public:
	class UImage*                                      Image;                                                      // 0x0260   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0268   (0x0008)  
	class UThrobber*                                   Throbber;                                                   // 0x0270   (0x0008)  
};

/// Class /Game/Widgets/W_CheckBox.W_CheckBox_C
/// Size: 0x0289 (649 bytes) (0x000260 - 0x000289) align 8 MaxSize: 0x0289
class UW_CheckBox_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UCheckBox*                                   CheckBox;                                                   // 0x0268   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0270   (0x0008)  
	SDK_UNDEFINED(16,655) /* FMulticastInlineDelegate */ __um(StateChanged);                                       // 0x0278   (0x0010)  
	bool                                               IsChecked;                                                  // 0x0288   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_CheckBox.W_CheckBox_C.ShowCheckmark
	// ESlateVisibility ShowCheckmark();                                                                                        // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_CheckBox.W_CheckBox_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_CheckBox.W_CheckBox_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_CheckBox.W_CheckBox_C.BndEvt__W_CheckBox_CheckBox_57_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
	// void BndEvt__W_CheckBox_CheckBox_57_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked); // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_CheckBox.W_CheckBox_C.Refresh
	// void Refresh();                                                                                                          // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_CheckBox.W_CheckBox_C.ExecuteUbergraph_W_CheckBox
	// void ExecuteUbergraph_W_CheckBox(int32_t EntryPoint);                                                                    // [0x1325ea0] Final                
	// Function /Game/Widgets/W_CheckBox.W_CheckBox_C.StateChanged__DelegateSignature
	// void StateChanged__DelegateSignature(bool State);                                                                        // [0x1325ea0] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Widgets/W_GainedXPEntry.W_GainedXPEntry_C
/// Size: 0x0280 (640 bytes) (0x000260 - 0x000280) align 8 MaxSize: 0x0280
class UW_GainedXPEntry_C : public UUserWidget
{ 
public:
	class UImage*                                      Image;                                                      // 0x0260   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0268   (0x0008)  
	class UTextBlock*                                  TextBlock0;                                                 // 0x0270   (0x0008)  
	TEnumAsByte<E_Teams>                               Team;                                                       // 0x0278   (0x0001)  
	TEnumAsByte<E_Units>                               UnitType;                                                   // 0x0279   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x027A   (0x0002)  MISSED
	int32_t                                            GainedXPAmount;                                             // 0x027C   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_GainedXPEntry.W_GainedXPEntry_C.SetColor
	// FSlateColor SetColor();                                                                                                  // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_GainedXPEntry.W_GainedXPEntry_C.SetXPAmount
	// FText SetXPAmount();                                                                                                     // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_GainedXPEntry.W_GainedXPEntry_C.SetUnit
	// FText SetUnit();                                                                                                         // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_GainedXPEntry.W_GainedXPEntry_C.SetClassIcon
	// FSlateBrush SetClassIcon();                                                                                              // [0x1325ea0] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Widgets/W_EndGameMapVote.W_EndGameMapVote_C
/// Size: 0x02B0 (688 bytes) (0x000260 - 0x0002B0) align 8 MaxSize: 0x02B0
class UW_EndGameMapVote_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0268   (0x0008)  
	class UButton*                                     Button;                                                     // 0x0270   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0278   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0280   (0x0008)  
	class UTextBlock*                                  TextBlock0;                                                 // 0x0288   (0x0008)  
	class UW_CheckBox_C*                               W_CheckBox_C;                                               // 0x0290   (0x0008)  
	int32_t                                            Votes;                                                      // 0x0298   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x029C   (0x0004)  MISSED
	FString                                            MapName;                                                    // 0x02A0   (0x0010)  


	/// Functions
	// Function /Game/Widgets/W_EndGameMapVote.W_EndGameMapVote_C.SetBorderColor
	// FLinearColor SetBorderColor();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EndGameMapVote.W_EndGameMapVote_C.ShowVoters
	// ESlateVisibility ShowVoters();                                                                                           // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EndGameMapVote.W_EndGameMapVote_C.PreConstruct
	// void PreConstruct(bool IsDesignTime);                                                                                    // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EndGameMapVote.W_EndGameMapVote_C.RefreshVoteEntry
	// void RefreshVoteEntry();                                                                                                 // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_EndGameMapVote.W_EndGameMapVote_C.BndEvt__W_EndGameMapVote_Button_109_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
	// void BndEvt__W_EndGameMapVote_Button_109_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();         // [0x1325ea0] BlueprintEvent       
	// Function /Game/Widgets/W_EndGameMapVote.W_EndGameMapVote_C.ExecuteUbergraph_W_EndGameMapVote
	// void ExecuteUbergraph_W_EndGameMapVote(int32_t EntryPoint);                                                              // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_KillFeedEntry.W_KillFeedEntry_C
/// Size: 0x0359 (857 bytes) (0x000260 - 0x000359) align 8 MaxSize: 0x0359
class UW_KillFeedEntry_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            PopIn;                                                      // 0x0268   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x0270   (0x0008)  
	class UTextBlock*                                  TextBlock_Killer;                                           // 0x0278   (0x0008)  
	class UTextBlock*                                  TextBlock_Victim;                                           // 0x0280   (0x0008)  
	FST_PlayerStats                                    Killer;                                                     // 0x0288   (0x0068)  
	FST_PlayerStats                                    Victim;                                                     // 0x02F0   (0x0068)  
	TEnumAsByte<E_Teams>                               KillerTeam;                                                 // 0x0358   (0x0001)  


	/// Functions
	// Function /Game/Widgets/W_KillFeedEntry.W_KillFeedEntry_C.SetBgColor
	// FLinearColor SetBgColor();                                                                                               // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_KillFeedEntry.W_KillFeedEntry_C.CheckIfSelf
	// void CheckIfSelf(int32_t PlayewrIndex, bool& IsSelf);                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_KillFeedEntry.W_KillFeedEntry_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_KillFeedEntry.W_KillFeedEntry_C.ExecuteUbergraph_W_KillFeedEntry
	// void ExecuteUbergraph_W_KillFeedEntry(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_KillFeed.W_KillFeed_C
/// Size: 0x0278 (632 bytes) (0x000260 - 0x000278) align 8 MaxSize: 0x0278
class UW_KillFeed_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UCanvasPanel*                                CanvasPanel;                                                // 0x0268   (0x0008)  
	class UVerticalBox*                                VerticalBox;                                                // 0x0270   (0x0008)  


	/// Functions
	// Function /Game/Widgets/W_KillFeed.W_KillFeed_C.ShowHUD
	// ESlateVisibility ShowHUD();                                                                                              // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_KillFeed.W_KillFeed_C.AddKill
	// void AddKill(FST_PlayerStats KillerStats, FST_PlayerStats VictimStats);                                                  // [0x1325ea0] BlueprintCallable|BlueprintEvent 
	// Function /Game/Widgets/W_KillFeed.W_KillFeed_C.ExecuteUbergraph_W_KillFeed
	// void ExecuteUbergraph_W_KillFeed(int32_t EntryPoint);                                                                    // [0x1325ea0] Final|HasDefaults    
};

/// Class /Game/Widgets/W_EndGameScreen.W_EndGameScreen_C
/// Size: 0x0374 (884 bytes) (0x000260 - 0x000374) align 8 MaxSize: 0x0374
class UW_EndGameScreen_C : public UUserWidget
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0260   (0x0008)  
	class UWidgetAnimation*                            Rewards;                                                    // 0x0268   (0x0008)  
	class UWidgetAnimation*                            ClockTick;                                                  // 0x0270   (0x0008)  
	class UWidgetAnimation*                            DropDown;                                                   // 0x0278   (0x0008)  
	class UBorder*                                     Border;                                                     // 0x0280   (0x0008)  
	class UImage*                                      Image;                                                      // 0x0288   (0x0008)  
	class UImage*                                      Image0;                                                     // 0x0290   (0x0008)  
	class UImage*                                      Image1;                                                     // 0x0298   (0x0008)  
	class UImage*                                      Image2;                                                     // 0x02A0   (0x0008)  
	class UImage*                                      Image3;                                                     // 0x02A8   (0x0008)  
	class UImage*                                      Image4;                                                     // 0x02B0   (0x0008)  
	class UImage*                                      Image5;                                                     // 0x02B8   (0x0008)  
	class UTextBlock*                                  TextBlock;                                                  // 0x02C0   (0x0008)  
	class UTextBlock*                                  TextBlock6;                                                 // 0x02C8   (0x0008)  
	class UTextBlock*                                  TextBlock7;                                                 // 0x02D0   (0x0008)  
	class UTextBlock*                                  TextBlock8;                                                 // 0x02D8   (0x0008)  
	class UTextBlock*                                  TextBlock9;                                                 // 0x02E0   (0x0008)  
	class UTextBlock*                                  TextBlock_BestPlane;                                        // 0x02E8   (0x0008)  
	class UTextBlock*                                  TextBlock_BestTank;                                         // 0x02F0   (0x0008)  
	class UTextBlock*                                  TextBlock_HighestScorePlayer;                               // 0x02F8   (0x0008)  
	class UTextBlock*                                  TextBlock_MosthealingScore;                                 // 0x0300   (0x0008)  
	class UTextBlock*                                  TextBlock_MostKillsPlayer;                                  // 0x0308   (0x0008)  
	class UTextBlock*                                  TextBlock_WinningTeam;                                      // 0x0310   (0x0008)  
	class UVerticalBox*                                VerticalBox_Allies;                                         // 0x0318   (0x0008)  
	class UVerticalBox*                                VerticalBox_Axis;                                           // 0x0320   (0x0008)  
	class UVerticalBox*                                VerticalBox_MapVoteList;                                    // 0x0328   (0x0008)  
	class UW_GainedXPEntry_C*                          W_GainedXPEntry;                                            // 0x0330   (0x0008)  
	class UW_GainedXPEntry_C*                          W_GainedXPEntry10;                                          // 0x0338   (0x0008)  
	class UW_GainedXPEntry_C*                          W_GainedXPEntry11;                                          // 0x0340   (0x0008)  
	class UW_GainedXPEntry_C*                          W_GainedXPEntry12;                                          // 0x0348   (0x0008)  
	class UW_GainedXPEntry_C*                          W_GainedXPEntry13;                                          // 0x0350   (0x0008)  
	class UW_GainedXPEntry_C*                          W_GainedXPEntry14;                                          // 0x0358   (0x0008)  
	TEnumAsByte<E_Teams>                               WinningTeam;                                                // 0x0360   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0361   (0x0007)  MISSED
	class UMaterialInstanceDynamic*                    CountDownMatRef;                                            // 0x0368   (0x0008)  
	float                                              SmoothedCountDownPercentage;                                // 0x0370   (0x0004)  


	/// Functions
	// Function /Game/Widgets/W_EndGameScreen.W_EndGameScreen_C.ShowAlliedIcon
	// ESlateVisibility ShowAlliedIcon();                                                                                       // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EndGameScreen.W_EndGameScreen_C.ShowAxisIcon
	// ESlateVisibility ShowAxisIcon();                                                                                         // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EndGameScreen.W_EndGameScreen_C.ShowRestartButton
	// ESlateVisibility ShowRestartButton();                                                                                    // [0x1325ea0] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Game/Widgets/W_EndGameScreen.W_EndGameScreen_C.Construct
	// void Construct();                                                                                                        // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EndGameScreen.W_EndGameScreen_C.Tick
	// void Tick(FGeometry MyGeometry, float InDeltaTime);                                                                      // [0x1325ea0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Game/Widgets/W_EndGameScreen.W_EndGameScreen_C.ExecuteUbergraph_W_EndGameScreen
	// void ExecuteUbergraph_W_EndGameScreen(int32_t EntryPoint);                                                               // [0x1325ea0] Final|HasDefaults    
};

/// Struct /Game/Widgets/ST_Notification.ST_Notification
/// Size: 0x0048 (72 bytes) (0x000000 - 0x000048) align 8 MaxSize: 0x0048
struct FST_Notification
{ 
	FText                                              Message_4_A82664224E5F6F83357B259BE824B43C;                 // 0x0000   (0x0018)  
	FLinearColor                                       Color_6_D02481614EEBD5B9E75269A421E86A40;                   // 0x0018   (0x0010)  
	FName                                              Tag_8_74CC42D64A8F1DD9F0D0239DBC45E017;                     // 0x0028   (0x0008)  
	FText                                              KilledPlayerUsername_11_9BEB2BE44AC4BE509CC2859E3507A50C;   // 0x0030   (0x0018)  
};

#pragma pack(pop)


static_assert(sizeof(UTask_MoveToObjective_C) == 0x00C9); // 201 bytes (0x0000A8 - 0x0000C9)
static_assert(sizeof(UTask_StopMovement_C) == 0x00B0); // 176 bytes (0x0000A8 - 0x0000B0)
static_assert(sizeof(UTask_MoveToSniperSpot_C) == 0x00CD); // 205 bytes (0x0000A8 - 0x0000CD)
static_assert(sizeof(UTask_MoveToEnemy_C) == 0x00B0); // 176 bytes (0x0000A8 - 0x0000B0)
static_assert(sizeof(UTask_FindSniperSpot_C) == 0x00CD); // 205 bytes (0x0000A8 - 0x0000CD)
static_assert(sizeof(UDamageDealerData_C) == 0x00D0); // 208 bytes (0x0000B0 - 0x0000D0)
static_assert(sizeof(UTask_VehicleMoveToObjective_C) == 0x00B0); // 176 bytes (0x0000A8 - 0x0000B0)
static_assert(sizeof(UTask_VehicleMoveToEnemy_C) == 0x00B0); // 176 bytes (0x0000A8 - 0x0000B0)
static_assert(sizeof(UTask_RoamAround_C) == 0x00B1); // 177 bytes (0x0000A8 - 0x0000B1)
static_assert(sizeof(UTask_IsEnemyStillInLos_C) == 0x00B8); // 184 bytes (0x0000A8 - 0x0000B8)
static_assert(sizeof(UTask_FindObjective_C) == 0x00C0); // 192 bytes (0x0000A8 - 0x0000C0)
static_assert(sizeof(UTask_CheckIfEnemyStillRelevant_C) == 0x00B0); // 176 bytes (0x0000A8 - 0x0000B0)
static_assert(sizeof(UNavFilter_Tank_C) == 0x0048); // 72 bytes (0x000048 - 0x000048)
static_assert(sizeof(ABP_VehicleRepairZone_C) == 0x0231); // 561 bytes (0x000220 - 0x000231)
static_assert(sizeof(ABP_Username_C) == 0x0260); // 608 bytes (0x000220 - 0x000260)
static_assert(sizeof(ABP_WaterPlane_C) == 0x0240); // 576 bytes (0x000220 - 0x000240)
static_assert(sizeof(UAIFunctions_C) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(ABP_SpectatorCam_C) == 0x02A0); // 672 bytes (0x000280 - 0x0002A0)
static_assert(sizeof(FST_CharacterCustomization) == 0x004C); // 76 bytes (0x000000 - 0x00004C)
static_assert(sizeof(ABP_MugShotDummy_C) == 0x0309); // 777 bytes (0x000220 - 0x000309)
static_assert(sizeof(FST_DamageInformation) == 0x0012); // 18 bytes (0x000000 - 0x000012)
static_assert(sizeof(ABP_DamageNumberNew_C) == 0x0258); // 600 bytes (0x000220 - 0x000258)
static_assert(sizeof(ABP_WorldDamageNumber_C) == 0x0253); // 595 bytes (0x000220 - 0x000253)
static_assert(sizeof(ABP_PlayerCameraManager_C) == 0x2810); // 10256 bytes (0x002810 - 0x002810)
static_assert(sizeof(ABP_CombatZone_C) == 0x0231); // 561 bytes (0x000220 - 0x000231)
static_assert(sizeof(ABP_MainMenuCam_C) == 0x0290); // 656 bytes (0x000280 - 0x000290)
static_assert(sizeof(FST_Unlockable) == 0x0188); // 392 bytes (0x000000 - 0x000188)
static_assert(sizeof(ABP_CosmeticPreview_C) == 0x0400); // 1024 bytes (0x000220 - 0x000400)
static_assert(sizeof(ABP_Mannequin_C) == 0x0322); // 802 bytes (0x000220 - 0x000322)
static_assert(sizeof(ABP_Mannequin_Axis_C) == 0x0330); // 816 bytes (0x000322 - 0x000330)
static_assert(sizeof(ABP_EquipPreview_C) == 0x0238); // 568 bytes (0x000220 - 0x000238)
static_assert(sizeof(UNavArea_Vehicle_C) == 0x0048); // 72 bytes (0x000048 - 0x000048)
static_assert(sizeof(ABP_SkillBase_C) == 0x024C); // 588 bytes (0x000220 - 0x00024C)
static_assert(sizeof(ABP_Skill_Shield_C) == 0x0278); // 632 bytes (0x00024C - 0x000278)
static_assert(sizeof(ABP_Skill_PowerShot_C) == 0x0274); // 628 bytes (0x00024C - 0x000274)
static_assert(sizeof(ABP_Skill_PowerClap_C) == 0x0270); // 624 bytes (0x00024C - 0x000270)
static_assert(sizeof(ABP_Skill_PowderKeg_C) == 0x0264); // 612 bytes (0x00024C - 0x000264)
static_assert(sizeof(ABP_Skill_PoisonTrap_C) == 0x0258); // 600 bytes (0x00024C - 0x000258)
static_assert(sizeof(ABP_Skill_PoisonInfuse_C) == 0x0260); // 608 bytes (0x00024C - 0x000260)
static_assert(sizeof(ABP_Skill_Invisbility_C) == 0x025C); // 604 bytes (0x00024C - 0x00025C)
static_assert(sizeof(ABP_Skill_Heal_C) == 0x0298); // 664 bytes (0x00024C - 0x000298)
static_assert(sizeof(ABP_Skill_Grenade_C) == 0x0260); // 608 bytes (0x00024C - 0x000260)
static_assert(sizeof(ABP_Skill_Grenade_Axis_C) == 0x0260); // 608 bytes (0x000260 - 0x000260)
static_assert(sizeof(ABP_Skill_Dash_C) == 0x0280); // 640 bytes (0x00024C - 0x000280)
static_assert(sizeof(ABP_Skill_BurningBullets_C) == 0x0260); // 608 bytes (0x00024C - 0x000260)
static_assert(sizeof(ABP_Skill_FrenzyFire_C) == 0x0290); // 656 bytes (0x00024C - 0x000290)
static_assert(sizeof(ABP_FreeCam_C) == 0x02B8); // 696 bytes (0x000280 - 0x0002B8)
static_assert(sizeof(ABP_LightActorBase_C) == 0x0231); // 561 bytes (0x000220 - 0x000231)
static_assert(sizeof(ABP_SniperSpot_C) == 0x0231); // 561 bytes (0x000220 - 0x000231)
static_assert(sizeof(ABP_VehicleRocket_C) == 0x0230); // 560 bytes (0x000220 - 0x000230)
static_assert(sizeof(ABP_AIControllerBase_C) == 0x0360); // 864 bytes (0x000328 - 0x000360)
static_assert(sizeof(ABP_AIController_Character_C) == 0x0368); // 872 bytes (0x000360 - 0x000368)
static_assert(sizeof(ABP_AIController_Tank_C) == 0x0368); // 872 bytes (0x000360 - 0x000368)
static_assert(sizeof(ABP_InteractableBase_C) == 0x0248); // 584 bytes (0x000220 - 0x000248)
static_assert(sizeof(ABP_VehicleSwapPoster_C) == 0x0298); // 664 bytes (0x000248 - 0x000298)
static_assert(sizeof(ABP_SimpleProjectilebase_C) == 0x0360); // 864 bytes (0x000220 - 0x000360)
static_assert(sizeof(ABP_SyringeInjector_Old_C) == 0x0374); // 884 bytes (0x000360 - 0x000374)
static_assert(sizeof(ABP_MeleeProjectileBase_C) == 0x0378); // 888 bytes (0x000360 - 0x000378)
static_assert(sizeof(ABP_MeleeProjectile_Bayonet_C) == 0x0378); // 888 bytes (0x000378 - 0x000378)
static_assert(sizeof(ABP_MeleeProjectile_Dagger_C) == 0x0378); // 888 bytes (0x000378 - 0x000378)
static_assert(sizeof(ABP_Trapbase_C) == 0x0330); // 816 bytes (0x000220 - 0x000330)
static_assert(sizeof(ABP_PoisonTrap_Axis_C) == 0x0330); // 816 bytes (0x000330 - 0x000330)
static_assert(sizeof(ABP_PoisonTrap_Allied_C) == 0x0330); // 816 bytes (0x000330 - 0x000330)
static_assert(sizeof(ABP_ImpactDecal_C) == 0x0248); // 584 bytes (0x000220 - 0x000248)
static_assert(sizeof(ABP_ImpactDecal_ImpactCrater_C) == 0x0248); // 584 bytes (0x000248 - 0x000248)
static_assert(sizeof(ABP_ImpactDecal_BulletHole_C) == 0x0248); // 584 bytes (0x000248 - 0x000248)
static_assert(sizeof(ABP_ProjectileTrailBase_C) == 0x0275); // 629 bytes (0x000220 - 0x000275)
static_assert(sizeof(ABP_ProjectileTrailBase_BurningBullet_C) == 0x0275); // 629 bytes (0x000275 - 0x000275)
static_assert(sizeof(ABP_ProjectileTrailBase_PowerShot_C) == 0x0275); // 629 bytes (0x000275 - 0x000275)
static_assert(sizeof(FST_ThrowableAttachment) == 0x0028); // 40 bytes (0x000000 - 0x000028)
static_assert(sizeof(ABP_ProjectileBase_C) == 0x0570); // 1392 bytes (0x000220 - 0x000570)
static_assert(sizeof(ABP_Bomb_C) == 0x0578); // 1400 bytes (0x000570 - 0x000578)
static_assert(sizeof(ABP_LauncherRocketProjectile_C) == 0x0590); // 1424 bytes (0x000570 - 0x000590)
static_assert(sizeof(ABP_VehicleRocketProjectile_C) == 0x05A8); // 1448 bytes (0x000590 - 0x0005A8)
static_assert(sizeof(ABP_ThrowableProjectileBase_C) == 0x0581); // 1409 bytes (0x000570 - 0x000581)
static_assert(sizeof(ABP_PowderKegProjectile_C) == 0x05B4); // 1460 bytes (0x000581 - 0x0005B4)
static_assert(sizeof(ABP_SmallGrenadeAllied_C) == 0x0581); // 1409 bytes (0x000581 - 0x000581)
static_assert(sizeof(ABP_SmallGrenadeAxis_C) == 0x0581); // 1409 bytes (0x000581 - 0x000581)
static_assert(sizeof(ABP_TNTBomb_C) == 0x0598); // 1432 bytes (0x000581 - 0x000598)
static_assert(sizeof(ABP_VehicleSwapBoard_Base_C) == 0x0269); // 617 bytes (0x000220 - 0x000269)
static_assert(sizeof(ABP_P51Poster_C) == 0x0298); // 664 bytes (0x000298 - 0x000298)
static_assert(sizeof(ABP_BeaufighterPoster_C) == 0x0298); // 664 bytes (0x000298 - 0x000298)
static_assert(sizeof(ABP_DecalManager_C) == 0x0240); // 576 bytes (0x000220 - 0x000240)
static_assert(sizeof(FST_ProjectileHitRequest) == 0x0019); // 25 bytes (0x000000 - 0x000019)
static_assert(sizeof(FST_AOEHitRequest) == 0x0054); // 84 bytes (0x000000 - 0x000054)
static_assert(sizeof(ABP_PlayerState_C) == 0x03D1); // 977 bytes (0x000320 - 0x0003D1)
static_assert(sizeof(ABP_NewSky_C) == 0x02B4); // 692 bytes (0x000220 - 0x0002B4)
static_assert(sizeof(UExtraSteamCoreProFunctions_C) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(ABP_MapCam_C) == 0x0298); // 664 bytes (0x000280 - 0x000298)
static_assert(sizeof(ABP_MapCenter_C) == 0x0230); // 560 bytes (0x000220 - 0x000230)
static_assert(sizeof(UWidgetFunctions_C) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UActorRefCountDown_C) == 0x00D4); // 212 bytes (0x0000B0 - 0x0000D4)
static_assert(sizeof(UPawnDataComponent_C) == 0x021D); // 541 bytes (0x0001F8 - 0x00021D)
static_assert(sizeof(FST_PlayerStats) == 0x0068); // 104 bytes (0x000000 - 0x000068)
static_assert(sizeof(FST_MapVote) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(ABP_GameStateBase_C) == 0x04A9); // 1193 bytes (0x000270 - 0x0004A9)
static_assert(sizeof(ABP_GameState_Elimination_C) == 0x04BC); // 1212 bytes (0x0004A9 - 0x0004BC)
static_assert(sizeof(ABP_Gamestate_DualRocket_C) == 0x04E8); // 1256 bytes (0x0004A9 - 0x0004E8)
static_assert(sizeof(ABP_GameState_Conquest_C) == 0x04D8); // 1240 bytes (0x0004A9 - 0x0004D8)
static_assert(sizeof(ABP_Gamestate_CaptureAndHold_C) == 0x04E1); // 1249 bytes (0x0004A9 - 0x0004E1)
static_assert(sizeof(FST_UserIDBanCheck) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(ABP_GameModeBase_C) == 0x0334); // 820 bytes (0x0002C0 - 0x000334)
static_assert(sizeof(FST_UnitProgress) == 0x0014); // 20 bytes (0x000000 - 0x000014)
static_assert(sizeof(FST_EventProgress) == 0x0004); // 4 bytes (0x000000 - 0x000004)
static_assert(sizeof(FST_TokenAmount) == 0x0014); // 20 bytes (0x000000 - 0x000014)
static_assert(sizeof(ABP_BaseController_C) == 0x063C); // 1596 bytes (0x000570 - 0x00063C)
static_assert(sizeof(ABP_MainMenuController_C) == 0x07B0); // 1968 bytes (0x00063C - 0x0007B0)
static_assert(sizeof(ABP_BuffDebuffBase_C) == 0x0268); // 616 bytes (0x000220 - 0x000268)
static_assert(sizeof(ABP_Shield_C) == 0x02E1); // 737 bytes (0x000268 - 0x0002E1)
static_assert(sizeof(ABP_SpawnableBase_C) == 0x0257); // 599 bytes (0x000220 - 0x000257)
static_assert(sizeof(ABP_MobileVehicleSpawnPoint_C) == 0x0260); // 608 bytes (0x000257 - 0x000260)
static_assert(sizeof(ABP_Flag_C) == 0x02CE); // 718 bytes (0x000257 - 0x0002CE)
static_assert(sizeof(ABP_CaptureAndHoldObjectiveBase_C) == 0x02E8); // 744 bytes (0x0002CE - 0x0002E8)
static_assert(sizeof(ABP_Rocket_C) == 0x0328); // 808 bytes (0x0002CE - 0x000328)
static_assert(sizeof(ABP_Controller_C) == 0x0710); // 1808 bytes (0x00063C - 0x000710)
static_assert(sizeof(ABP_Poison_C) == 0x0280); // 640 bytes (0x000268 - 0x000280)
static_assert(sizeof(ABP_Burning_C) == 0x028C); // 652 bytes (0x000268 - 0x00028C)
static_assert(sizeof(ABP_VehicleSeat_C) == 0x028B); // 651 bytes (0x000248 - 0x00028B)
static_assert(sizeof(ABP_Passenger_GunBase_C) == 0x02E9); // 745 bytes (0x00028B - 0x0002E9)
static_assert(sizeof(ABP_VehicleSeat_TankPassenger_C) == 0x02A0); // 672 bytes (0x00028B - 0x0002A0)
static_assert(sizeof(FST_VehicleSeatUIDot) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(ABP_VehicleBase_C) == 0x0450); // 1104 bytes (0x000280 - 0x000450)
static_assert(sizeof(ABP_Transport_C) == 0x05B8); // 1464 bytes (0x000450 - 0x0005B8)
static_assert(sizeof(ABP_AAGun_C) == 0x0518); // 1304 bytes (0x000450 - 0x000518)
static_assert(sizeof(ABP_LandingCraft_C) == 0x0501); // 1281 bytes (0x000450 - 0x000501)
static_assert(sizeof(ABP_PlaneBase_C) == 0x07EC); // 2028 bytes (0x000450 - 0x0007EC)
static_assert(sizeof(ABP_Beaufighter_C) == 0x0880); // 2176 bytes (0x0007EC - 0x000880)
static_assert(sizeof(ABP_P51_C) == 0x08A8); // 2216 bytes (0x0007EC - 0x0008A8)
static_assert(sizeof(ABP_EquipableBase_C) == 0x0362); // 866 bytes (0x000220 - 0x000362)
static_assert(sizeof(ABP_MeleeBase_C) == 0x03F0); // 1008 bytes (0x000362 - 0x0003F0)
static_assert(sizeof(ABP_Throwablebase_C) == 0x03F4); // 1012 bytes (0x000362 - 0x0003F4)
static_assert(sizeof(ABP_TNT_C) == 0x03F4); // 1012 bytes (0x0003F4 - 0x0003F4)
static_assert(sizeof(ABP_SingleGrenadeAllied_C) == 0x03F4); // 1012 bytes (0x0003F4 - 0x0003F4)
static_assert(sizeof(ABP_PoisonTrapThrowable_Allied_C) == 0x03F4); // 1012 bytes (0x0003F4 - 0x0003F4)
static_assert(sizeof(ABP_GrenadeVolleyAllied_C) == 0x0408); // 1032 bytes (0x0003F4 - 0x000408)
static_assert(sizeof(ABP_SingleGrenadeAxis_C) == 0x03F4); // 1012 bytes (0x0003F4 - 0x0003F4)
static_assert(sizeof(ABP_PoisonTrapThrowable_Axis_C) == 0x03F4); // 1012 bytes (0x0003F4 - 0x0003F4)
static_assert(sizeof(ABP_GrenadeVolleyAxis_C) == 0x0408); // 1032 bytes (0x000408 - 0x000408)
static_assert(sizeof(ABP_Bayonet_C) == 0x03F0); // 1008 bytes (0x0003F0 - 0x0003F0)
static_assert(sizeof(ABP_Dagger_C) == 0x03F0); // 1008 bytes (0x0003F0 - 0x0003F0)
static_assert(sizeof(ABP_HealingSyringe_C) == 0x03B4); // 948 bytes (0x000362 - 0x0003B4)
static_assert(sizeof(ABP_HealingSyringe_Axis_C) == 0x03B4); // 948 bytes (0x0003B4 - 0x0003B4)
static_assert(sizeof(ABP_Keg_C) == 0x03F4); // 1012 bytes (0x0003F4 - 0x0003F4)
static_assert(sizeof(ABP_RangedWeaponBase_C) == 0x0605); // 1541 bytes (0x000362 - 0x000605)
static_assert(sizeof(ABP_TrenchGun_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_TommyGun_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Thompson_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_SingleBarrelShotgun_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_SawedOffShotgun_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_PocketSMG_Allied_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_M1Garand_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_M1_Scoped_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_LewisGun_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_LeeEnfield_NoScope_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_LeeEnfield_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_HydeCarbine_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Drilling_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Colt45_Silenced_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Colt45_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Browning_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_BoysATRifle_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Bazooka_C) == 0x0618); // 1560 bytes (0x000605 - 0x000618)
static_assert(sizeof(ABP_Bar_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_357Magnum_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_ZB37_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_ZB26_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Stg44_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_M4BattleRifle_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_SilencedLuger_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_PocketSMG_Axis_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_PanzerShreck_C) == 0x0618); // 1560 bytes (0x000618 - 0x000618)
static_assert(sizeof(ABP_Mp40_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_MG34_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_MauserTankGewehr_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_MauserC96_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Luger_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Kar98_NoScope_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Kar98_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Gewehr43_Scoped_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(ABP_Gewehr43_C) == 0x0605); // 1541 bytes (0x000605 - 0x000605)
static_assert(sizeof(FST_CharacterData) == 0x0012); // 18 bytes (0x000000 - 0x000012)
static_assert(sizeof(ABP_Character_C) == 0x0C81); // 3201 bytes (0x0004C0 - 0x000C81)
static_assert(sizeof(ABP_PlayerStart_SpawnPoint_C) == 0x0241); // 577 bytes (0x000220 - 0x000241)
static_assert(sizeof(ABP_PlayerStart_SpawnPoint_Back_C) == 0x0250); // 592 bytes (0x000241 - 0x000250)
static_assert(sizeof(ABP_PlayerStart_SpawnPoint_Alt_C) == 0x0250); // 592 bytes (0x000241 - 0x000250)
static_assert(sizeof(UApplyDamage_C) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(ABP_TankBase_C) == 0x0715); // 1813 bytes (0x000450 - 0x000715)
static_assert(sizeof(FST_ServerSettings) == 0x008C); // 140 bytes (0x000000 - 0x00008C)
static_assert(sizeof(USG_ServerSettings_C) == 0x00B8); // 184 bytes (0x000028 - 0x0000B8)
static_assert(sizeof(FST_CrosshairSettings) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(FST_Options) == 0x009A); // 154 bytes (0x000000 - 0x00009A)
static_assert(sizeof(USG_Options_C) == 0x00C8); // 200 bytes (0x000028 - 0x0000C8)
static_assert(sizeof(FST_Loadout) == 0x00AC); // 172 bytes (0x000000 - 0x0000AC)
static_assert(sizeof(USG_Loadout_C) == 0x00D4); // 212 bytes (0x000028 - 0x0000D4)
static_assert(sizeof(FST_SelectedCosmeticItems) == 0x0130); // 304 bytes (0x000000 - 0x000130)
static_assert(sizeof(USG_Customization_C) == 0x0158); // 344 bytes (0x000028 - 0x000158)
static_assert(sizeof(FST_ServerManagerPlayerInfo) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(USG_BanList_C) == 0x0038); // 56 bytes (0x000028 - 0x000038)
static_assert(sizeof(UGlobalFunctions_C) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(FST_AccountPrivilige) == 0x0005); // 5 bytes (0x000000 - 0x000005)
static_assert(sizeof(UBP_GameInstance_C) == 0x0630); // 1584 bytes (0x0001A8 - 0x000630)
static_assert(sizeof(ABP_ChurchLight_C) == 0x0250); // 592 bytes (0x000231 - 0x000250)
static_assert(sizeof(ABP_DistantShip_C) == 0x0250); // 592 bytes (0x000220 - 0x000250)
static_assert(sizeof(ABP_SpotLight_C) == 0x0250); // 592 bytes (0x000231 - 0x000250)
static_assert(sizeof(ABP_SpotLightPole_C) == 0x0258); // 600 bytes (0x000231 - 0x000258)
static_assert(sizeof(ABP_StreetLantern_C) == 0x0250); // 592 bytes (0x000231 - 0x000250)
static_assert(sizeof(ABP_Transport_Motorbike_Axis_C) == 0x05C0); // 1472 bytes (0x0005B8 - 0x0005C0)
static_assert(sizeof(ABP_GameMode_Conquest_C) == 0x0334); // 820 bytes (0x000334 - 0x000334)
static_assert(sizeof(FST_SpawnInfo) == 0x0054); // 84 bytes (0x000000 - 0x000054)
static_assert(sizeof(FST_ThrowableData) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FST_RangedWeaponData) == 0x0024); // 36 bytes (0x000000 - 0x000024)
static_assert(sizeof(FST_Selectable) == 0x0176); // 374 bytes (0x000000 - 0x000176)
static_assert(sizeof(FST_BotName) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FST_Map) == 0x0040); // 64 bytes (0x000000 - 0x000040)
static_assert(sizeof(FST_HairColor) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FST_CharacterFaceCustomizationItem) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(FST_EventAndTokenSettings) == 0x00AC); // 172 bytes (0x000000 - 0x0000AC)
static_assert(sizeof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C) == 0xC8A9); // 51369 bytes (0x0002B8 - 0x00C8A9)
static_assert(sizeof(UW_EmoteMenu_C) == 0x0304); // 772 bytes (0x000260 - 0x000304)
static_assert(sizeof(UW_Username_C) == 0x02B0); // 688 bytes (0x000260 - 0x0002B0)
static_assert(sizeof(UW_BanTypeConfirm_C) == 0x0298); // 664 bytes (0x000260 - 0x000298)
static_assert(sizeof(UW_SteamIDCard_C) == 0x0298); // 664 bytes (0x000260 - 0x000298)
static_assert(sizeof(UW_DamageNumber_C) == 0x02D0); // 720 bytes (0x000260 - 0x0002D0)
static_assert(sizeof(UW_VoteKickEntry_C) == 0x0289); // 649 bytes (0x000260 - 0x000289)
static_assert(sizeof(UW_KickBanEntry_C) == 0x0281); // 641 bytes (0x000260 - 0x000281)
static_assert(sizeof(UW_BanListEntry_C) == 0x02A8); // 680 bytes (0x000260 - 0x0002A8)
static_assert(sizeof(UW_ChatEntry_C) == 0x02AA); // 682 bytes (0x000260 - 0x0002AA)
static_assert(sizeof(UW_IngameChat_C) == 0x02A0); // 672 bytes (0x000260 - 0x0002A0)
static_assert(sizeof(UW_ServerManagement_C) == 0x02C1); // 705 bytes (0x000260 - 0x0002C1)
static_assert(sizeof(UW_ScoreboardSpectatorEntry_C) == 0x02E0); // 736 bytes (0x000260 - 0x0002E0)
static_assert(sizeof(UW_ScoreboardEntry_C) == 0x0349); // 841 bytes (0x000260 - 0x000349)
static_assert(sizeof(UW_TeamSelect_C) == 0x02EB); // 747 bytes (0x000260 - 0x0002EB)
static_assert(sizeof(UW_ScoreBoard_C) == 0x0398); // 920 bytes (0x000260 - 0x000398)
static_assert(sizeof(UW_IngameMenu_C) == 0x02B0); // 688 bytes (0x000260 - 0x0002B0)
static_assert(sizeof(UW_DamageNumberNew_C) == 0x02A0); // 672 bytes (0x000260 - 0x0002A0)
static_assert(sizeof(UW_ChatOverlay_C) == 0x0280); // 640 bytes (0x000260 - 0x000280)
static_assert(sizeof(UW_FlagUI_C) == 0x02A9); // 681 bytes (0x000260 - 0x0002A9)
static_assert(sizeof(UW_SteamItemListForChest_C) == 0x0410); // 1040 bytes (0x000260 - 0x000410)
static_assert(sizeof(UW_PotentialChestItems_hover_C) == 0x02B8); // 696 bytes (0x000260 - 0x0002B8)
static_assert(sizeof(UW_BattleChest_Entry_C) == 0x041D); // 1053 bytes (0x000260 - 0x00041D)
static_assert(sizeof(UW_CheatMenu_C) == 0x0398); // 920 bytes (0x000260 - 0x000398)
static_assert(sizeof(UW_UnOpenedChest_C) == 0x0430); // 1072 bytes (0x000260 - 0x000430)
static_assert(sizeof(UW_ChestSeasonSlot_C) == 0x05D0); // 1488 bytes (0x000260 - 0x0005D0)
static_assert(sizeof(UW_BattleChests_C) == 0x02F0); // 752 bytes (0x000260 - 0x0002F0)
static_assert(sizeof(UW_EventRewardsEntry_C) == 0x0784); // 1924 bytes (0x000260 - 0x000784)
static_assert(sizeof(UW_KeybindEntry_C) == 0x0282); // 642 bytes (0x000260 - 0x000282)
static_assert(sizeof(UW_LeaderboardCard_C) == 0x0380); // 896 bytes (0x000260 - 0x000380)
static_assert(sizeof(UW_LeaderboardsEntry_C) == 0x0398); // 920 bytes (0x000260 - 0x000398)
static_assert(sizeof(UW_Tab_C) == 0x02D0); // 720 bytes (0x000260 - 0x0002D0)
static_assert(sizeof(UW_KeyBinds_C) == 0x0400); // 1024 bytes (0x000260 - 0x000400)
static_assert(sizeof(UW_PasswordPrompt_C) == 0x03A0); // 928 bytes (0x000260 - 0x0003A0)
static_assert(sizeof(UW_DisconnectErrorMessage_C) == 0x0288); // 648 bytes (0x000260 - 0x000288)
static_assert(sizeof(UW_TokenPouchSpacer_C) == 0x0260); // 608 bytes (0x000260 - 0x000260)
static_assert(sizeof(UW_TokenPouchHeader_C) == 0x02A0); // 672 bytes (0x000260 - 0x0002A0)
static_assert(sizeof(UW_TokenPouchEntry_C) == 0x03B0); // 944 bytes (0x000260 - 0x0003B0)
static_assert(sizeof(UW_TokenPouch_C) == 0x02A1); // 673 bytes (0x000260 - 0x0002A1)
static_assert(sizeof(UW_TextBox_C) == 0x02C9); // 713 bytes (0x000260 - 0x0002C9)
static_assert(sizeof(UW_SmallHeader_C) == 0x02B0); // 688 bytes (0x000260 - 0x0002B0)
static_assert(sizeof(UW_Slider_C) == 0x028D); // 653 bytes (0x000260 - 0x00028D)
static_assert(sizeof(UW_ServerBrowserEntry2_C) == 0x0400); // 1024 bytes (0x000260 - 0x000400)
static_assert(sizeof(UW_ServerbrowserEntry_C) == 0x0420); // 1056 bytes (0x000260 - 0x000420)
static_assert(sizeof(UW_QuickPlay_C) == 0x04E0); // 1248 bytes (0x000260 - 0x0004E0)
static_assert(sizeof(UW_OptionsMenu_C) == 0x05B8); // 1464 bytes (0x000260 - 0x0005B8)
static_assert(sizeof(UW_Leaderboards_C) == 0x0368); // 872 bytes (0x000260 - 0x000368)
static_assert(sizeof(UW_EventRewardPass_C) == 0x0350); // 848 bytes (0x000260 - 0x000350)
static_assert(sizeof(UW_Credits_C) == 0x02D8); // 728 bytes (0x000260 - 0x0002D8)
static_assert(sizeof(UW_BattleShop_C) == 0x02B8); // 696 bytes (0x000260 - 0x0002B8)
static_assert(sizeof(UW_TitleComboBoxEntry_C) == 0x0288); // 648 bytes (0x000260 - 0x000288)
static_assert(sizeof(UW_SliderNoStep_C) == 0x0288); // 648 bytes (0x000260 - 0x000288)
static_assert(sizeof(UW_MainMenu_C) == 0x0708); // 1800 bytes (0x000260 - 0x000708)
static_assert(sizeof(UW_CustomizationScreenMouseWheelZone_C) == 0x0269); // 617 bytes (0x000260 - 0x000269)
static_assert(sizeof(UW_Combobox_C) == 0x02A0); // 672 bytes (0x000260 - 0x0002A0)
static_assert(sizeof(UW_ShopToolTipPreview_C) == 0x0400); // 1024 bytes (0x000260 - 0x000400)
static_assert(sizeof(UW_HeroCustomizationScreen_C) == 0x0464); // 1124 bytes (0x000260 - 0x000464)
static_assert(sizeof(UW_CosmeticItem_C) == 0x0479); // 1145 bytes (0x000260 - 0x000479)
static_assert(sizeof(UW_CloseButton_C) == 0x0298); // 664 bytes (0x000260 - 0x000298)
static_assert(sizeof(UW_SteamProcessingPopup_C) == 0x0299); // 665 bytes (0x000260 - 0x000299)
static_assert(sizeof(UW_NewItemPopup_C) == 0x0288); // 648 bytes (0x000260 - 0x000288)
static_assert(sizeof(UW_IconTab_C) == 0x02B5); // 693 bytes (0x000260 - 0x0002B5)
static_assert(sizeof(UW_Tooltip_C) == 0x02C4); // 708 bytes (0x000260 - 0x0002C4)
static_assert(sizeof(UW_SelectionDropDownEntry_C) == 0x042B); // 1067 bytes (0x000260 - 0x00042B)
static_assert(sizeof(FST_DropDownItem) == 0x0230); // 560 bytes (0x000000 - 0x000230)
static_assert(sizeof(UW_SelectionDropDown_C) == 0x0533); // 1331 bytes (0x000260 - 0x000533)
static_assert(sizeof(UW_FadeToBlack_C) == 0x0278); // 632 bytes (0x000260 - 0x000278)
static_assert(sizeof(UW_Button_C) == 0x02FC); // 764 bytes (0x000260 - 0x0002FC)
static_assert(sizeof(UW_StealthMeter_C) == 0x02A0); // 672 bytes (0x000260 - 0x0002A0)
static_assert(sizeof(UM_PiercingShotScreenEffect_C) == 0x0280); // 640 bytes (0x000260 - 0x000280)
static_assert(sizeof(UW_ActionbarSlot_C) == 0x02ED); // 749 bytes (0x000260 - 0x0002ED)
static_assert(sizeof(UW_EliminationPlaque_C) == 0x0270); // 624 bytes (0x000260 - 0x000270)
static_assert(sizeof(UW_SpecialActionNotification_C) == 0x02ED); // 749 bytes (0x000260 - 0x0002ED)
static_assert(sizeof(UW_VehiclePassengers_C) == 0x0288); // 648 bytes (0x000260 - 0x000288)
static_assert(sizeof(UW_VehiclePassengerEntry_C) == 0x0288); // 648 bytes (0x000260 - 0x000288)
static_assert(sizeof(UW_PassengerSeatDot_C) == 0x0290); // 656 bytes (0x000260 - 0x000290)
static_assert(sizeof(UW_VehicleBaseUI_C) == 0x02E9); // 745 bytes (0x000260 - 0x0002E9)
static_assert(sizeof(UW_VotekickVotePopup_C) == 0x02A8); // 680 bytes (0x000260 - 0x0002A8)
static_assert(sizeof(UW_TankHUD_C) == 0x0300); // 768 bytes (0x000260 - 0x000300)
static_assert(sizeof(UW_SpecialActionStack_C) == 0x0280); // 640 bytes (0x000260 - 0x000280)
static_assert(sizeof(UW_PlaneHUD_C) == 0x0330); // 816 bytes (0x000260 - 0x000330)
static_assert(sizeof(UW_NewKillConfirmEntry_C) == 0x02A2); // 674 bytes (0x000260 - 0x0002A2)
static_assert(sizeof(UW_HeroProgressWidget_C) == 0x02EC); // 748 bytes (0x000260 - 0x0002EC)
static_assert(sizeof(UW_EliminationHUD_C) == 0x0340); // 832 bytes (0x000260 - 0x000340)
static_assert(sizeof(UW_DynamicCrosshair_C) == 0x02C1); // 705 bytes (0x000260 - 0x0002C1)
static_assert(sizeof(UW_DualRocketHUD_C) == 0x02A8); // 680 bytes (0x000260 - 0x0002A8)
static_assert(sizeof(UW_DeathScreen_C) == 0x0268); // 616 bytes (0x000260 - 0x000268)
static_assert(sizeof(UW_ConquestHUD_C) == 0x02A0); // 672 bytes (0x000260 - 0x0002A0)
static_assert(sizeof(UW_CaptureAndHoldHUD_C) == 0x02A0); // 672 bytes (0x000260 - 0x0002A0)
static_assert(sizeof(UW_ActiveSkill_C) == 0x0315); // 789 bytes (0x000260 - 0x000315)
static_assert(sizeof(UW_Actionbar_C) == 0x0290); // 656 bytes (0x000260 - 0x000290)
static_assert(sizeof(UM_MotorBikeHUD_C) == 0x0268); // 616 bytes (0x000260 - 0x000268)
static_assert(sizeof(UM_AAHUD_C) == 0x0268); // 616 bytes (0x000260 - 0x000268)
static_assert(sizeof(UW_SpawnSelect_C) == 0x0386); // 902 bytes (0x000260 - 0x000386)
static_assert(sizeof(UW_SpawnSelectPoint_C) == 0x02C3); // 707 bytes (0x000260 - 0x0002C3)
static_assert(sizeof(UW_Notification_C) == 0x02B8); // 696 bytes (0x000260 - 0x0002B8)
static_assert(sizeof(UW_LoadingScreen_C) == 0x0328); // 808 bytes (0x000260 - 0x000328)
static_assert(sizeof(UW_HUD_C) == 0x07FC); // 2044 bytes (0x000260 - 0x0007FC)
static_assert(sizeof(UW_BlackFadeInAndOut_C) == 0x0278); // 632 bytes (0x000260 - 0x000278)
static_assert(sizeof(UW_StatsSaving_C) == 0x0278); // 632 bytes (0x000260 - 0x000278)
static_assert(sizeof(UW_CheckBox_C) == 0x0289); // 649 bytes (0x000260 - 0x000289)
static_assert(sizeof(UW_GainedXPEntry_C) == 0x0280); // 640 bytes (0x000260 - 0x000280)
static_assert(sizeof(UW_EndGameMapVote_C) == 0x02B0); // 688 bytes (0x000260 - 0x0002B0)
static_assert(sizeof(UW_KillFeedEntry_C) == 0x0359); // 857 bytes (0x000260 - 0x000359)
static_assert(sizeof(UW_KillFeed_C) == 0x0278); // 632 bytes (0x000260 - 0x000278)
static_assert(sizeof(UW_EndGameScreen_C) == 0x0374); // 884 bytes (0x000260 - 0x000374)
static_assert(sizeof(FST_Notification) == 0x0048); // 72 bytes (0x000000 - 0x000048)
static_assert(offsetof(UTask_MoveToObjective_C, UberGraphFrame) == 0x00A8);
static_assert(offsetof(UTask_MoveToObjective_C, ObjectiveLocation) == 0x00BC);
static_assert(offsetof(UTask_StopMovement_C, UberGraphFrame) == 0x00A8);
static_assert(offsetof(UTask_MoveToSniperSpot_C, UberGraphFrame) == 0x00A8);
static_assert(offsetof(UTask_MoveToSniperSpot_C, SniperSpotLocation) == 0x00C0);
static_assert(offsetof(UTask_MoveToEnemy_C, UberGraphFrame) == 0x00A8);
static_assert(offsetof(UTask_FindSniperSpot_C, UberGraphFrame) == 0x00A8);
static_assert(offsetof(UTask_FindSniperSpot_C, SniperSpotLocation) == 0x00C0);
static_assert(offsetof(UDamageDealerData_C, UberGraphFrame) == 0x00B0);
static_assert(offsetof(UDamageDealerData_C, PlayerState) == 0x00C0);
static_assert(offsetof(UDamageDealerData_C, Pawn) == 0x00C8);
static_assert(offsetof(UTask_VehicleMoveToObjective_C, UberGraphFrame) == 0x00A8);
static_assert(offsetof(UTask_VehicleMoveToEnemy_C, UberGraphFrame) == 0x00A8);
static_assert(offsetof(UTask_RoamAround_C, UberGraphFrame) == 0x00A8);
static_assert(offsetof(UTask_IsEnemyStillInLos_C, UberGraphFrame) == 0x00A8);
static_assert(offsetof(UTask_FindObjective_C, UberGraphFrame) == 0x00A8);
static_assert(offsetof(UTask_CheckIfEnemyStillRelevant_C, UberGraphFrame) == 0x00A8);
static_assert(offsetof(ABP_VehicleRepairZone_C, Box) == 0x0220);
static_assert(offsetof(ABP_VehicleRepairZone_C, DefaultSceneRoot) == 0x0228);
static_assert(offsetof(ABP_VehicleRepairZone_C, Team) == 0x0230);
static_assert(offsetof(ABP_Username_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_Username_C, UsernameWidget) == 0x0228);
static_assert(offsetof(ABP_Username_C, DefaultSceneRoot) == 0x0230);
static_assert(offsetof(ABP_Username_C, PawnRef) == 0x0240);
static_assert(offsetof(ABP_Username_C, PawnDataComponent) == 0x0248);
static_assert(offsetof(ABP_Username_C, PawnsToIgnore) == 0x0250);
static_assert(offsetof(ABP_WaterPlane_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_WaterPlane_C, WaterPlane) == 0x0228);
static_assert(offsetof(ABP_WaterPlane_C, DefaultSceneRoot) == 0x0230);
static_assert(offsetof(ABP_WaterPlane_C, WaterTexture) == 0x0238);
static_assert(offsetof(ABP_SpectatorCam_C, UberGraphFrame) == 0x0280);
static_assert(offsetof(ABP_SpectatorCam_C, Camera) == 0x0288);
static_assert(offsetof(ABP_SpectatorCam_C, SpringArm) == 0x0290);
static_assert(offsetof(ABP_SpectatorCam_C, DefaultSceneRoot) == 0x0298);
static_assert(offsetof(FST_CharacterCustomization, Team_47_38C05D7E4006D451A4CA64A7A8DA0C8D) == 0x0040);
static_assert(offsetof(ABP_MugShotDummy_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_MugShotDummy_C, Back) == 0x0228);
static_assert(offsetof(ABP_MugShotDummy_C, CharacterMesh_Back) == 0x0230);
static_assert(offsetof(ABP_MugShotDummy_C, SceneCapture_Back) == 0x0238);
static_assert(offsetof(ABP_MugShotDummy_C, HatSkeletal) == 0x0240);
static_assert(offsetof(ABP_MugShotDummy_C, LowerFaceSkeletal) == 0x0248);
static_assert(offsetof(ABP_MugShotDummy_C, SpotLight1) == 0x0250);
static_assert(offsetof(ABP_MugShotDummy_C, SpotLight) == 0x0258);
static_assert(offsetof(ABP_MugShotDummy_C, SceneCapture_Front) == 0x0260);
static_assert(offsetof(ABP_MugShotDummy_C, Torso) == 0x0268);
static_assert(offsetof(ABP_MugShotDummy_C, FacialHair) == 0x0270);
static_assert(offsetof(ABP_MugShotDummy_C, LowerFace) == 0x0278);
static_assert(offsetof(ABP_MugShotDummy_C, UpperFace) == 0x0280);
static_assert(offsetof(ABP_MugShotDummy_C, Hat) == 0x0288);
static_assert(offsetof(ABP_MugShotDummy_C, CharacterMesh_Front) == 0x0290);
static_assert(offsetof(ABP_MugShotDummy_C, DefaultSceneRoot) == 0x0298);
static_assert(offsetof(ABP_MugShotDummy_C, Team) == 0x02A0);
static_assert(offsetof(ABP_MugShotDummy_C, Class) == 0x02A1);
static_assert(offsetof(ABP_MugShotDummy_C, CharCustomization) == 0x02A4);
static_assert(offsetof(ABP_MugShotDummy_C, ShowCaseHatItem) == 0x02F0);
static_assert(offsetof(ABP_MugShotDummy_C, ShowCaseTorsoItem) == 0x02F8);
static_assert(offsetof(ABP_MugShotDummy_C, ShowCaseBackItem) == 0x0300);
static_assert(offsetof(FST_DamageInformation, DamageType_14_24A5476544D892D78E480591D5422978) == 0x0000);
static_assert(offsetof(FST_DamageInformation, HitActor_9_66F4D8A7496E278CC30CFCB3F0251F9F) == 0x0008);
static_assert(offsetof(ABP_DamageNumberNew_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_DamageNumberNew_C, Widget) == 0x0228);
static_assert(offsetof(ABP_DamageNumberNew_C, DefaultSceneRoot) == 0x0230);
static_assert(offsetof(ABP_DamageNumberNew_C, DamageInfo) == 0x0238);
static_assert(offsetof(ABP_DamageNumberNew_C, EquipableClass) == 0x0250);
static_assert(offsetof(ABP_WorldDamageNumber_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_WorldDamageNumber_C, Widget) == 0x0228);
static_assert(offsetof(ABP_WorldDamageNumber_C, DefaultSceneRoot) == 0x0230);
static_assert(offsetof(ABP_WorldDamageNumber_C, HitActor) == 0x0248);
static_assert(offsetof(ABP_WorldDamageNumber_C, DamageType) == 0x0252);
static_assert(offsetof(ABP_CombatZone_C, Box) == 0x0220);
static_assert(offsetof(ABP_CombatZone_C, DefaultSceneRoot) == 0x0228);
static_assert(offsetof(ABP_CombatZone_C, ZoneType) == 0x0230);
static_assert(offsetof(ABP_MainMenuCam_C, Camera) == 0x0280);
static_assert(offsetof(ABP_MainMenuCam_C, DefaultSceneRoot) == 0x0288);
static_assert(offsetof(FST_Unlockable, Category_20_ED4E862040731943218B179172C69884) == 0x0001);
static_assert(offsetof(FST_Unlockable, Name_2_676B704547B5547E12D39A9E2D4B7A7C) == 0x0008);
static_assert(offsetof(FST_Unlockable, CurrencyType_112_40655FA74DE5301720ABFC90C2543A40) == 0x0020);
static_assert(offsetof(FST_Unlockable, TokenEvent_255_DF115470478F85916FCB30976F86CFBB) == 0x0028);
static_assert(offsetof(FST_Unlockable, RequiredPrivilegeDLC_249_F109ECFC4F56924B5583D8AE0B3A4CAA) == 0x0040);
static_assert(offsetof(FST_Unlockable, Rarity_223_023B74484A386B0FFBA9FAAD1484D24F) == 0x0054);
static_assert(offsetof(FST_Unlockable, Icon_5_58E515F64D01356B55F390A5C4580E03) == 0x0078);
static_assert(offsetof(FST_Unlockable, Material1_131_36CCBEAE4701A6C22997C6B6955E0A17) == 0x0080);
static_assert(offsetof(FST_Unlockable, Material2_130_0F9F8B35447A090E6E2D2D82F3A6C476) == 0x0088);
static_assert(offsetof(FST_Unlockable, SkeletalMesh1_184_342E4AD249D58BFE5924469B595F7677) == 0x0090);
static_assert(offsetof(FST_Unlockable, SkeletalMesh2_183_23A807D64CA714AD2C1F33A1AD9744AE) == 0x0098);
static_assert(offsetof(FST_Unlockable, StaticMesh1_132_88E33CE340E7D23EAAAD989E1043B3CD) == 0x00A0);
static_assert(offsetof(FST_Unlockable, StaticMesh2_133_7712B7364386ED0221C92585BD02B59F) == 0x00A8);
static_assert(offsetof(FST_Unlockable, Texture1_136_22F99B0F4EE096A1CD82008F1CD58AD5) == 0x00D0);
static_assert(offsetof(FST_Unlockable, Texture2_138_8EEBDB414937EA2161EB4887DEE7C1D3) == 0x00D8);
static_assert(offsetof(FST_Unlockable, Texture3_197_435B8FF04A7DEDC34DFCE3A933BE0A81) == 0x00E0);
static_assert(offsetof(FST_Unlockable, Texture4_216_284F872C49772CFC70AFC59B5E35E290) == 0x00E8);
static_assert(offsetof(FST_Unlockable, ColorOverlay1_198_F33304FC4503E80449BD1FACA52AD648) == 0x00F4);
static_assert(offsetof(FST_Unlockable, ColorOverlay2_201_08447861431E271F2CFD3795B6C64811) == 0x0104);
static_assert(offsetof(FST_Unlockable, ColorOverlay3_204_910AE763485340E6516EE6965735CF75) == 0x0114);
static_assert(offsetof(FST_Unlockable, AnimMontage_124_B3141DC7470AE940B93E0B91BFCAF8C3) == 0x0128);
static_assert(offsetof(FST_Unlockable, BlueprintRef_122_D3AEC4A74F179CA08EC909984F4A2B10) == 0x0130);
static_assert(offsetof(FST_Unlockable, FlatColor_WeaponSkin_96_0166CF874F05BAB0154B2D8CE7F23E9B) == 0x0138);
static_assert(offsetof(FST_Unlockable, Texture_WeaponSkin_76_FBBFB9E24CCB1D04A19ACC8C24859526) == 0x0148);
static_assert(offsetof(FST_Unlockable, TipColor_WeaponSkin_81_564A836541C56E22033AA589B5F742CE) == 0x0150);
static_assert(offsetof(FST_Unlockable, FresnelColor_WeaponSkin_177_9F65036549E6D5919B491CA23F3ED0D2) == 0x0178);
static_assert(offsetof(ABP_CosmeticPreview_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_CosmeticPreview_C, Plane) == 0x0228);
static_assert(offsetof(ABP_CosmeticPreview_C, StaticMesh) == 0x0230);
static_assert(offsetof(ABP_CosmeticPreview_C, Arrow) == 0x0238);
static_assert(offsetof(ABP_CosmeticPreview_C, SpotLight) == 0x0240);
static_assert(offsetof(ABP_CosmeticPreview_C, SceneCaptureComponent2D) == 0x0248);
static_assert(offsetof(ABP_CosmeticPreview_C, DefaultSceneRoot) == 0x0250);
static_assert(offsetof(ABP_CosmeticPreview_C, Item) == 0x0258);
static_assert(offsetof(ABP_CosmeticPreview_C, WeaponTextureMID) == 0x03E0);
static_assert(offsetof(ABP_CosmeticPreview_C, WeaponFlatColorMID) == 0x03E8);
static_assert(offsetof(ABP_CosmeticPreview_C, MeshToLoad) == 0x03F8);
static_assert(offsetof(ABP_Mannequin_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_Mannequin_C, GlovesSkeletal) == 0x0228);
static_assert(offsetof(ABP_Mannequin_C, HatSkeletal) == 0x0230);
static_assert(offsetof(ABP_Mannequin_C, LowerFaceSkeletal) == 0x0238);
static_assert(offsetof(ABP_Mannequin_C, Waist) == 0x0240);
static_assert(offsetof(ABP_Mannequin_C, Feet) == 0x0248);
static_assert(offsetof(ABP_Mannequin_C, Back) == 0x0250);
static_assert(offsetof(ABP_Mannequin_C, Torso) == 0x0258);
static_assert(offsetof(ABP_Mannequin_C, FacialHair) == 0x0260);
static_assert(offsetof(ABP_Mannequin_C, Legs) == 0x0268);
static_assert(offsetof(ABP_Mannequin_C, LowerFace) == 0x0270);
static_assert(offsetof(ABP_Mannequin_C, HatExtras) == 0x0278);
static_assert(offsetof(ABP_Mannequin_C, UpperFace) == 0x0280);
static_assert(offsetof(ABP_Mannequin_C, Weapon) == 0x0288);
static_assert(offsetof(ABP_Mannequin_C, Hat) == 0x0290);
static_assert(offsetof(ABP_Mannequin_C, CharacterMesh) == 0x0298);
static_assert(offsetof(ABP_Mannequin_C, DefaultSceneRoot) == 0x02A0);
static_assert(offsetof(ABP_Mannequin_C, Timeline_0__Direction_B468E7C94729808A51102E94678BD34A) == 0x02AC);
static_assert(offsetof(ABP_Mannequin_C, Timeline) == 0x02B0);
static_assert(offsetof(ABP_Mannequin_C, Team) == 0x02B8);
static_assert(offsetof(ABP_Mannequin_C, Class) == 0x02B9);
static_assert(offsetof(ABP_Mannequin_C, CharCustomization) == 0x02BC);
static_assert(offsetof(ABP_Mannequin_C, ShowCaseHatItem) == 0x0308);
static_assert(offsetof(ABP_Mannequin_C, ShowCaseTorsoItem) == 0x0310);
static_assert(offsetof(ABP_Mannequin_C, ShowCaseBackItem) == 0x0318);
static_assert(offsetof(ABP_Mannequin_Axis_C, UberGraphFrame) == 0x0328);
static_assert(offsetof(ABP_EquipPreview_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_EquipPreview_C, Mannequin) == 0x0228);
static_assert(offsetof(ABP_EquipPreview_C, DefaultSceneRoot) == 0x0230);
static_assert(offsetof(ABP_SkillBase_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_SkillBase_C, DefaultSceneRoot) == 0x0228);
static_assert(offsetof(ABP_SkillBase_C, Character) == 0x0230);
static_assert(offsetof(ABP_SkillBase_C, SkillSlot) == 0x0238);
static_assert(offsetof(ABP_Skill_Shield_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_Shield_C, ShieldedCharacters) == 0x0258);
static_assert(offsetof(ABP_Skill_Shield_C, Shields) == 0x0268);
static_assert(offsetof(ABP_Skill_PowerShot_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_PowerShot_C, ParticleSystem) == 0x0258);
static_assert(offsetof(ABP_Skill_PowerShot_C, HUDEffect) == 0x0268);
static_assert(offsetof(ABP_Skill_PowerClap_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_PowerClap_C, PushedActors) == 0x0260);
static_assert(offsetof(ABP_Skill_PowderKeg_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_PowderKeg_C, ThrowDirection) == 0x0258);
static_assert(offsetof(ABP_Skill_PoisonTrap_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_PoisonInfuse_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_PoisonInfuse_C, ParticleSystem) == 0x0258);
static_assert(offsetof(ABP_Skill_Invisbility_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_Heal_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_Heal_C, PointLight) == 0x0258);
static_assert(offsetof(ABP_Skill_Heal_C, StaticMesh1) == 0x0260);
static_assert(offsetof(ABP_Skill_Heal_C, StaticMesh) == 0x0268);
static_assert(offsetof(ABP_Skill_Heal_C, Timeline_0__Direction_B4C3BFE94F001B93AE929EA7890FC51E) == 0x0278);
static_assert(offsetof(ABP_Skill_Heal_C, Timeline) == 0x0280);
static_assert(offsetof(ABP_Skill_Heal_C, CharactersToHeal) == 0x0288);
static_assert(offsetof(ABP_Skill_Grenade_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_Grenade_C, GrenadeClass) == 0x0258);
static_assert(offsetof(ABP_Skill_Dash_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_Dash_C, HUDEffect) == 0x0260);
static_assert(offsetof(ABP_Skill_Dash_C, DashTrail) == 0x0270);
static_assert(offsetof(ABP_Skill_BurningBullets_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_BurningBullets_C, ParticleSystem) == 0x0258);
static_assert(offsetof(ABP_Skill_FrenzyFire_C, UberGraphFrame) == 0x0250);
static_assert(offsetof(ABP_Skill_FrenzyFire_C, PointLight) == 0x0258);
static_assert(offsetof(ABP_Skill_FrenzyFire_C, S_FrenzyFire) == 0x0260);
static_assert(offsetof(ABP_Skill_FrenzyFire_C, StaticMesh) == 0x0268);
static_assert(offsetof(ABP_Skill_FrenzyFire_C, Fade__Direction_D26FDC2045133BE42583C9B382581349) == 0x0278);
static_assert(offsetof(ABP_Skill_FrenzyFire_C, Fade) == 0x0280);
static_assert(offsetof(ABP_FreeCam_C, UberGraphFrame) == 0x0280);
static_assert(offsetof(ABP_FreeCam_C, Camera) == 0x0288);
static_assert(offsetof(ABP_FreeCam_C, DefaultSceneRoot) == 0x0290);
static_assert(offsetof(ABP_FreeCam_C, SpectatingPlayer) == 0x02B0);
static_assert(offsetof(ABP_LightActorBase_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_LightActorBase_C, DefaultSceneRoot) == 0x0228);
static_assert(offsetof(ABP_SniperSpot_C, BillBoard) == 0x0220);
static_assert(offsetof(ABP_SniperSpot_C, DefaultSceneRoot) == 0x0228);
static_assert(offsetof(ABP_SniperSpot_C, Team) == 0x0230);
static_assert(offsetof(ABP_VehicleRocket_C, Allied_Rocket) == 0x0220);
static_assert(offsetof(ABP_VehicleRocket_C, DefaultSceneRoot) == 0x0228);
static_assert(offsetof(ABP_AIControllerBase_C, UberGraphFrame) == 0x0328);
static_assert(offsetof(ABP_AIControllerBase_C, AllSniperSpots) == 0x0330);
static_assert(offsetof(ABP_AIControllerBase_C, AlliedSniperSpots) == 0x0340);
static_assert(offsetof(ABP_AIControllerBase_C, AxisSniperSpots) == 0x0350);
static_assert(offsetof(ABP_AIController_Character_C, UberGraphFrame) == 0x0360);
static_assert(offsetof(ABP_AIController_Tank_C, UberGraphFrame) == 0x0360);
static_assert(offsetof(ABP_InteractableBase_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_InteractableBase_C, DefaultSceneRoot) == 0x0228);
static_assert(offsetof(ABP_InteractableBase_C, InteractableName) == 0x0230);
static_assert(offsetof(ABP_VehicleSwapPoster_C, UberGraphFrame) == 0x0248);
static_assert(offsetof(ABP_VehicleSwapPoster_C, Plane) == 0x0250);
static_assert(offsetof(ABP_VehicleSwapPoster_C, VehicleClassToSwapToo) == 0x0258);
static_assert(offsetof(ABP_VehicleSwapPoster_C, VehicleTransform) == 0x0260);
static_assert(offsetof(ABP_VehicleSwapPoster_C, BoardRef) == 0x0290);
static_assert(offsetof(ABP_SimpleProjectilebase_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_SimpleProjectilebase_C, PoisonSmoke) == 0x0228);
static_assert(offsetof(ABP_SimpleProjectilebase_C, FlightSound) == 0x0230);
static_assert(offsetof(ABP_SimpleProjectilebase_C, RotatingMovement) == 0x0238);
static_assert(offsetof(ABP_SimpleProjectilebase_C, StaticMesh) == 0x0240);
static_assert(offsetof(ABP_SimpleProjectilebase_C, DefaultSceneRoot) == 0x0248);
static_assert(offsetof(ABP_SimpleProjectilebase_C, TravelDirection) == 0x0250);
static_assert(offsetof(ABP_SimpleProjectilebase_C, LastLocation) == 0x025C);
static_assert(offsetof(ABP_SimpleProjectilebase_C, Actors_to_Ignore) == 0x0270);
static_assert(offsetof(ABP_SimpleProjectilebase_C, InitialLocation) == 0x0280);
static_assert(offsetof(ABP_SimpleProjectilebase_C, AttackerPawn) == 0x0290);
static_assert(offsetof(ABP_SimpleProjectilebase_C, CharacterImpactSound) == 0x02A8);
static_assert(offsetof(ABP_SimpleProjectilebase_C, EnvironmentImpactSound) == 0x02B0);
static_assert(offsetof(ABP_SimpleProjectilebase_C, ImpactParticle) == 0x02B8);
static_assert(offsetof(ABP_SimpleProjectilebase_C, LastHit) == 0x02D0);
static_assert(offsetof(ABP_SimpleProjectilebase_C, EquipableRef) == 0x0358);
static_assert(offsetof(ABP_SyringeInjector_Old_C, UberGraphFrame) == 0x0360);
static_assert(offsetof(ABP_SyringeInjector_Old_C, MaterialBillboard) == 0x0368);
static_assert(offsetof(ABP_MeleeProjectileBase_C, UberGraphFrame) == 0x0360);
static_assert(offsetof(ABP_MeleeProjectileBase_C, TwirlTrail1) == 0x0368);
static_assert(offsetof(ABP_MeleeProjectileBase_C, TwirlTrail) == 0x0370);
static_assert(offsetof(ABP_Trapbase_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_Trapbase_C, TrapIndicator) == 0x0228);
static_assert(offsetof(ABP_Trapbase_C, P_TrapThrowTrail) == 0x0230);
static_assert(offsetof(ABP_Trapbase_C, TrapActivationRadius) == 0x0238);
static_assert(offsetof(ABP_Trapbase_C, TrapMesh) == 0x0240);
static_assert(offsetof(ABP_Trapbase_C, DefaultSceneRoot) == 0x0248);
static_assert(offsetof(ABP_Trapbase_C, AutoDetonateCountdown__Direction_9A9F1F144D30BD7DC15169B6058158A9) == 0x0254);
static_assert(offsetof(ABP_Trapbase_C, AutoDetonateCountdown) == 0x0258);
static_assert(offsetof(ABP_Trapbase_C, Team) == 0x0260);
static_assert(offsetof(ABP_Trapbase_C, OwningPawn) == 0x0268);
static_assert(offsetof(ABP_Trapbase_C, ThrowDirection) == 0x0270);
static_assert(offsetof(ABP_Trapbase_C, Transform) == 0x0280);
static_assert(offsetof(ABP_Trapbase_C, FinalTransform) == 0x02C0);
static_assert(offsetof(ABP_Trapbase_C, OwnTeam) == 0x02F0);
static_assert(offsetof(ABP_Trapbase_C, DamageType) == 0x02F8);
static_assert(offsetof(ABP_Trapbase_C, BuffDebuff) == 0x0300);
static_assert(offsetof(ABP_Trapbase_C, ExplosionParticle) == 0x0310);
static_assert(offsetof(ABP_Trapbase_C, GlowMID) == 0x0320);
static_assert(offsetof(ABP_ImpactDecal_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_ImpactDecal_C, Decal) == 0x0228);
static_assert(offsetof(ABP_ImpactDecal_C, DefaultSceneRoot) == 0x0230);
static_assert(offsetof(ABP_ImpactDecal_C, DecalMaterials) == 0x0238);
static_assert(offsetof(ABP_ProjectileTrailBase_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_ProjectileTrailBase_C, StaticMesh) == 0x0228);
static_assert(offsetof(ABP_ProjectileTrailBase_C, DefaultSceneRoot) == 0x0230);
static_assert(offsetof(ABP_ProjectileTrailBase_C, Fadeout__Direction_57B9EC33401D951892946496ED83255F) == 0x023C);
static_assert(offsetof(ABP_ProjectileTrailBase_C, FadeOut) == 0x0240);
static_assert(offsetof(ABP_ProjectileTrailBase_C, ProjectileRef) == 0x0248);
static_assert(offsetof(ABP_ProjectileTrailBase_C, FinalLocation) == 0x0250);
static_assert(offsetof(ABP_ProjectileTrailBase_C, LocationToUse) == 0x0260);
static_assert(offsetof(FST_ThrowableAttachment, Component_3_D03C964943C339E274C7399C7409F5AD) == 0x0000);
static_assert(offsetof(FST_ThrowableAttachment, Location_6_59D6BD0E49F739602581F1B30D513893) == 0x0008);
static_assert(offsetof(FST_ThrowableAttachment, Rotation_9_FE6E504541A2B8DBD0ACDF9210367E95) == 0x0014);
static_assert(offsetof(FST_ThrowableAttachment, BoneName_12_E96CC0294A68FBD167121697E5278935) == 0x0020);
static_assert(offsetof(ABP_ProjectileBase_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_ProjectileBase_C, P_Tracer2) == 0x0228);
static_assert(offsetof(ABP_ProjectileBase_C, projectileMesh) == 0x0230);
static_assert(offsetof(ABP_ProjectileBase_C, DefaultSceneRoot) == 0x0238);
static_assert(offsetof(ABP_ProjectileBase_C, FlightDirection) == 0x0240);
static_assert(offsetof(ABP_ProjectileBase_C, LastLocation) == 0x0258);
static_assert(offsetof(ABP_ProjectileBase_C, ActorsToIgnore) == 0x0268);
static_assert(offsetof(ABP_ProjectileBase_C, WeaponDamageRange) == 0x0278);
static_assert(offsetof(ABP_ProjectileBase_C, AlreadyHitActors) == 0x0288);
static_assert(offsetof(ABP_ProjectileBase_C, BuffDebuffToApply) == 0x0298);
static_assert(offsetof(ABP_ProjectileBase_C, TracerType) == 0x02A8);
static_assert(offsetof(ABP_ProjectileBase_C, EnvironmentImpactParticleEffect) == 0x02B8);
static_assert(offsetof(ABP_ProjectileBase_C, CharacterImpactParticleEffect) == 0x02C0);
static_assert(offsetof(ABP_ProjectileBase_C, VehicleImpactParticleEffect) == 0x02C8);
static_assert(offsetof(ABP_ProjectileBase_C, ImpactSound) == 0x02D8);
static_assert(offsetof(ABP_ProjectileBase_C, ImpactDecal) == 0x02E8);
static_assert(offsetof(ABP_ProjectileBase_C, DirectHitDamageType) == 0x02F4);
static_assert(offsetof(ABP_ProjectileBase_C, AOEDamageType) == 0x02F5);
static_assert(offsetof(ABP_ProjectileBase_C, AttackerPawn_DontEdit_) == 0x02F8);
static_assert(offsetof(ABP_ProjectileBase_C, Hit) == 0x0304);
static_assert(offsetof(ABP_ProjectileBase_C, ThrowableTransform) == 0x0390);
static_assert(offsetof(ABP_ProjectileBase_C, ThrowableBounceSound) == 0x03C8);
static_assert(offsetof(ABP_ProjectileBase_C, LastThrowableLocation) == 0x03D0);
static_assert(offsetof(ABP_ProjectileBase_C, InitialLocation) == 0x03E0);
static_assert(offsetof(ABP_ProjectileBase_C, SpecialKillMessage) == 0x0410);
static_assert(offsetof(ABP_ProjectileBase_C, WeaponRangeCurve) == 0x0430);
static_assert(offsetof(ABP_ProjectileBase_C, CharacterOrigin) == 0x0438);
static_assert(offsetof(ABP_ProjectileBase_C, TrailLengthType) == 0x0450);
static_assert(offsetof(ABP_ProjectileBase_C, TrailRef) == 0x0460);
static_assert(offsetof(ABP_ProjectileBase_C, LastStickyThrowableObjectHit) == 0x046C);
static_assert(offsetof(ABP_ProjectileBase_C, ThrowableAttachment) == 0x04F8);
static_assert(offsetof(ABP_ProjectileBase_C, WeaponProjectileExitLocation) == 0x0524);
static_assert(offsetof(ABP_ProjectileBase_C, AOELocation) == 0x0540);
static_assert(offsetof(ABP_ProjectileBase_C, AddedVelocity) == 0x0554);
static_assert(offsetof(ABP_ProjectileBase_C, TrailToUse) == 0x0560);
static_assert(offsetof(ABP_ProjectileBase_C, EquipableClass_optional_) == 0x0568);
static_assert(offsetof(ABP_Bomb_C, UberGraphFrame) == 0x0570);
static_assert(offsetof(ABP_LauncherRocketProjectile_C, UberGraphFrame) == 0x0570);
static_assert(offsetof(ABP_LauncherRocketProjectile_C, TrailEmitter) == 0x0578);
static_assert(offsetof(ABP_LauncherRocketProjectile_C, RocketTrailParticle) == 0x0588);
static_assert(offsetof(ABP_VehicleRocketProjectile_C, UberGraphFrame) == 0x0590);
static_assert(offsetof(ABP_VehicleRocketProjectile_C, S_RocketFlight) == 0x0598);
static_assert(offsetof(ABP_VehicleRocketProjectile_C, TrailEmitter) == 0x05A0);
static_assert(offsetof(ABP_ThrowableProjectileBase_C, UberGraphFrame) == 0x0570);
static_assert(offsetof(ABP_ThrowableProjectileBase_C, P_ThrowableIndicatorEffect) == 0x0578);
static_assert(offsetof(ABP_ThrowableProjectileBase_C, ThrowableTeam) == 0x0580);
static_assert(offsetof(ABP_PowderKegProjectile_C, UberGraphFrame) == 0x0588);
static_assert(offsetof(ABP_PowderKegProjectile_C, Audio) == 0x0590);
static_assert(offsetof(ABP_PowderKegProjectile_C, Fuse) == 0x0598);
static_assert(offsetof(ABP_PowderKegProjectile_C, Timeline_0__Direction_50E651BD46AC8F86F4BA86BBF0CFD8BC) == 0x05A4);
static_assert(offsetof(ABP_PowderKegProjectile_C, Timeline) == 0x05A8);
static_assert(offsetof(ABP_TNTBomb_C, UberGraphFrame) == 0x0588);
static_assert(offsetof(ABP_TNTBomb_C, ClockTicking) == 0x0590);
static_assert(offsetof(ABP_VehicleSwapBoard_Base_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_VehicleSwapBoard_Base_C, BillBoard) == 0x0228);
static_assert(offsetof(ABP_VehicleSwapBoard_Base_C, Vehicle2) == 0x0230);
static_assert(offsetof(ABP_VehicleSwapBoard_Base_C, Vehicle1) == 0x0238);
static_assert(offsetof(ABP_VehicleSwapBoard_Base_C, DefaultSceneRoot) == 0x0240);
static_assert(offsetof(ABP_VehicleSwapBoard_Base_C, VehicleRef_Current_) == 0x0248);
static_assert(offsetof(ABP_VehicleSwapBoard_Base_C, VehicleSeats) == 0x0250);
static_assert(offsetof(ABP_VehicleSwapBoard_Base_C, LastVehicleRef) == 0x0260);
static_assert(offsetof(ABP_DecalManager_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_DecalManager_C, DefaultSceneRoot) == 0x0228);
static_assert(offsetof(ABP_DecalManager_C, Decals) == 0x0230);
static_assert(offsetof(FST_ProjectileHitRequest, HitActor_8_1457B6A24E2C103DD32393BFE4E3948F) == 0x0000);
static_assert(offsetof(FST_ProjectileHitRequest, Location_5_099B3CB34D35CA38949BB2B140F1B1AD) == 0x000C);
static_assert(offsetof(FST_AOEHitRequest, HitActor_11_1457B6A24E2C103DD32393BFE4E3948F) == 0x0000);
static_assert(offsetof(FST_AOEHitRequest, Location_12_099B3CB34D35CA38949BB2B140F1B1AD) == 0x0010);
static_assert(offsetof(FST_AOEHitRequest, CharactersToLaunch_17_FDE948CE47B519044A12B7805BC89973) == 0x0028);
static_assert(offsetof(FST_AOEHitRequest, LaunchVelocities_20_6F092A774D72184B2768058D50F4F536) == 0x0038);
static_assert(offsetof(FST_AOEHitRequest, AOELocation_23_162AF2D741B4F38CF355F081F6821FC2) == 0x0048);
static_assert(offsetof(ABP_PlayerState_C, UberGraphFrame) == 0x0320);
static_assert(offsetof(ABP_PlayerState_C, DefaultSceneRoot) == 0x0328);
static_assert(offsetof(ABP_PlayerState_C, Team) == 0x0330);
static_assert(offsetof(ABP_PlayerState_C, RecentlyKilledPlayer) == 0x0358);
static_assert(offsetof(ABP_PlayerState_C, CachedUsername) == 0x0370);
static_assert(offsetof(ABP_PlayerState_C, ServerStoredProjectiles) == 0x0388);
static_assert(offsetof(ABP_PlayerState_C, RequestedHitQueue) == 0x0398);
static_assert(offsetof(ABP_PlayerState_C, RequestedAOEHitQueue) == 0x03A8);
static_assert(offsetof(ABP_NewSky_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_NewSky_C, DirectionalLight) == 0x0228);
static_assert(offsetof(ABP_NewSky_C, SkySphereMesh) == 0x0230);
static_assert(offsetof(ABP_NewSky_C, DefaultSceneRoot) == 0x0238);
static_assert(offsetof(ABP_NewSky_C, CustomFogColor) == 0x0244);
static_assert(offsetof(ABP_NewSky_C, SkyTexture) == 0x0258);
static_assert(offsetof(ABP_NewSky_C, SunHazeColor) == 0x0268);
static_assert(offsetof(ABP_NewSky_C, LightColor) == 0x0280);
static_assert(offsetof(ABP_NewSky_C, LightDirection) == 0x0290);
static_assert(offsetof(ABP_NewSky_C, ColorOverlay) == 0x02A4);
static_assert(offsetof(ABP_MapCam_C, UberGraphFrame) == 0x0280);
static_assert(offsetof(ABP_MapCam_C, Camera) == 0x0288);
static_assert(offsetof(ABP_MapCam_C, DefaultSceneRoot) == 0x0290);
static_assert(offsetof(ABP_MapCenter_C, BillBoard) == 0x0220);
static_assert(offsetof(ABP_MapCenter_C, DefaultSceneRoot) == 0x0228);
static_assert(offsetof(UActorRefCountDown_C, UberGraphFrame) == 0x00B0);
static_assert(offsetof(UActorRefCountDown_C, Actor) == 0x00B8);
static_assert(offsetof(UPawnDataComponent_C, Team) == 0x0200);
static_assert(offsetof(FST_PlayerStats, Username_11_71DD23E54AAF2301D1C8FBB7BF020142) == 0x0000);
static_assert(offsetof(FST_PlayerStats, Team_15_8CB70CB042C78A0D44A55BAEBC456D54) == 0x0024);
static_assert(offsetof(FST_PlayerStats, PlayerClass_26_D48DC6774EDC301872826DA8F9260DF1) == 0x0028);
static_assert(offsetof(FST_MapVote, MapName_3_A1C8573249839866F394689B36B5D9D1) == 0x0000);
static_assert(offsetof(FST_MapVote, Voters_9_53A78AD347AC166A922CD4BBC68F9F1B) == 0x0010);
static_assert(offsetof(ABP_GameStateBase_C, UberGraphFrame) == 0x0270);
static_assert(offsetof(ABP_GameStateBase_C, DefaultSceneRoot) == 0x0278);
static_assert(offsetof(ABP_GameStateBase_C, VictoriousTeam) == 0x0288);
static_assert(offsetof(ABP_GameStateBase_C, PlayerStats) == 0x02A0);
static_assert(offsetof(ABP_GameStateBase_C, ActiveScenario) == 0x02B0);
static_assert(offsetof(ABP_GameStateBase_C, KillFeed) == 0x02B8);
static_assert(offsetof(ABP_GameStateBase_C, AI_AxisPlayStyle) == 0x02D8);
static_assert(offsetof(ABP_GameStateBase_C, AI_AlliedPlayStyle) == 0x02D9);
static_assert(offsetof(ABP_GameStateBase_C, DecalManager) == 0x02E8);
static_assert(offsetof(ABP_GameStateBase_C, ShuffledAlliedNames) == 0x02F8);
static_assert(offsetof(ABP_GameStateBase_C, ShuffledAxisNames) == 0x0308);
static_assert(offsetof(ABP_GameStateBase_C, MapVotes) == 0x0320);
static_assert(offsetof(ABP_GameStateBase_C, ServerName) == 0x0348);
static_assert(offsetof(ABP_GameStateBase_C, MapCenter) == 0x0360);
static_assert(offsetof(ABP_GameStateBase_C, ServerHostName) == 0x0368);
static_assert(offsetof(ABP_GameStateBase_C, Spawnables_Objectives_) == 0x0378);
static_assert(offsetof(ABP_GameStateBase_C, Spectators) == 0x0388);
static_assert(offsetof(ABP_GameStateBase_C, AliveAlliedCharacters) == 0x0398);
static_assert(offsetof(ABP_GameStateBase_C, AliveAxisCharacters) == 0x03A8);
static_assert(offsetof(ABP_GameStateBase_C, ActivePlanes) == 0x03B8);
static_assert(offsetof(ABP_GameStateBase_C, PlayerToVoteKick) == 0x03D0);
static_assert(offsetof(ABP_GameStateBase_C, YesVotedPlayers) == 0x03E8);
static_assert(offsetof(ABP_GameStateBase_C, NoVotedPlayers) == 0x03F8);
static_assert(offsetof(ABP_GameStateBase_C, GameRulesAndWelcomeMessages) == 0x0420);
static_assert(offsetof(ABP_GameStateBase_C, GameRulesAndMessagesColors) == 0x0430);
static_assert(offsetof(ABP_GameStateBase_C, RulesAndWelcomeMessages) == 0x0450);
static_assert(offsetof(ABP_GameStateBase_C, Supporters) == 0x0470);
static_assert(offsetof(ABP_GameStateBase_C, CaptureAnnouncerSound) == 0x0488);
static_assert(offsetof(ABP_GameStateBase_C, CaptureMusicSound) == 0x0490);
static_assert(offsetof(ABP_GameStateBase_C, RandomLightingScenario) == 0x0498);
static_assert(offsetof(ABP_GameState_Elimination_C, UberGraphFrame) == 0x04B0);
static_assert(offsetof(ABP_Gamestate_DualRocket_C, UberGraphFrame) == 0x04B0);
static_assert(offsetof(ABP_Gamestate_DualRocket_C, RocketRef) == 0x04B8);
static_assert(offsetof(ABP_Gamestate_DualRocket_C, Rockets) == 0x04D0);
static_assert(offsetof(ABP_GameState_Conquest_C, UberGraphFrame) == 0x04B0);
static_assert(offsetof(ABP_GameState_Conquest_C, CaptureAnnouncerSound) == 0x04C8);
static_assert(offsetof(ABP_GameState_Conquest_C, CaptureMusicSound) == 0x04D0);
static_assert(offsetof(ABP_Gamestate_CaptureAndHold_C, UberGraphFrame) == 0x04B0);
static_assert(offsetof(ABP_Gamestate_CaptureAndHold_C, ObjectiveRef) == 0x04B8);
static_assert(offsetof(ABP_Gamestate_CaptureAndHold_C, CaptureAnnouncerSound) == 0x04D0);
static_assert(offsetof(ABP_Gamestate_CaptureAndHold_C, CaptureMusicSound) == 0x04D8);
static_assert(offsetof(FST_UserIDBanCheck, UserID_4_0FFE6D2D4F7D29F9607CEB8559ACE1A5) == 0x0000);
static_assert(offsetof(FST_UserIDBanCheck, ControllerRef_6_F897C4AA4B87B714A5206FA9E3B6231B) == 0x0010);
static_assert(offsetof(ABP_GameModeBase_C, UberGraphFrame) == 0x02C0);
static_assert(offsetof(ABP_GameModeBase_C, DefaultSceneRoot) == 0x02C8);
static_assert(offsetof(ABP_GameModeBase_C, LastFetchedExtraSessionSettings) == 0x02D0);
static_assert(offsetof(ABP_GameModeBase_C, ToBeBanCheckedIDs) == 0x02E8);
static_assert(offsetof(ABP_GameModeBase_C, LatestCommunityBanList) == 0x02F8);
static_assert(offsetof(ABP_GameModeBase_C, LatestCommunityStatBanList) == 0x0308);
static_assert(offsetof(ABP_GameModeBase_C, ConnectedControllers) == 0x0320);
static_assert(offsetof(FST_UnitProgress, UnitAPIName_6_48EAEE4E4461D6D6AAA02F98C3073822) == 0x0000);
static_assert(offsetof(FST_TokenAmount, TokenEvent_7_0EDE68B147468AF2A2C375896D00F5F0) == 0x0000);
static_assert(offsetof(ABP_BaseController_C, UberGraphFrame) == 0x0570);
static_assert(offsetof(ABP_BaseController_C, UnitProgress) == 0x0580);
static_assert(offsetof(ABP_BaseController_C, EventProgess) == 0x05A0);
static_assert(offsetof(ABP_BaseController_C, SteamProcessPopupRef) == 0x05D0);
static_assert(offsetof(ABP_BaseController_C, PostProcessVolume) == 0x05E8);
static_assert(offsetof(ABP_BaseController_C, SteamInventoryPro) == 0x05F8);
static_assert(offsetof(ABP_BaseController_C, LastInventoryHandlePro) == 0x0608);
static_assert(offsetof(ABP_BaseController_C, LatestItems) == 0x0610);
static_assert(offsetof(ABP_BaseController_C, EventTokens) == 0x0620);
static_assert(offsetof(ABP_BaseController_C, SteamRefreshTimerHandler) == 0x0630);
static_assert(offsetof(ABP_MainMenuController_C, UberGraphFrame) == 0x0640);
static_assert(offsetof(ABP_MainMenuController_C, CharacterRef) == 0x0648);
static_assert(offsetof(ABP_MainMenuController_C, MainMenuWidget) == 0x0658);
static_assert(offsetof(ABP_MainMenuController_C, SessionToJoin) == 0x0668);
static_assert(offsetof(ABP_MainMenuController_C, SessionJoinFailureReason) == 0x0770);
static_assert(offsetof(ABP_MainMenuController_C, SessionPasswordToUse) == 0x0780);
static_assert(offsetof(ABP_MainMenuController_C, EquipCam) == 0x0790);
static_assert(offsetof(ABP_MainMenuController_C, EquipCamBodyLoc) == 0x07A0);
static_assert(offsetof(ABP_MainMenuController_C, EquipCamFaceLoc) == 0x07A8);
static_assert(offsetof(ABP_BuffDebuffBase_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_BuffDebuffBase_C, DefaultSceneRoot) == 0x0228);
static_assert(offsetof(ABP_BuffDebuffBase_C, Character) == 0x0230);
static_assert(offsetof(ABP_BuffDebuffBase_C, Attacker) == 0x0238);
static_assert(offsetof(ABP_BuffDebuffBase_C, BuffApplier) == 0x0240);
static_assert(offsetof(ABP_BuffDebuffBase_C, LinkedSkill_Optional_) == 0x0248);
static_assert(offsetof(ABP_Shield_C, UberGraphFrame) == 0x0268);
static_assert(offsetof(ABP_Shield_C, PointLight3) == 0x0270);
static_assert(offsetof(ABP_Shield_C, PointLight2) == 0x0278);
static_assert(offsetof(ABP_Shield_C, PointLight1) == 0x0280);
static_assert(offsetof(ABP_Shield_C, PointLight) == 0x0288);
static_assert(offsetof(ABP_Shield_C, Shield) == 0x0290);
static_assert(offsetof(ABP_Shield_C, Appear__Direction_5B266732424204837AE389B7F2A44323) == 0x02A0);
static_assert(offsetof(ABP_Shield_C, Appear) == 0x02A8);
static_assert(offsetof(ABP_Shield_C, Shatter__Direction_A7436F7D41F9B544D844EAB7C3301E76) == 0x02B8);
static_assert(offsetof(ABP_Shield_C, Shatter) == 0x02C0);
static_assert(offsetof(ABP_Shield_C, ShieldMID) == 0x02D0);
static_assert(offsetof(ABP_Shield_C, ShieldMeshMID) == 0x02D8);
static_assert(offsetof(ABP_SpawnableBase_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_SpawnableBase_C, Widget_SpawnPointSelect) == 0x0228);
static_assert(offsetof(ABP_SpawnableBase_C, DefaultSceneRoot) == 0x0230);
static_assert(offsetof(ABP_SpawnableBase_C, SpawnPointName) == 0x0238);
static_assert(offsetof(ABP_SpawnableBase_C, SpawnType) == 0x0251);
static_assert(offsetof(ABP_SpawnableBase_C, ControllingTeam) == 0x0252);
static_assert(offsetof(ABP_MobileVehicleSpawnPoint_C, UberGraphFrame) == 0x0258);
static_assert(offsetof(ABP_Flag_C, UberGraphFrame) == 0x0258);
static_assert(offsetof(ABP_Flag_C, CaptureRadiusSphere) == 0x0260);
static_assert(offsetof(ABP_Flag_C, OldRadioSong) == 0x0268);
static_assert(offsetof(ABP_Flag_C, Flag) == 0x0270);
static_assert(offsetof(ABP_Flag_C, FlagPole) == 0x0278);
static_assert(offsetof(ABP_Flag_C, Billboard_FlagIcon) == 0x0280);
static_assert(offsetof(ABP_Flag_C, SpawnRadius) == 0x0288);
static_assert(offsetof(ABP_Flag_C, Widget_FlagInfo) == 0x0290);
static_assert(offsetof(ABP_Flag_C, CapturingTeam) == 0x02A0);
static_assert(offsetof(ABP_Flag_C, CapturingPawns) == 0x02B8);
static_assert(offsetof(ABP_Flag_C, InitialControllingTeam) == 0x02CC);
static_assert(offsetof(ABP_CaptureAndHoldObjectiveBase_C, AxisIcon) == 0x02D0);
static_assert(offsetof(ABP_CaptureAndHoldObjectiveBase_C, AlliedIcon) == 0x02D8);
static_assert(offsetof(ABP_CaptureAndHoldObjectiveBase_C, NeutralIcon) == 0x02E0);
static_assert(offsetof(ABP_Rocket_C, UberGraphFrame) == 0x02D0);
static_assert(offsetof(ABP_Rocket_C, Capsule) == 0x02D8);
static_assert(offsetof(ABP_Rocket_C, SpotlightBeam4) == 0x02E0);
static_assert(offsetof(ABP_Rocket_C, SpotlightBeam3) == 0x02E8);
static_assert(offsetof(ABP_Rocket_C, SpotlightBeam2) == 0x02F0);
static_assert(offsetof(ABP_Rocket_C, SpotlightBeam1) == 0x02F8);
static_assert(offsetof(ABP_Rocket_C, V2) == 0x0300);
static_assert(offsetof(ABP_Rocket_C, SpotLight3) == 0x0308);
static_assert(offsetof(ABP_Rocket_C, SpotLight2) == 0x0310);
static_assert(offsetof(ABP_Rocket_C, SpotLight1) == 0x0318);
static_assert(offsetof(ABP_Rocket_C, SpotLight) == 0x0320);
static_assert(offsetof(ABP_Controller_C, UberGraphFrame) == 0x0640);
static_assert(offsetof(ABP_Controller_C, OutOfCombatAlarm) == 0x0648);
static_assert(offsetof(ABP_Controller_C, CharacterRef) == 0x0650);
static_assert(offsetof(ABP_Controller_C, TeamSelectWidget) == 0x0658);
static_assert(offsetof(ABP_Controller_C, HUDWidget) == 0x0660);
static_assert(offsetof(ABP_Controller_C, ActiveSpawnMenu) == 0x0668);
static_assert(offsetof(ABP_Controller_C, IngameMenu) == 0x0670);
static_assert(offsetof(ABP_Controller_C, ChatOverlay) == 0x0678);
static_assert(offsetof(ABP_Controller_C, CustomCommandWidget) == 0x0680);
static_assert(offsetof(ABP_Controller_C, MapCam_SpawnSelect_) == 0x0688);
static_assert(offsetof(ABP_Controller_C, SpectatorCamRef) == 0x0690);
static_assert(offsetof(ABP_Controller_C, DynamicCrosshairScreenLocation) == 0x06A0);
static_assert(offsetof(ABP_Controller_C, VehicleExitTeleportLocation) == 0x06AC);
static_assert(offsetof(ABP_Controller_C, CurrentActiveDamageNumberActors) == 0x06C0);
static_assert(offsetof(ABP_Controller_C, ScoreBoardWidget) == 0x06D0);
static_assert(offsetof(ABP_Controller_C, CurrentCombatZoneState) == 0x06D8);
static_assert(offsetof(ABP_Controller_C, CurrentZoneTypePawnIsIn) == 0x06E0);
static_assert(offsetof(ABP_Controller_C, OwnVotekickVoteChoice) == 0x06ED);
static_assert(offsetof(ABP_Controller_C, MugshotDummy) == 0x06F0);
static_assert(offsetof(ABP_Controller_C, LastUsedTeam) == 0x06F8);
static_assert(offsetof(ABP_Controller_C, DamageNumberActor) == 0x0700);
static_assert(offsetof(ABP_Controller_C, DamageNumberOffscreenWidget) == 0x0708);
static_assert(offsetof(ABP_Poison_C, UberGraphFrame) == 0x0268);
static_assert(offsetof(ABP_Poison_C, Audio) == 0x0270);
static_assert(offsetof(ABP_Poison_C, ParticleSystem) == 0x0278);
static_assert(offsetof(ABP_Burning_C, UberGraphFrame) == 0x0268);
static_assert(offsetof(ABP_Burning_C, PointLight) == 0x0270);
static_assert(offsetof(ABP_Burning_C, Audio) == 0x0278);
static_assert(offsetof(ABP_Burning_C, ParticleSystem) == 0x0280);
static_assert(offsetof(ABP_VehicleSeat_C, UberGraphFrame) == 0x0248);
static_assert(offsetof(ABP_VehicleSeat_C, UsernameLocation) == 0x0250);
static_assert(offsetof(ABP_VehicleSeat_C, Arrow) == 0x0258);
static_assert(offsetof(ABP_VehicleSeat_C, PlayerPosition) == 0x0260);
static_assert(offsetof(ABP_VehicleSeat_C, OccupyingCharacter) == 0x0270);
static_assert(offsetof(ABP_VehicleSeat_C, OldOccupyingCharacter) == 0x0280);
static_assert(offsetof(ABP_Passenger_GunBase_C, UberGraphFrame) == 0x0290);
static_assert(offsetof(ABP_Passenger_GunBase_C, Camera) == 0x0298);
static_assert(offsetof(ABP_Passenger_GunBase_C, StaticMesh) == 0x02A0);
static_assert(offsetof(ABP_Passenger_GunBase_C, BackwardCamLoc) == 0x02A8);
static_assert(offsetof(ABP_Passenger_GunBase_C, BackwardBase) == 0x02B0);
static_assert(offsetof(ABP_Passenger_GunBase_C, MobileSpawnPoint) == 0x02B8);
static_assert(offsetof(ABP_Passenger_GunBase_C, BarrelCamLocation) == 0x02C0);
static_assert(offsetof(ABP_Passenger_GunBase_C, MgFiringSound) == 0x02C8);
static_assert(offsetof(ABP_Passenger_GunBase_C, Muzzle) == 0x02D0);
static_assert(offsetof(ABP_Passenger_GunBase_C, SharedRotation) == 0x02DC);
static_assert(offsetof(ABP_VehicleSeat_TankPassenger_C, UberGraphFrame) == 0x0290);
static_assert(offsetof(ABP_VehicleSeat_TankPassenger_C, Arrow1) == 0x0298);
static_assert(offsetof(FST_VehicleSeatUIDot, UIPosition_5_3DACB0E04BAC22E65E01F5A9DF033610) == 0x0000);
static_assert(offsetof(FST_VehicleSeatUIDot, SeatRef_3_8028422D422549C453760CB43D5C2619) == 0x0010);
static_assert(offsetof(FST_VehicleSeatUIDot, SeatDotWidgetRef_8_7388186C448B300F9849D6BE37079375) == 0x0018);
static_assert(offsetof(ABP_VehicleBase_C, UberGraphFrame) == 0x0280);
static_assert(offsetof(ABP_VehicleBase_C, Arrow) == 0x0288);
static_assert(offsetof(ABP_VehicleBase_C, PhysicsBaseMesh) == 0x0290);
static_assert(offsetof(ABP_VehicleBase_C, VehicleRepairSound) == 0x0298);
static_assert(offsetof(ABP_VehicleBase_C, DriverSeatTransformNew) == 0x02A0);
static_assert(offsetof(ABP_VehicleBase_C, UsernameLocation) == 0x02A8);
static_assert(offsetof(ABP_VehicleBase_C, PawnDataComponent) == 0x02B0);
static_assert(offsetof(ABP_VehicleBase_C, VehicleTransform_AttachToVehiclePhysics_) == 0x02B8);
static_assert(offsetof(ABP_VehicleBase_C, VehicleName) == 0x02C8);
static_assert(offsetof(ABP_VehicleBase_C, Team) == 0x02E3);
static_assert(offsetof(ABP_VehicleBase_C, SpawnTransform) == 0x02F0);
static_assert(offsetof(ABP_VehicleBase_C, ControllerRef) == 0x0328);
static_assert(offsetof(ABP_VehicleBase_C, LastLocation) == 0x0330);
static_assert(offsetof(ABP_VehicleBase_C, ControllingCharacter) == 0x0340);
static_assert(offsetof(ABP_VehicleBase_C, VehicleVelocity) == 0x0348);
static_assert(offsetof(ABP_VehicleBase_C, VehicleDriverAnimation) == 0x038D);
static_assert(offsetof(ABP_VehicleBase_C, VehicleSkinTheme) == 0x03B4);
static_assert(offsetof(ABP_VehicleBase_C, VehicleUsernameFallback_AI_) == 0x03C8);
static_assert(offsetof(ABP_VehicleBase_C, VehicleCollisionKillSpecialMessage) == 0x03E0);
static_assert(offsetof(ABP_VehicleBase_C, VehicleSwapBoard_Optional_) == 0x0400);
static_assert(offsetof(ABP_VehicleBase_C, VehicleSeats) == 0x0410);
static_assert(offsetof(ABP_VehicleBase_C, VehicleTopView_ForUI_) == 0x0428);
static_assert(offsetof(ABP_VehicleBase_C, VehicleSeatUIDotLocations) == 0x0430);
static_assert(offsetof(ABP_VehicleBase_C, ImpactDamageDealer) == 0x0448);
static_assert(offsetof(ABP_Transport_C, UberGraphFrame) == 0x0450);
static_assert(offsetof(ABP_Transport_C, DriverSeatAttachPoint) == 0x0458);
static_assert(offsetof(ABP_Transport_C, Fire) == 0x0460);
static_assert(offsetof(ABP_Transport_C, NavModifier) == 0x0468);
static_assert(offsetof(ABP_Transport_C, CharacterBlockVolumeWhenUnPossessed) == 0x0470);
static_assert(offsetof(ABP_Transport_C, Capsule) == 0x0478);
static_assert(offsetof(ABP_Transport_C, LightConeMesh) == 0x0480);
static_assert(offsetof(ABP_Transport_C, CharacterKillVolume) == 0x0488);
static_assert(offsetof(ABP_Transport_C, FaceCam) == 0x0490);
static_assert(offsetof(ABP_Transport_C, SpotLight) == 0x0498);
static_assert(offsetof(ABP_Transport_C, S_Honk) == 0x04A0);
static_assert(offsetof(ABP_Transport_C, P_MotorbikeExhaust) == 0x04A8);
static_assert(offsetof(ABP_Transport_C, FrontWheel) == 0x04B0);
static_assert(offsetof(ABP_Transport_C, Bike_Front) == 0x04B8);
static_assert(offsetof(ABP_Transport_C, BackWheel) == 0x04C0);
static_assert(offsetof(ABP_Transport_C, SmokeBack2) == 0x04C8);
static_assert(offsetof(ABP_Transport_C, SmokeBack1) == 0x04D0);
static_assert(offsetof(ABP_Transport_C, S_Drift) == 0x04D8);
static_assert(offsetof(ABP_Transport_C, S_MotorBikeEngine) == 0x04E0);
static_assert(offsetof(ABP_Transport_C, SpringArm) == 0x04E8);
static_assert(offsetof(ABP_Transport_C, Camera) == 0x04F0);
static_assert(offsetof(ABP_Transport_C, TransportVehicleMesh) == 0x04F8);
static_assert(offsetof(ABP_Transport_C, VehicleTransform) == 0x0510);
static_assert(offsetof(ABP_Transport_C, LastForwardDirection) == 0x0540);
static_assert(offsetof(ABP_Transport_C, LastVelocity_Server_) == 0x054C);
static_assert(offsetof(ABP_Transport_C, GearSounds) == 0x0570);
static_assert(offsetof(ABP_Transport_C, HonkSound) == 0x0580);
static_assert(offsetof(ABP_Transport_C, LastHitCharacter) == 0x0598);
static_assert(offsetof(ABP_Transport_C, TurnSpeedCurve) == 0x05A0);
static_assert(offsetof(ABP_AAGun_C, UberGraphFrame) == 0x0450);
static_assert(offsetof(ABP_AAGun_C, FaceCam) == 0x0458);
static_assert(offsetof(ABP_AAGun_C, Backward) == 0x0460);
static_assert(offsetof(ABP_AAGun_C, MoveSound) == 0x0468);
static_assert(offsetof(ABP_AAGun_C, Crank) == 0x0470);
static_assert(offsetof(ABP_AAGun_C, DriverSeatTransform) == 0x0478);
static_assert(offsetof(ABP_AAGun_C, DriverSeatBase) == 0x0480);
static_assert(offsetof(ABP_AAGun_C, UsernameLoc) == 0x0488);
static_assert(offsetof(ABP_AAGun_C, RetractingBarrel) == 0x0490);
static_assert(offsetof(ABP_AAGun_C, ProjectileStart) == 0x0498);
static_assert(offsetof(ABP_AAGun_C, Barrel) == 0x04A0);
static_assert(offsetof(ABP_AAGun_C, Camera) == 0x04A8);
static_assert(offsetof(ABP_AAGun_C, BaseGun) == 0x04B0);
static_assert(offsetof(ABP_AAGun_C, Base) == 0x04B8);
static_assert(offsetof(ABP_AAGun_C, BarrelRetract__Direction_55A83F5E4D7A1ED6BD057DB3D9C413FD) == 0x04C4);
static_assert(offsetof(ABP_AAGun_C, BarrelRetract) == 0x04C8);
static_assert(offsetof(ABP_AAGun_C, SharedRotation) == 0x04D4);
static_assert(offsetof(ABP_AAGun_C, Planes) == 0x04E8);
static_assert(offsetof(ABP_AAGun_C, LastBarrelRotation) == 0x0500);
static_assert(offsetof(ABP_AAGun_C, LastBackwardRotation) == 0x050C);
static_assert(offsetof(ABP_LandingCraft_C, UberGraphFrame) == 0x0450);
static_assert(offsetof(ABP_LandingCraft_C, PlayerDetectVolume) == 0x0458);
static_assert(offsetof(ABP_LandingCraft_C, Hatch) == 0x0460);
static_assert(offsetof(ABP_LandingCraft_C, Cube) == 0x0468);
static_assert(offsetof(ABP_LandingCraft_C, EngineSound) == 0x0470);
static_assert(offsetof(ABP_LandingCraft_C, Capsule2) == 0x0478);
static_assert(offsetof(ABP_LandingCraft_C, Capsule1) == 0x0480);
static_assert(offsetof(ABP_LandingCraft_C, Capsule) == 0x0488);
static_assert(offsetof(ABP_LandingCraft_C, Camera) == 0x0490);
static_assert(offsetof(ABP_LandingCraft_C, SpringArm) == 0x0498);
static_assert(offsetof(ABP_LandingCraft_C, StaticMesh) == 0x04A0);
static_assert(offsetof(ABP_LandingCraft_C, LandingCraftSkeleton) == 0x04A8);
static_assert(offsetof(ABP_LandingCraft_C, LandingCraftTransform) == 0x04C0);
static_assert(offsetof(ABP_PlaneBase_C, UberGraphFrame) == 0x0450);
static_assert(offsetof(ABP_PlaneBase_C, WreckageFlamesAndSmoke) == 0x0458);
static_assert(offsetof(ABP_PlaneBase_C, LeftBrokenWing) == 0x0460);
static_assert(offsetof(ABP_PlaneBase_C, RightBrokenWing) == 0x0468);
static_assert(offsetof(ABP_PlaneBase_C, BrokenFuselage) == 0x0470);
static_assert(offsetof(ABP_PlaneBase_C, DivingSound) == 0x0478);
static_assert(offsetof(ABP_PlaneBase_C, S_FastWindSheer) == 0x0480);
static_assert(offsetof(ABP_PlaneBase_C, WarningAlarm) == 0x0488);
static_assert(offsetof(ABP_PlaneBase_C, WEPEngineBoostSound) == 0x0490);
static_assert(offsetof(ABP_PlaneBase_C, FastFlyingWind) == 0x0498);
static_assert(offsetof(ABP_PlaneBase_C, FaceCam) == 0x04A0);
static_assert(offsetof(ABP_PlaneBase_C, AI_FlyTargetDebugSphere) == 0x04A8);
static_assert(offsetof(ABP_PlaneBase_C, AI_ArrowBase1) == 0x04B0);
static_assert(offsetof(ABP_PlaneBase_C, BackWheel) == 0x04B8);
static_assert(offsetof(ABP_PlaneBase_C, Smoke) == 0x04C0);
static_assert(offsetof(ABP_PlaneBase_C, MGSound) == 0x04C8);
static_assert(offsetof(ABP_PlaneBase_C, NS_WingTipTrailRight) == 0x04D0);
static_assert(offsetof(ABP_PlaneBase_C, NS_WingTipTrailLeft) == 0x04D8);
static_assert(offsetof(ABP_PlaneBase_C, EngineSoundIdle) == 0x04E0);
static_assert(offsetof(ABP_PlaneBase_C, PlaneModel) == 0x04E8);
static_assert(offsetof(ABP_PlaneBase_C, WheelRight) == 0x04F0);
static_assert(offsetof(ABP_PlaneBase_C, WheelLeft) == 0x04F8);
static_assert(offsetof(ABP_PlaneBase_C, EngineSoundFar) == 0x0500);
static_assert(offsetof(ABP_PlaneBase_C, EngineSoundFlying) == 0x0508);
static_assert(offsetof(ABP_PlaneBase_C, SpringArm) == 0x0510);
static_assert(offsetof(ABP_PlaneBase_C, Camera) == 0x0518);
static_assert(offsetof(ABP_PlaneBase_C, PhysicsModel) == 0x0520);
static_assert(offsetof(ABP_PlaneBase_C, Gear__Direction_2B721E4044547183BD4B31A26B3DCF7B) == 0x052C);
static_assert(offsetof(ABP_PlaneBase_C, Gear) == 0x0530);
static_assert(offsetof(ABP_PlaneBase_C, PlaneTransform) == 0x0550);
static_assert(offsetof(ABP_PlaneBase_C, Rotors) == 0x05B0);
static_assert(offsetof(ABP_PlaneBase_C, RotorWashes) == 0x05C0);
static_assert(offsetof(ABP_PlaneBase_C, Rudders) == 0x05D0);
static_assert(offsetof(ABP_PlaneBase_C, BackWingFlaps) == 0x05E0);
static_assert(offsetof(ABP_PlaneBase_C, FrontWingFlapsLeft) == 0x05F0);
static_assert(offsetof(ABP_PlaneBase_C, FrontWingFlapsRight) == 0x0600);
static_assert(offsetof(ABP_PlaneBase_C, BackWheels) == 0x0610);
static_assert(offsetof(ABP_PlaneBase_C, Noses) == 0x0620);
static_assert(offsetof(ABP_PlaneBase_C, MachineGunArrows) == 0x0630);
static_assert(offsetof(ABP_PlaneBase_C, StrafingState) == 0x0658);
static_assert(offsetof(ABP_PlaneBase_C, FlyBySoundRef) == 0x0688);
static_assert(offsetof(ABP_PlaneBase_C, LastFlyByLoc) == 0x0690);
static_assert(offsetof(ABP_PlaneBase_C, FlyBySound) == 0x06A0);
static_assert(offsetof(ABP_PlaneBase_C, FlyByAfterSound) == 0x06A8);
static_assert(offsetof(ABP_PlaneBase_C, AI_FlyTargetLocation) == 0x06C0);
static_assert(offsetof(ABP_PlaneBase_C, AI_FlyTargetLocationFinal) == 0x06D0);
static_assert(offsetof(ABP_PlaneBase_C, AI_Target) == 0x06E8);
static_assert(offsetof(ABP_PlaneBase_C, AI_OldTarget) == 0x0700);
static_assert(offsetof(ABP_PlaneBase_C, LastPlaneThatAttackedUs) == 0x0728);
static_assert(offsetof(ABP_PlaneBase_C, AI_DogFightPlaneTarget) == 0x0730);
static_assert(offsetof(ABP_PlaneBase_C, FinalMGProjectileDirection) == 0x075C);
static_assert(offsetof(ABP_PlaneBase_C, LastVelocityBeforeDestroy) == 0x0780);
static_assert(offsetof(ABP_PlaneBase_C, FlyByAfterSoundRef) == 0x0798);
static_assert(offsetof(ABP_PlaneBase_C, AlternatePlaneWeapon) == 0x07AC);
static_assert(offsetof(ABP_PlaneBase_C, MGAOEDamageType) == 0x07D0);
static_assert(offsetof(ABP_PlaneBase_C, MGDirectDamageType) == 0x07D1);
static_assert(offsetof(ABP_PlaneBase_C, SlowFireMGSound) == 0x07D8);
static_assert(offsetof(ABP_Beaufighter_C, UberGraphFrame) == 0x07F0);
static_assert(offsetof(ABP_Beaufighter_C, BackSeatGun) == 0x07F8);
static_assert(offsetof(ABP_Beaufighter_C, EngineBass) == 0x0800);
static_assert(offsetof(ABP_Beaufighter_C, RotorRight) == 0x0808);
static_assert(offsetof(ABP_Beaufighter_C, RotorLeft) == 0x0810);
static_assert(offsetof(ABP_Beaufighter_C, Smoke2) == 0x0818);
static_assert(offsetof(ABP_Beaufighter_C, RotorWashLeft) == 0x0820);
static_assert(offsetof(ABP_Beaufighter_C, FrontWingFlapRight) == 0x0828);
static_assert(offsetof(ABP_Beaufighter_C, FrontWingFlapLeft) == 0x0830);
static_assert(offsetof(ABP_Beaufighter_C, BackWingFlapRight) == 0x0838);
static_assert(offsetof(ABP_Beaufighter_C, BackWingFlapLeft) == 0x0840);
static_assert(offsetof(ABP_Beaufighter_C, Rudder) == 0x0848);
static_assert(offsetof(ABP_Beaufighter_C, RotorWashRight) == 0x0850);
static_assert(offsetof(ABP_Beaufighter_C, MGArrowLeft) == 0x0858);
static_assert(offsetof(ABP_Beaufighter_C, MGArrowRight) == 0x0860);
static_assert(offsetof(ABP_Beaufighter_C, RocketRefs) == 0x0870);
static_assert(offsetof(ABP_P51_C, UberGraphFrame) == 0x07F0);
static_assert(offsetof(ABP_P51_C, RocketMesh6) == 0x07F8);
static_assert(offsetof(ABP_P51_C, RocketMesh5) == 0x0800);
static_assert(offsetof(ABP_P51_C, RocketMesh4) == 0x0808);
static_assert(offsetof(ABP_P51_C, RocketMesh3) == 0x0810);
static_assert(offsetof(ABP_P51_C, RocketMesh2) == 0x0818);
static_assert(offsetof(ABP_P51_C, RocketMesh1) == 0x0820);
static_assert(offsetof(ABP_P51_C, Nose) == 0x0828);
static_assert(offsetof(ABP_P51_C, FrontWingFlapRight) == 0x0830);
static_assert(offsetof(ABP_P51_C, FrontWingFlapLeft) == 0x0838);
static_assert(offsetof(ABP_P51_C, BackWingFlapRight) == 0x0840);
static_assert(offsetof(ABP_P51_C, BackWingFlapLeft) == 0x0848);
static_assert(offsetof(ABP_P51_C, Rudder) == 0x0850);
static_assert(offsetof(ABP_P51_C, RotorWash) == 0x0858);
static_assert(offsetof(ABP_P51_C, Rotor) == 0x0860);
static_assert(offsetof(ABP_P51_C, MGArrowLeft) == 0x0868);
static_assert(offsetof(ABP_P51_C, MGArrowRight) == 0x0870);
static_assert(offsetof(ABP_P51_C, RocketRefs) == 0x0878);
static_assert(offsetof(ABP_P51_C, RocketFlightDirectionTemp) == 0x0888);
static_assert(offsetof(ABP_P51_C, RocketActorsToIgnoreTemp) == 0x0898);
static_assert(offsetof(ABP_EquipableBase_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_EquipableBase_C, EffectMesh) == 0x0228);
static_assert(offsetof(ABP_EquipableBase_C, LeftHandLocation) == 0x0230);
static_assert(offsetof(ABP_EquipableBase_C, ActualHandLocation) == 0x0238);
static_assert(offsetof(ABP_EquipableBase_C, MagazineMesh) == 0x0240);
static_assert(offsetof(ABP_EquipableBase_C, StaticMesh) == 0x0248);
static_assert(offsetof(ABP_EquipableBase_C, DefaultSceneRoot) == 0x0250);
static_assert(offsetof(ABP_EquipableBase_C, EffectMeshFade__Direction_088F12CC4E95EB043BF708B8F8560554) == 0x025C);
static_assert(offsetof(ABP_EquipableBase_C, EffectMeshFade) == 0x0260);
static_assert(offsetof(ABP_EquipableBase_C, WeaponSwapMontage) == 0x0280);
static_assert(offsetof(ABP_EquipableBase_C, CrosshairStyle) == 0x0288);
static_assert(offsetof(ABP_EquipableBase_C, EquipablePose) == 0x0289);
static_assert(offsetof(ABP_EquipableBase_C, OwningCharacter) == 0x0290);
static_assert(offsetof(ABP_EquipableBase_C, NonEmptyMesh) == 0x02F0);
static_assert(offsetof(ABP_EquipableBase_C, EmptyMesh_DuringReload_) == 0x0308);
static_assert(offsetof(ABP_EquipableBase_C, WeaponIdlePose) == 0x0310);
static_assert(offsetof(ABP_EquipableBase_C, WeaponHipPose) == 0x0318);
static_assert(offsetof(ABP_EquipableBase_C, WeaponAimPose) == 0x0320);
static_assert(offsetof(ABP_EquipableBase_C, ReloadAnimation) == 0x0328);
static_assert(offsetof(ABP_EquipableBase_C, WalkingPose) == 0x0330);
static_assert(offsetof(ABP_EquipableBase_C, SprintPose) == 0x0338);
static_assert(offsetof(ABP_EquipableBase_C, SprintStyle) == 0x0340);
static_assert(offsetof(ABP_EquipableBase_C, RightHandPose) == 0x0348);
static_assert(offsetof(ABP_EquipableBase_C, LeftHandPose) == 0x0350);
static_assert(offsetof(ABP_MeleeBase_C, UberGraphFrame) == 0x0368);
static_assert(offsetof(ABP_MeleeBase_C, Poison) == 0x0370);
static_assert(offsetof(ABP_MeleeBase_C, KnifeThrowMode__Direction_9F3F43AA475D87E903958D80F259E3C0) == 0x0384);
static_assert(offsetof(ABP_MeleeBase_C, KnifeThrowMode) == 0x0388);
static_assert(offsetof(ABP_MeleeBase_C, HitActors) == 0x0390);
static_assert(offsetof(ABP_MeleeBase_C, InitialTransform) == 0x03B0);
static_assert(offsetof(ABP_MeleeBase_C, MeleeProjectileClass) == 0x03E8);
static_assert(offsetof(ABP_Throwablebase_C, UberGraphFrame) == 0x0368);
static_assert(offsetof(ABP_Throwablebase_C, ThrowableProjectileClass) == 0x0380);
static_assert(offsetof(ABP_Throwablebase_C, TrapClass) == 0x0388);
static_assert(offsetof(ABP_Throwablebase_C, ImpactParticle) == 0x03A0);
static_assert(offsetof(ABP_Throwablebase_C, ImpactSound) == 0x03A8);
static_assert(offsetof(ABP_Throwablebase_C, ThrowSound) == 0x03B0);
static_assert(offsetof(ABP_Throwablebase_C, AOEDamageType) == 0x03C4);
static_assert(offsetof(ABP_Throwablebase_C, ThrowAnimation) == 0x03E0);
static_assert(offsetof(ABP_GrenadeVolleyAllied_C, StaticMesh2) == 0x03F8);
static_assert(offsetof(ABP_GrenadeVolleyAllied_C, StaticMesh1) == 0x0400);
static_assert(offsetof(ABP_HealingSyringe_C, UberGraphFrame) == 0x0368);
static_assert(offsetof(ABP_HealingSyringe_C, Syringe_Head) == 0x0370);
static_assert(offsetof(ABP_HealingSyringe_C, Arrow) == 0x0378);
static_assert(offsetof(ABP_HealingSyringe_C, LastHits) == 0x0398);
static_assert(offsetof(ABP_HealingSyringe_C, Travel_Direction) == 0x03A8);
static_assert(offsetof(ABP_RangedWeaponBase_C, UberGraphFrame) == 0x0368);
static_assert(offsetof(ABP_RangedWeaponBase_C, SightLocation_Scope_) == 0x0370);
static_assert(offsetof(ABP_RangedWeaponBase_C, FireSound) == 0x0378);
static_assert(offsetof(ABP_RangedWeaponBase_C, PointLight) == 0x0380);
static_assert(offsetof(ABP_RangedWeaponBase_C, BulletEjectLocation) == 0x0388);
static_assert(offsetof(ABP_RangedWeaponBase_C, ReloadSound) == 0x0390);
static_assert(offsetof(ABP_RangedWeaponBase_C, ProjectileStartLocation) == 0x0398);
static_assert(offsetof(ABP_RangedWeaponBase_C, MuzzleFlashLight__Direction_8181B19A45124201F29B1282F21B2AFA) == 0x03A4);
static_assert(offsetof(ABP_RangedWeaponBase_C, MuzzleFlashLight) == 0x03A8);
static_assert(offsetof(ABP_RangedWeaponBase_C, SingleShotFireSound) == 0x03B0);
static_assert(offsetof(ABP_RangedWeaponBase_C, ClipEmptySound) == 0x03B8);
static_assert(offsetof(ABP_RangedWeaponBase_C, ImpactSound) == 0x03C0);
static_assert(offsetof(ABP_RangedWeaponBase_C, InsertMagSoundEffect) == 0x03C8);
static_assert(offsetof(ABP_RangedWeaponBase_C, RemoveMagSoundEffect) == 0x03D0);
static_assert(offsetof(ABP_RangedWeaponBase_C, FinishedReloadSoundEffect) == 0x03D8);
static_assert(offsetof(ABP_RangedWeaponBase_C, FireParticleEffect) == 0x03E0);
static_assert(offsetof(ABP_RangedWeaponBase_C, ImpactParticleEffect) == 0x03F0);
static_assert(offsetof(ABP_RangedWeaponBase_C, VehicleImpactParticle) == 0x03F8);
static_assert(offsetof(ABP_RangedWeaponBase_C, FireAnimation) == 0x0400);
static_assert(offsetof(ABP_RangedWeaponBase_C, HipFireMontageAnimation) == 0x0408);
static_assert(offsetof(ABP_RangedWeaponBase_C, WeaponRange) == 0x0411);
static_assert(offsetof(ABP_RangedWeaponBase_C, DirectDamageType) == 0x0424);
static_assert(offsetof(ABP_RangedWeaponBase_C, AOEDamageType) == 0x0458);
static_assert(offsetof(ABP_RangedWeaponBase_C, ProjectileClass) == 0x0470);
static_assert(offsetof(ABP_RangedWeaponBase_C, FireCameraShake) == 0x04A0);
static_assert(offsetof(ABP_RangedWeaponBase_C, FinalFlightDirection) == 0x04CC);
static_assert(offsetof(ABP_RangedWeaponBase_C, EjectedBulletCaseSize) == 0x04F0);
static_assert(offsetof(ABP_RangedWeaponBase_C, ProjectileTracerType) == 0x0500);
static_assert(offsetof(ABP_RangedWeaponBase_C, ProjectileDirectionsTemp) == 0x0520);
static_assert(offsetof(ABP_RangedWeaponBase_C, ProjectileIDs) == 0x0530);
static_assert(offsetof(ABP_RangedWeaponBase_C, OriginalRelativeTransform_WeaponMesh) == 0x0550);
static_assert(offsetof(ABP_RangedWeaponBase_C, OriginalRelativeTransform_LeftHandLoc) == 0x0580);
static_assert(offsetof(ABP_RangedWeaponBase_C, LeftHandSocketTransform) == 0x05B0);
static_assert(offsetof(ABP_RangedWeaponBase_C, ScopeType) == 0x05E9);
static_assert(offsetof(ABP_RangedWeaponBase_C, MuzzleParticle) == 0x05F0);
static_assert(offsetof(ABP_RangedWeaponBase_C, MuzzleSmokeParticle) == 0x05F8);
static_assert(offsetof(ABP_Bazooka_C, UberGraphFrame) == 0x0608);
static_assert(offsetof(ABP_Bazooka_C, RpgProjectileHalfWay) == 0x0610);
static_assert(offsetof(ABP_Character_C, UberGraphFrame) == 0x04C0);
static_assert(offsetof(ABP_Character_C, SwayTransform) == 0x04C8);
static_assert(offsetof(ABP_Character_C, GlovesSkeletal) == 0x04D0);
static_assert(offsetof(ABP_Character_C, HatSkeletal) == 0x04D8);
static_assert(offsetof(ABP_Character_C, CameraBoom) == 0x04E0);
static_assert(offsetof(ABP_Character_C, LowerFaceSkeletal) == 0x04E8);
static_assert(offsetof(ABP_Character_C, FaceCamLoc) == 0x04F0);
static_assert(offsetof(ABP_Character_C, Waist) == 0x04F8);
static_assert(offsetof(ABP_Character_C, PawnSensing) == 0x0500);
static_assert(offsetof(ABP_Character_C, Sniper_Aim_Sway) == 0x0508);
static_assert(offsetof(ABP_Character_C, FollowCamera) == 0x0510);
static_assert(offsetof(ABP_Character_C, FrontCamSpringArm) == 0x0518);
static_assert(offsetof(ABP_Character_C, GroinAnchor) == 0x0520);
static_assert(offsetof(ABP_Character_C, HeadCollider) == 0x0528);
static_assert(offsetof(ABP_Character_C, Feet) == 0x0530);
static_assert(offsetof(ABP_Character_C, Back) == 0x0538);
static_assert(offsetof(ABP_Character_C, Torso) == 0x0540);
static_assert(offsetof(ABP_Character_C, FacialHair) == 0x0548);
static_assert(offsetof(ABP_Character_C, LowerFace) == 0x0550);
static_assert(offsetof(ABP_Character_C, UpperFace) == 0x0558);
static_assert(offsetof(ABP_Character_C, Parachute) == 0x0560);
static_assert(offsetof(ABP_Character_C, Legs) == 0x0568);
static_assert(offsetof(ABP_Character_C, Hat) == 0x0570);
static_assert(offsetof(ABP_Character_C, CharacterMesh) == 0x0578);
static_assert(offsetof(ABP_Character_C, Actor_Rotation) == 0x0580);
static_assert(offsetof(ABP_Character_C, VehicleSeatCameraAnchor) == 0x0588);
static_assert(offsetof(ABP_Character_C, FrontCamera) == 0x0590);
static_assert(offsetof(ABP_Character_C, ArrowForCameraPitchOffset) == 0x0598);
static_assert(offsetof(ABP_Character_C, UsernameLocation) == 0x05A0);
static_assert(offsetof(ABP_Character_C, PawnDataComponent) == 0x05A8);
static_assert(offsetof(ABP_Character_C, HitEffect__Direction_E043E0274DE7A84B93081385BD6651CF) == 0x05B4);
static_assert(offsetof(ABP_Character_C, HitEffect) == 0x05B8);
static_assert(offsetof(ABP_Character_C, DashOverDistance__Direction_851D435B492B7C2187B81FB53FED2C22) == 0x05C4);
static_assert(offsetof(ABP_Character_C, DashOverDistance) == 0x05C8);
static_assert(offsetof(ABP_Character_C, FireAnimationArms__Direction_8670176B4024F7CC168FE983270F3DA9) == 0x05D4);
static_assert(offsetof(ABP_Character_C, FireAnimationArms) == 0x05D8);
static_assert(offsetof(ABP_Character_C, Timeline_1__Direction_D8E2316D42E8AAC66C62C19F5D83BA45) == 0x05E4);
static_assert(offsetof(ABP_Character_C, Timeline) == 0x05E8);
static_assert(offsetof(ABP_Character_C, ParachuteDeploy__Direction_2BFF20F84400E6DA91A68D9C5FD24DBF) == 0x05F4);
static_assert(offsetof(ABP_Character_C, ParachuteDeploy) == 0x05F8);
static_assert(offsetof(ABP_Character_C, CoreWeapon) == 0x0608);
static_assert(offsetof(ABP_Character_C, Equipable1) == 0x0618);
static_assert(offsetof(ABP_Character_C, Equipable2) == 0x0628);
static_assert(offsetof(ABP_Character_C, Explosive) == 0x0638);
static_assert(offsetof(ABP_Character_C, CoreWeaponEquipable) == 0x0648);
static_assert(offsetof(ABP_Character_C, FirstEquipable) == 0x0650);
static_assert(offsetof(ABP_Character_C, SecondEquipable) == 0x0658);
static_assert(offsetof(ABP_Character_C, ControllerRef_OnlyValidOnServer_) == 0x0660);
static_assert(offsetof(ABP_Character_C, AnimInstance) == 0x0668);
static_assert(offsetof(ABP_Character_C, UsernameRef) == 0x0670);
static_assert(offsetof(ABP_Character_C, InteractableRef) == 0x0678);
static_assert(offsetof(ABP_Character_C, CharacterClass) == 0x0680);
static_assert(offsetof(ABP_Character_C, KillerName) == 0x0688);
static_assert(offsetof(ABP_Character_C, UserName) == 0x06A0);
static_assert(offsetof(ABP_Character_C, AI_Target) == 0x06C0);
static_assert(offsetof(ABP_Character_C, ExplosiveEquipable) == 0x06C8);
static_assert(offsetof(ABP_Character_C, ActiveEquipable) == 0x06D0);
static_assert(offsetof(ABP_Character_C, VehicleRef) == 0x06E8);
static_assert(offsetof(ABP_Character_C, Skill1) == 0x0728);
static_assert(offsetof(ABP_Character_C, Skill2) == 0x0738);
static_assert(offsetof(ABP_Character_C, Skill1Ref) == 0x0750);
static_assert(offsetof(ABP_Character_C, Skill2Ref) == 0x0758);
static_assert(offsetof(ABP_Character_C, AI_TargetVehicleVelocity) == 0x07AC);
static_assert(offsetof(ABP_Character_C, BuffDebuffs) == 0x07C0);
static_assert(offsetof(ABP_Character_C, MovementType) == 0x07F0);
static_assert(offsetof(ABP_Character_C, TempThrowableRef_skill_) == 0x0810);
static_assert(offsetof(ABP_Character_C, VehicleSeat) == 0x0840);
static_assert(offsetof(ABP_Character_C, CurrentTarget) == 0x0858);
static_assert(offsetof(ABP_Character_C, AI_RandomStationaryLookAtRotation) == 0x0860);
static_assert(offsetof(ABP_Character_C, AI_AvailableSkills) == 0x0870);
static_assert(offsetof(ABP_Character_C, AI_SensedPawn) == 0x0880);
static_assert(offsetof(ABP_Character_C, AI_LastTargetThatAttackedUs) == 0x0898);
static_assert(offsetof(ABP_Character_C, PawnThatKilledUs) == 0x08A0);
static_assert(offsetof(ABP_Character_C, LastPawnThatAttackedUs) == 0x08A8);
static_assert(offsetof(ABP_Character_C, LightDirectionSaved) == 0x08B0);
static_assert(offsetof(ABP_Character_C, TeleportLocation) == 0x08EC);
static_assert(offsetof(ABP_Character_C, DeathCamRotation) == 0x08FC);
static_assert(offsetof(ABP_Character_C, CharacterCustomization) == 0x0908);
static_assert(offsetof(ABP_Character_C, VehicleBeneathUs) == 0x0978);
static_assert(offsetof(ABP_Character_C, AI_TargetCenterLocation) == 0x0980);
static_assert(offsetof(ABP_Character_C, LastLaunchInflicter) == 0x09A0);
static_assert(offsetof(ABP_Character_C, DeathLocation) == 0x09A8);
static_assert(offsetof(ABP_Character_C, Legs_MID) == 0x09E0);
static_assert(offsetof(ABP_Character_C, Character_MID) == 0x09E8);
static_assert(offsetof(ABP_Character_C, Hat_Item_MID) == 0x09F0);
static_assert(offsetof(ABP_Character_C, Torso_MIDs) == 0x0A00);
static_assert(offsetof(ABP_Character_C, MapCamRef) == 0x0A18);
static_assert(offsetof(ABP_Character_C, SpawnCamLocationTarget) == 0x0A20);
static_assert(offsetof(ABP_Character_C, ReplicatedMeshAndBoomRotation) == 0x0A58);
static_assert(offsetof(ABP_Character_C, EmoteMenu) == 0x0A68);
static_assert(offsetof(ABP_Character_C, CurrentEmoteMontage) == 0x0A78);
static_assert(offsetof(ABP_Character_C, KillerFaceCamRef) == 0x0A80);
static_assert(offsetof(ABP_Character_C, LastLocation) == 0x0AA0);
static_assert(offsetof(ABP_Character_C, CharacterVelocity_Manual_) == 0x0AAC);
static_assert(offsetof(ABP_Character_C, SpectatingPlayers_indexes_) == 0x0AB8);
static_assert(offsetof(ABP_Character_C, CameraBoomRelLocation_Spectator_) == 0x0AC8);
static_assert(offsetof(ABP_Character_C, VelocityAfterDeath) == 0x0AD8);
static_assert(offsetof(ABP_Character_C, ExtraVelocityAfterDeath) == 0x0AE4);
static_assert(offsetof(ABP_Character_C, CharacterVelocityManualInterpolated) == 0x0AF0);
static_assert(offsetof(ABP_Character_C, PotentialKillAssists) == 0x0B10);
static_assert(offsetof(ABP_Character_C, CharacterData) == 0x0B50);
static_assert(offsetof(ABP_Character_C, CharacterQueuedLaunchVelocities) == 0x0B70);
static_assert(offsetof(ABP_Character_C, VehicleSeatCameraRef) == 0x0B80);
static_assert(offsetof(ABP_Character_C, InAirStartLocation) == 0x0BB0);
static_assert(offsetof(ABP_Character_C, CharacterCustomizationToBeSentFromClient) == 0x0BBC);
static_assert(offsetof(ABP_Character_C, SpecialBulletTrail) == 0x0C18);
static_assert(offsetof(ABP_Character_C, LastDamageDealingLaunchVelocity) == 0x0C4C);
static_assert(offsetof(ABP_Character_C, SlopeDirection) == 0x0C74);
static_assert(offsetof(ABP_PlayerStart_SpawnPoint_C, Billboard1) == 0x0220);
static_assert(offsetof(ABP_PlayerStart_SpawnPoint_C, Arrow) == 0x0228);
static_assert(offsetof(ABP_PlayerStart_SpawnPoint_C, BillBoard) == 0x0230);
static_assert(offsetof(ABP_PlayerStart_SpawnPoint_C, DefaultSceneRoot) == 0x0238);
static_assert(offsetof(ABP_PlayerStart_SpawnPoint_C, Team) == 0x0240);
static_assert(offsetof(ABP_PlayerStart_SpawnPoint_Back_C, Billboard2) == 0x0248);
static_assert(offsetof(ABP_PlayerStart_SpawnPoint_Alt_C, Billboard2) == 0x0248);
static_assert(offsetof(ABP_TankBase_C, UberGraphFrame) == 0x0450);
static_assert(offsetof(ABP_TankBase_C, PassengerSeat) == 0x0458);
static_assert(offsetof(ABP_TankBase_C, SpringArm) == 0x0460);
static_assert(offsetof(ABP_TankBase_C, SpringArmBase) == 0x0468);
static_assert(offsetof(ABP_TankBase_C, BackCollisionDetect) == 0x0470);
static_assert(offsetof(ABP_TankBase_C, FrontCollisionDetect) == 0x0478);
static_assert(offsetof(ABP_TankBase_C, PointLight) == 0x0480);
static_assert(offsetof(ABP_TankBase_C, WreckageFireSound) == 0x0488);
static_assert(offsetof(ABP_TankBase_C, DestroyedWreckageFire) == 0x0490);
static_assert(offsetof(ABP_TankBase_C, ExhaustSmoke) == 0x0498);
static_assert(offsetof(ABP_TankBase_C, FaceCam) == 0x04A0);
static_assert(offsetof(ABP_TankBase_C, ProjectileStart_MG) == 0x04A8);
static_assert(offsetof(ABP_TankBase_C, MGSound_AltFire_) == 0x04B0);
static_assert(offsetof(ABP_TankBase_C, TracksSound) == 0x04B8);
static_assert(offsetof(ABP_TankBase_C, PawnSensing) == 0x04C0);
static_assert(offsetof(ABP_TankBase_C, NavModifier) == 0x04C8);
static_assert(offsetof(ABP_TankBase_C, FloatingPawnMovement) == 0x04D0);
static_assert(offsetof(ABP_TankBase_C, SmokeFront2) == 0x04D8);
static_assert(offsetof(ABP_TankBase_C, SmokeFront1) == 0x04E0);
static_assert(offsetof(ABP_TankBase_C, SmokeBack2) == 0x04E8);
static_assert(offsetof(ABP_TankBase_C, SmokeBack1) == 0x04F0);
static_assert(offsetof(ABP_TankBase_C, ProjectileStart_MainGun) == 0x04F8);
static_assert(offsetof(ABP_TankBase_C, BarrelRotateSound) == 0x0500);
static_assert(offsetof(ABP_TankBase_C, EngineSound) == 0x0508);
static_assert(offsetof(ABP_TankBase_C, Camera) == 0x0510);
static_assert(offsetof(ABP_TankBase_C, Turret) == 0x0518);
static_assert(offsetof(ABP_TankBase_C, Barrel) == 0x0520);
static_assert(offsetof(ABP_TankBase_C, Body) == 0x0528);
static_assert(offsetof(ABP_TankBase_C, TankTransform) == 0x0560);
static_assert(offsetof(ABP_TankBase_C, LocalBarrelRot) == 0x0590);
static_assert(offsetof(ABP_TankBase_C, AI_BarrelLookAtLocation) == 0x05A0);
static_assert(offsetof(ABP_TankBase_C, TurretRotation) == 0x05AC);
static_assert(offsetof(ABP_TankBase_C, BarrelRotation) == 0x05B8);
static_assert(offsetof(ABP_TankBase_C, TireLeftMaterial) == 0x05D0);
static_assert(offsetof(ABP_TankBase_C, TireRightMaterial) == 0x05D8);
static_assert(offsetof(ABP_TankBase_C, LeftWheels) == 0x05E8);
static_assert(offsetof(ABP_TankBase_C, RightWheels) == 0x05F8);
static_assert(offsetof(ABP_TankBase_C, AI_CurrentNavigation) == 0x0610);
static_assert(offsetof(ABP_TankBase_C, AI_TargetObjective) == 0x0628);
static_assert(offsetof(ABP_TankBase_C, AI_TargetEnemy) == 0x0630);
static_assert(offsetof(ABP_TankBase_C, AI_NavData) == 0x0638);
static_assert(offsetof(ABP_TankBase_C, AI_TargetLocationActor) == 0x0640);
static_assert(offsetof(ABP_TankBase_C, AI_AddedTargetVelocity) == 0x0658);
static_assert(offsetof(ABP_TankBase_C, RevSound) == 0x0678);
static_assert(offsetof(ABP_TankBase_C, FinalBarrelLookAtLocation) == 0x0680);
static_assert(offsetof(ABP_TankBase_C, HitActors) == 0x0690);
static_assert(offsetof(ABP_TankBase_C, LastHitLocation) == 0x06A8);
static_assert(offsetof(ABP_TankBase_C, OverlappingActors) == 0x06B8);
static_assert(offsetof(ABP_TankBase_C, DestroyedBodyMesh) == 0x06D0);
static_assert(offsetof(ABP_TankBase_C, DestroyedTurretMesh) == 0x06D8);
static_assert(offsetof(ABP_TankBase_C, MgProjectileDirection) == 0x06EC);
static_assert(offsetof(ABP_TankBase_C, AllWheels) == 0x0700);
static_assert(offsetof(FST_ServerSettings, Servername_11_BF3FF09A4CCE5BEBD3DF268D548B93A6) == 0x0000);
static_assert(offsetof(FST_ServerSettings, Password_17_A99791064F6F83746EF6B6AC15A0294C) == 0x0018);
static_assert(offsetof(FST_ServerSettings, RulesAndWelcomeMessagesOld_46_B9660BE542C35E7ECA23409322B613A9) == 0x0040);
static_assert(offsetof(FST_ServerSettings, RulesAndMessagesColors_43_A16FAA624174C62A8E9E38A5D93774AF) == 0x0050);
static_assert(offsetof(FST_ServerSettings, RulesAndWelcomeMessages_47_A7ACDC3D4991F69280FCEE8F6071495A) == 0x0070);
static_assert(offsetof(USG_ServerSettings_C, ServerSettings) == 0x0028);
static_assert(offsetof(FST_Options, Crosshairs_65_6A194DED48CFA00C056F94AA7D0904CC) == 0x0048);
static_assert(offsetof(FST_Options, SelectedEvent_117_D843C1CB4789AC42295B4A8286A2D30C) == 0x0088);
static_assert(offsetof(USG_Options_C, OPTIONS) == 0x0028);
static_assert(offsetof(USG_Loadout_C, Loadout) == 0x0028);
static_assert(offsetof(FST_SelectedCosmeticItems, FacialHairStyles_46_1FC317574719BA1A39B99D82C3CD5957) == 0x0000);
static_assert(offsetof(FST_SelectedCosmeticItems, HairColors_47_AC0D988246DB7852F8C4A1A72E4273CA) == 0x0010);
static_assert(offsetof(FST_SelectedCosmeticItems, WeaponSkins_45_66C1A89D484238B5826C759CC91FA6D2) == 0x0020);
static_assert(offsetof(FST_SelectedCosmeticItems, SkinTones_51_6FF09F11414BF7CCFDD9589E9B636BF5) == 0x0030);
static_assert(offsetof(FST_SelectedCosmeticItems, Hats_57_409DC7B943AD9A59E136E4910C6F94D3) == 0x0040);
static_assert(offsetof(FST_SelectedCosmeticItems, UpperFaceItems_59_035C7ADF4C969F48CD937396EC79AAC8) == 0x0050);
static_assert(offsetof(FST_SelectedCosmeticItems, LowerFaceItems_61_D5E05DAA40ACF3A0A7C8E88CB7F47C32) == 0x0060);
static_assert(offsetof(FST_SelectedCosmeticItems, Legs_74_00B105BE4B43D4A3AD652B8711CFD60B) == 0x0070);
static_assert(offsetof(FST_SelectedCosmeticItems, HairStyles_67_460627FE4D6382017E5D6FA40FB8C5CB) == 0x0080);
static_assert(offsetof(FST_SelectedCosmeticItems, Torso_75_847EB6C24E1CB4EE98818299ECCFD837) == 0x0090);
static_assert(offsetof(FST_SelectedCosmeticItems, Shirts_77_495545E14EF208F49061B0866D7D5F8E) == 0x00A0);
static_assert(offsetof(FST_SelectedCosmeticItems, Hands_79_23503DBC483675E2254D7794DEB1151C) == 0x00B0);
static_assert(offsetof(FST_SelectedCosmeticItems, Feet_81_8F4C56CA40F15C015BCA9A87569F7826) == 0x00C0);
static_assert(offsetof(FST_SelectedCosmeticItems, Underwear_83_45AD869D45703AEC1FF2BE966EDB4E39) == 0x00D0);
static_assert(offsetof(FST_SelectedCosmeticItems, Back_85_AF22F9814BB6D60AB407B7897D662CEF) == 0x00E0);
static_assert(offsetof(FST_SelectedCosmeticItems, Tattoos_87_524E718948ED70E6FF0D9EADA68919A1) == 0x00F0);
static_assert(offsetof(FST_SelectedCosmeticItems, Waist_92_A7169BE548D9FFDFD99B75AE66F49873) == 0x0100);
static_assert(offsetof(FST_SelectedCosmeticItems, EyeColor_96_82F75F3F42A13A0DA619D89AAE0193FB) == 0x0110);
static_assert(offsetof(FST_SelectedCosmeticItems, Titles_100_FCBD8BD54E6E8095F1F69AA75FA5CD2E) == 0x0120);
static_assert(offsetof(USG_Customization_C, SelectedCosmeticItems) == 0x0028);
static_assert(offsetof(FST_ServerManagerPlayerInfo, SteamID_2_372E8E5647AB2E117B7DAA9423FDB703) == 0x0000);
static_assert(offsetof(FST_ServerManagerPlayerInfo, LastUsername_6_71C2EFE14AEF3D30A8B8A2827FA335F9) == 0x0010);
static_assert(offsetof(USG_BanList_C, PermaBanList) == 0x0028);
static_assert(offsetof(FST_AccountPrivilige, SpecialPrivilege_20_368221D64ED11A21C1CB5CA37AECD08F) == 0x0004);
static_assert(offsetof(UBP_GameInstance_C, UberGraphFrame) == 0x01A8);
static_assert(offsetof(UBP_GameInstance_C, Scenario) == 0x01B8);
static_assert(offsetof(UBP_GameInstance_C, ActiveEventCategory) == 0x01C0);
static_assert(offsetof(UBP_GameInstance_C, ActiveEvent) == 0x01C8);
static_assert(offsetof(UBP_GameInstance_C, SelectedEventPass_Token_) == 0x01D8);
static_assert(offsetof(UBP_GameInstance_C, Version) == 0x01E8);
static_assert(offsetof(UBP_GameInstance_C, OPTIONS) == 0x0200);
static_assert(offsetof(UBP_GameInstance_C, Loadout) == 0x02A0);
static_assert(offsetof(UBP_GameInstance_C, SelectedCosmeticItems) == 0x0350);
static_assert(offsetof(UBP_GameInstance_C, CurrentMap) == 0x0480);
static_assert(offsetof(UBP_GameInstance_C, SelectedClass) == 0x0490);
static_assert(offsetof(UBP_GameInstance_C, RandomMaps) == 0x0498);
static_assert(offsetof(UBP_GameInstance_C, ServerSettings) == 0x04B8);
static_assert(offsetof(UBP_GameInstance_C, PermaBanList) == 0x0548);
static_assert(offsetof(UBP_GameInstance_C, GameDurationBanList) == 0x0558);
static_assert(offsetof(UBP_GameInstance_C, DisconnectErrorCode) == 0x0578);
static_assert(offsetof(UBP_GameInstance_C, AccountPrivileges) == 0x0590);
static_assert(offsetof(UBP_GameInstance_C, LocallyCachedMatchStats) == 0x05A8);
static_assert(offsetof(UBP_GameInstance_C, DefaultCrosshair_DontEdit_) == 0x0610);
static_assert(offsetof(ABP_ChurchLight_C, UberGraphFrame) == 0x0238);
static_assert(offsetof(ABP_ChurchLight_C, StaticMesh) == 0x0240);
static_assert(offsetof(ABP_ChurchLight_C, SpotLight) == 0x0248);
static_assert(offsetof(ABP_DistantShip_C, UberGraphFrame) == 0x0220);
static_assert(offsetof(ABP_DistantShip_C, MaterialBillboard2) == 0x0228);
static_assert(offsetof(ABP_DistantShip_C, MaterialBillboard1) == 0x0230);
static_assert(offsetof(ABP_DistantShip_C, MaterialBillboard) == 0x0238);
static_assert(offsetof(ABP_DistantShip_C, Plane) == 0x0240);
static_assert(offsetof(ABP_DistantShip_C, DefaultSceneRoot) == 0x0248);
static_assert(offsetof(ABP_SpotLight_C, UberGraphFrame) == 0x0238);
static_assert(offsetof(ABP_SpotLight_C, StaticMesh) == 0x0240);
static_assert(offsetof(ABP_SpotLight_C, SpotLight) == 0x0248);
static_assert(offsetof(ABP_SpotLightPole_C, UberGraphFrame) == 0x0238);
static_assert(offsetof(ABP_SpotLightPole_C, StaticMesh) == 0x0240);
static_assert(offsetof(ABP_SpotLightPole_C, StaticMesh1) == 0x0248);
static_assert(offsetof(ABP_SpotLightPole_C, SpotLight) == 0x0250);
static_assert(offsetof(ABP_StreetLantern_C, UberGraphFrame) == 0x0238);
static_assert(offsetof(ABP_StreetLantern_C, StaticMesh) == 0x0240);
static_assert(offsetof(ABP_StreetLantern_C, PointLight) == 0x0248);
static_assert(offsetof(ABP_Transport_Motorbike_Axis_C, UberGraphFrame) == 0x05B8);
static_assert(offsetof(FST_SpawnInfo, Class_2_10E09B794DD963A2487106B1029A132B) == 0x0000);
static_assert(offsetof(FST_SpawnInfo, SpawnTransform_16_2C33737F49A063A98D6C6CA44DDC7E9E) == 0x0010);
static_assert(offsetof(FST_Selectable, Name_21_625DD9664508C43AF9B8C6954F25568E) == 0x0008);
static_assert(offsetof(FST_Selectable, LargeIcon_71_24E5210F48C308FB7A6DDC83B7C6AC5E) == 0x0018);
static_assert(offsetof(FST_Selectable, SmallIcon_70_9D12CA8743137BA95C7C4B8BC6104349) == 0x00A0);
static_assert(offsetof(FST_Selectable, BgColorSkill_74_1836F1E548E3AFF3EE2E8CBEB9A652FF) == 0x0128);
static_assert(offsetof(FST_Selectable, Blueprint_18_728491FC4590C719F8F32C921790AF76) == 0x0138);
static_assert(offsetof(FST_Selectable, Team_13_D4412A6D48193592F72DA98EB1711E32) == 0x0150);
static_assert(offsetof(FST_Selectable, Description_31_E75D316046E9CF34AFE65DA31FB7C72E) == 0x0158);
static_assert(offsetof(FST_Selectable, WeaponTypeWeapon_52_5E28A5444B54B847C7F4D4BA371E63B0) == 0x0173);
static_assert(offsetof(FST_BotName, Name_2_CC0513B146548A843107039FF269FC88) == 0x0000);
static_assert(offsetof(FST_Map, LoadingScreenShot_35_1D3DF4FE459BB4602338D29B464FFF80) == 0x0008);
static_assert(offsetof(FST_Map, ServerBrowserImage_40_F9A734A24BEB33EF89CC57A3408C50FB) == 0x0010);
static_assert(offsetof(FST_Map, DaytimeAmbienceSound_12_2DED413447306B7C60645BBD0CD63FC2) == 0x0018);
static_assert(offsetof(FST_Map, NighttimeAmbienceSound_14_978662F74471C6226CCB6BAD1723AD9D) == 0x0020);
static_assert(offsetof(FST_Map, GameMode_29_C2A079BE4548F578B6C7BFBF0EA61A32) == 0x0028);
static_assert(offsetof(FST_Map, ScenariosOptionalLeaveemptyfordefault_53_F675CF6D4D40E76D4C6ABB9B511C77BE) == 0x0030);
static_assert(offsetof(FST_HairColor, Color_2_F083A5574EEDF2F3454A66A3CF8BDCB7) == 0x0000);
static_assert(offsetof(FST_CharacterFaceCustomizationItem, StaticMesh_7_8BB811C249618A84292352AD8A53294E) == 0x0000);
static_assert(offsetof(FST_CharacterFaceCustomizationItem, SkeletalMesh_6_D6F4CB88422EEAA811F5ABB6725AC58E) == 0x0008);
static_assert(offsetof(FST_CharacterFaceCustomizationItem, Texture1_14_311052DC4E1CC3D8AC01D78D57DFA391) == 0x0010);
static_assert(offsetof(FST_CharacterFaceCustomizationItem, Texture2_13_A19A5FD041BE4A5BA0E38193F7D50043) == 0x0018);
static_assert(offsetof(FST_EventAndTokenSettings, EventCategory_35_EBBE2D2645B140F00D4CE198EB787EFF) == 0x0008);
static_assert(offsetof(FST_EventAndTokenSettings, EventName_60_3C7DD6944A31E2D8CB1C85BAF600D7C7) == 0x0010);
static_assert(offsetof(FST_EventAndTokenSettings, TokenIcon_22_334F5CF346D35FD56778A2AEBE53EDF6) == 0x0028);
static_assert(offsetof(FST_EventAndTokenSettings, TokenIconbackground_53_737BEC3649C5A56D650974A6834CF084) == 0x0030);
static_assert(offsetof(FST_EventAndTokenSettings, EventPassHeaderImage_30_D23880494376FBB6024D008996EF81FB) == 0x0040);
static_assert(offsetof(FST_EventAndTokenSettings, EventPassTitleBgColor_28_3EAAF8044978A2863DC75DB3D1346784) == 0x0048);
static_assert(offsetof(FST_EventAndTokenSettings, EventPassBgColorFront_36_53CACC984637B85A3C94CFA9B9570AC1) == 0x0058);
static_assert(offsetof(FST_EventAndTokenSettings, EventPassBgColorBack_39_8BC9B3274EBA44A94E20F5AD771D7E9A) == 0x0068);
static_assert(offsetof(FST_EventAndTokenSettings, BackgroundColorTop_45_257ED9164C15E42ABCB701A2A21F8B18) == 0x0078);
static_assert(offsetof(FST_EventAndTokenSettings, BackgroundColorBottom_44_0D62807F4E48372D34C3D4A4A8FD1409) == 0x0088);
static_assert(offsetof(FST_EventAndTokenSettings, TokenPouchBgColor_57_034AD05842BB9C26F06EA194184D795F) == 0x0098);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, UberGraphFrame) == 0x02C0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer) == 0x02C8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose) == 0x0348);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose) == 0x04A0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose0) == 0x04C8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_Slot) == 0x04F0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose1) == 0x0538);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose2) == 0x0690);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend) == 0x06B8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend3) == 0x0778);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose4) == 0x0838);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose5) == 0x0990);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose6) == 0x09B8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend7) == 0x09E0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose8) == 0x0AA0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend9) == 0x0AC8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose10) == 0x0B88);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose11) == 0x0BB0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer12) == 0x0BD8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone) == 0x0C58);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend13) == 0x0D60);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose14) == 0x0E20);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer15) == 0x0E48);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose16) == 0x0EC8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool) == 0x1020);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_TwoWayBlend) == 0x10C0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer17) == 0x1188);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend18) == 0x1208);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_Slot19) == 0x12C8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone20) == 0x1310);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone21) == 0x1418);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone22) == 0x1520);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend23) == 0x1628);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer24) == 0x16E8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone25) == 0x1768);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone26) == 0x1870);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone27) == 0x1978);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone28) == 0x1A80);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend29) == 0x1B88);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone30) == 0x1C48);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose31) == 0x1D50);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose32) == 0x1D78);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone33) == 0x1DA0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer34) == 0x1EA8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone35) == 0x1F28);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone36) == 0x2030);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer37) == 0x2138);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer38) == 0x21B8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone39) == 0x2238);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone40) == 0x2340);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone41) == 0x2448);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByEnum) == 0x2550);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool42) == 0x2600);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone43) == 0x26A0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_TwoWayBlend44) == 0x27A8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ComponentToLocalSpace) == 0x2870);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose45) == 0x2890);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose46) == 0x29E8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose47) == 0x2A10);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LocalToComponentSpace) == 0x2A38);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend48) == 0x2A58);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer49) == 0x2B18);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer50) == 0x2B98);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByEnum51) == 0x2C18);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer52) == 0x2CC8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer53) == 0x2D48);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer54) == 0x2DC8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer55) == 0x2E48);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend56) == 0x2EC8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_Slot57) == 0x2F88);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose58) == 0x2FD0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose59) == 0x3128);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose60) == 0x3150);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose61) == 0x3178);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose62) == 0x31A0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose63) == 0x31C8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose64) == 0x3320);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer65) == 0x3348);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ApplyAdditive) == 0x33C8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer66) == 0x3490);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer67) == 0x3510);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer68) == 0x3590);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_Slot69) == 0x3610);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend70) == 0x3658);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose71) == 0x3718);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose72) == 0x3870);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose73) == 0x3898);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose74) == 0x38C0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose75) == 0x3A18);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool76) == 0x3A40);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendSpacePlayer) == 0x3AE0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone77) == 0x3BC8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone78) == 0x3CD0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone79) == 0x3DD8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone80) == 0x3EE0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend81) == 0x3FE8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone82) == 0x40A8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend83) == 0x41B0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose84) == 0x4270);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose85) == 0x43C8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose86) == 0x43F0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone87) == 0x4418);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer88) == 0x4520);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool89) == 0x45A0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose90) == 0x4640);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByEnum91) == 0x4668);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose92) == 0x4718);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer93) == 0x4740);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend94) == 0x47C0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool95) == 0x4880);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose96) == 0x4920);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer97) == 0x4948);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend98) == 0x49C8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer99) == 0x4A88);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer100) == 0x4B08);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool101) == 0x4B88);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer102) == 0x4C28);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool103) == 0x4CA8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer104) == 0x4D48);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone105) == 0x4DC8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_Slot106) == 0x4ED0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend107) == 0x4F18);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone108) == 0x4FD8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone109) == 0x50E0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose110) == 0x51E8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose111) == 0x5210);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose112) == 0x5368);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer113) == 0x5390);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_Fabrik) == 0x5410);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ComponentToLocalSpace114) == 0x55A0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone115) == 0x55C0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend116) == 0x56C8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone117) == 0x5788);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose118) == 0x5890);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose119) == 0x59E8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend120) == 0x5A10);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose121) == 0x5AD0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose122) == 0x5AF8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone123) == 0x5C50);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone124) == 0x5D58);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool125) == 0x5E60);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer126) == 0x5F00);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_Slot127) == 0x5F80);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend128) == 0x5FC8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose129) == 0x6088);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose130) == 0x61E0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose131) == 0x6208);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone132) == 0x6230);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone133) == 0x6338);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone134) == 0x6440);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer135) == 0x6548);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool136) == 0x65C8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone137) == 0x6668);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool138) == 0x6770);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer139) == 0x6810);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend140) == 0x6890);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer141) == 0x6950);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer142) == 0x69D0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool143) == 0x6A50);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer144) == 0x6AF0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer145) == 0x6B70);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend146) == 0x6BF0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose147) == 0x6CB0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer148) == 0x6CD8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByEnum149) == 0x6D58);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool150) == 0x6E08);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose151) == 0x6EA8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose152) == 0x6ED0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool153) == 0x6EF8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer154) == 0x6F98);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequenceEvaluator) == 0x7018);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend155) == 0x7068);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose156) == 0x7128);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose157) == 0x7280);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose158) == 0x72A8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend159) == 0x72D0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer160) == 0x7390);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend161) == 0x7410);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose162) == 0x74D0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_TwoWayBlend163) == 0x74F8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend164) == 0x75C0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend165) == 0x7680);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose166) == 0x7740);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose167) == 0x7768);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend168) == 0x7790);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose169) == 0x7850);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByEnum170) == 0x7878);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer171) == 0x7928);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose172) == 0x79A8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose173) == 0x7B00);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose174) == 0x7B28);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose175) == 0x7C80);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose176) == 0x7CA8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose177) == 0x7E00);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer178) == 0x7E28);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose179) == 0x7EA8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool180) == 0x7ED0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByEnum181) == 0x7F70);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose182) == 0x8020);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose183) == 0x8178);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose184) == 0x81A0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend185) == 0x81C8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendSpacePlayer186) == 0x8288);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool187) == 0x8370);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose188) == 0x8410);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose189) == 0x8438);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool190) == 0x8590);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose191) == 0x8630);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool192) == 0x8658);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool193) == 0x86F8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer194) == 0x8798);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool195) == 0x8818);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose196) == 0x88B8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose197) == 0x8A10);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose198) == 0x8A38);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose199) == 0x8A60);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose200) == 0x8A88);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_TwoWayBlend201) == 0x8AB0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend202) == 0x8B78);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend203) == 0x8C38);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose204) == 0x8CF8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose205) == 0x8D20);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_TransitionResult) == 0x8D48);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer206) == 0x8D70);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_StateResult) == 0x8DF0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer207) == 0x8E20);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_StateResult208) == 0x8EA0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_StateMachine) == 0x8ED0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose209) == 0x8F80);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend210) == 0x8FA8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer211) == 0x9068);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend212) == 0x90E8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose213) == 0x91A8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose214) == 0x91D0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone215) == 0x91F8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose216) == 0x9300);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend217) == 0x9328);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend218) == 0x93E8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose219) == 0x94A8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose220) == 0x94D0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool221) == 0x94F8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose222) == 0x9598);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_TwoWayBlend223) == 0x95C0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose224) == 0x9688);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend225) == 0x96B0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer226) == 0x9770);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool227) == 0x97F0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer228) == 0x9890);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_Slot229) == 0x9910);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone230) == 0x9958);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone231) == 0x9A60);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone232) == 0x9B68);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool233) == 0x9C70);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer234) == 0x9D10);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool235) == 0x9D90);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LookAt) == 0x9E30);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LookAt236) == 0x9FE0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LookAt237) == 0xA190);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool238) == 0xA340);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer239) == 0xA3E0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_TwoWayBlend240) == 0xA460);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer241) == 0xA528);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose242) == 0xA5A8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose243) == 0xA700);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose244) == 0xA728);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LookAt245) == 0xA750);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool246) == 0xA900);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer247) == 0xA9A0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer248) == 0xAA20);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool249) == 0xAAA0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone250) == 0xAB40);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose251) == 0xAC48);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool252) == 0xAC70);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LocalToComponentSpace253) == 0xAD10);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ComponentToLocalSpace254) == 0xAD30);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ComponentToLocalSpace255) == 0xAD50);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose256) == 0xAD70);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose257) == 0xAEC8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LocalToComponentSpace258) == 0xAEF0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose259) == 0xAF10);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LocalToComponentSpace260) == 0xAF38);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ComponentToLocalSpace261) == 0xAF58);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone262) == 0xAF78);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone263) == 0xB080);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone264) == 0xB188);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone265) == 0xB290);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone266) == 0xB398);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone267) == 0xB4A0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_Slot268) == 0xB5A8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone269) == 0xB5F0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone270) == 0xB6F8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone271) == 0xB800);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_ModifyBone272) == 0xB908);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose273) == 0xBA10);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool274) == 0xBA38);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose275) == 0xBAD8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose276) == 0xBC30);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose277) == 0xBC58);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_Slot278) == 0xBC80);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendSpacePlayer279) == 0xBCC8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool280) == 0xBDB0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer281) == 0xBE50);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_TwoWayBlend282) == 0xBED0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose283) == 0xBF98);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend284) == 0xBFC0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_UseCachedPose285) == 0xC080);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LocalToComponentSpace286) == 0xC0A8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_LayeredBoneBlend287) == 0xC0C8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose288) == 0xC188);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_Root) == 0xC2E0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool289) == 0xC310);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SequencePlayer290) == 0xC3B0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_BlendListByBool291) == 0xC430);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, AnimGraphNode_SaveCachedPose292) == 0xC4D0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, WeaponPose) == 0xC63B);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, VehicleAnimation) == 0xC64D);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, MannequinClass) == 0xC66F);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, MannequinTeam) == 0xC680);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, CharacterRef) == 0xC688);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, LookAtTarget) == 0xC6A0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, LookAtTargetInterpolated) == 0xC6AC);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, MotorbikePose) == 0xC6C1);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, MeleeMode) == 0xC6F5);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, RightShoulderLocation) == 0xC724);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, Team) == 0xC76A);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, LeftHandIKLocation) == 0xC770);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, ActiveEquipable) == 0xC7A8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, MannequinRef) == 0xC7B8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, WeaponHipPose) == 0xC7E0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, ReloadAnimation) == 0xC7F0);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, SprintPose) == 0xC7F8);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, RightHandPose) == 0xC800);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, Left_Hand_Pose) == 0xC810);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, Special_Sprint_Style) == 0xC818);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, GroinYawLookAtTarget) == 0xC848);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, WeaponAimPose) == 0xC878);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, WeaponIdlePose) == 0xC888);
static_assert(offsetof(UCharacter_Idle_Skeleton_AnimBlueprint_New_C, WeaponWalkingPose) == 0xC898);
static_assert(offsetof(UW_EmoteMenu_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_EmoteMenu_C, Appear) == 0x0268);
static_assert(offsetof(UW_EmoteMenu_C, Button) == 0x0270);
static_assert(offsetof(UW_EmoteMenu_C, Button0) == 0x0278);
static_assert(offsetof(UW_EmoteMenu_C, Button1) == 0x0280);
static_assert(offsetof(UW_EmoteMenu_C, Button2) == 0x0288);
static_assert(offsetof(UW_EmoteMenu_C, Button3) == 0x0290);
static_assert(offsetof(UW_EmoteMenu_C, Button4) == 0x0298);
static_assert(offsetof(UW_EmoteMenu_C, Button5) == 0x02A0);
static_assert(offsetof(UW_EmoteMenu_C, Button6) == 0x02A8);
static_assert(offsetof(UW_EmoteMenu_C, Button7) == 0x02B0);
static_assert(offsetof(UW_EmoteMenu_C, Image) == 0x02B8);
static_assert(offsetof(UW_EmoteMenu_C, Image8) == 0x02C0);
static_assert(offsetof(UW_EmoteMenu_C, Image9) == 0x02C8);
static_assert(offsetof(UW_EmoteMenu_C, Image10) == 0x02D0);
static_assert(offsetof(UW_EmoteMenu_C, Image11) == 0x02D8);
static_assert(offsetof(UW_EmoteMenu_C, Image12) == 0x02E0);
static_assert(offsetof(UW_EmoteMenu_C, SizeBox) == 0x02E8);
static_assert(offsetof(UW_EmoteMenu_C, VerticalBox) == 0x02F0);
static_assert(offsetof(UW_EmoteMenu_C, EmoteMontage) == 0x02F8);
static_assert(offsetof(UW_Username_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_Username_C, CanvasPanel) == 0x0268);
static_assert(offsetof(UW_Username_C, Image) == 0x0270);
static_assert(offsetof(UW_Username_C, ProgressBar) == 0x0278);
static_assert(offsetof(UW_Username_C, TextBlock) == 0x0280);
static_assert(offsetof(UW_Username_C, TextBlock0) == 0x0288);
static_assert(offsetof(UW_Username_C, VerticalBox) == 0x0290);
static_assert(offsetof(UW_Username_C, Character) == 0x0298);
static_assert(offsetof(UW_Username_C, Pawn) == 0x02A8);
static_assert(offsetof(UW_BanTypeConfirm_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_BanTypeConfirm_C, Image) == 0x0268);
static_assert(offsetof(UW_BanTypeConfirm_C, W_Button) == 0x0270);
static_assert(offsetof(UW_BanTypeConfirm_C, W_Button0) == 0x0278);
static_assert(offsetof(UW_BanTypeConfirm_C, W_CloseButton_C) == 0x0280);
static_assert(offsetof(UW_BanTypeConfirm_C, W_TextBox_BanReason) == 0x0288);
static_assert(offsetof(UW_BanTypeConfirm_C, PlayerState) == 0x0290);
static_assert(offsetof(UW_SteamIDCard_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_SteamIDCard_C, Border) == 0x0268);
static_assert(offsetof(UW_SteamIDCard_C, Image) == 0x0270);
static_assert(offsetof(UW_SteamIDCard_C, W_CloseButton_C) == 0x0278);
static_assert(offsetof(UW_SteamIDCard_C, W_TextBox) == 0x0280);
static_assert(offsetof(UW_SteamIDCard_C, SteamID) == 0x0288);
static_assert(offsetof(UW_DamageNumber_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_DamageNumber_C, CanvasPanel) == 0x0268);
static_assert(offsetof(UW_DamageNumber_C, CanvasPanel0) == 0x0270);
static_assert(offsetof(UW_DamageNumber_C, DmgNumberHeightCurve) == 0x0298);
static_assert(offsetof(UW_DamageNumber_C, DamageType) == 0x02A1);
static_assert(offsetof(UW_DamageNumber_C, DamageInfo) == 0x02A8);
static_assert(offsetof(UW_DamageNumber_C, Time_Stamp) == 0x02C0);
static_assert(offsetof(UW_VoteKickEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_VoteKickEntry_C, TextBlock) == 0x0268);
static_assert(offsetof(UW_VoteKickEntry_C, W_Button) == 0x0270);
static_assert(offsetof(UW_VoteKickEntry_C, W_Button0) == 0x0278);
static_assert(offsetof(UW_VoteKickEntry_C, PlayerState) == 0x0280);
static_assert(offsetof(UW_KickBanEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_KickBanEntry_C, TextBlock) == 0x0268);
static_assert(offsetof(UW_KickBanEntry_C, W_Button) == 0x0270);
static_assert(offsetof(UW_KickBanEntry_C, PlayerState) == 0x0278);
static_assert(offsetof(UW_BanListEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_BanListEntry_C, TextBlock) == 0x0268);
static_assert(offsetof(UW_BanListEntry_C, TextBlock0) == 0x0270);
static_assert(offsetof(UW_BanListEntry_C, W_Button) == 0x0278);
static_assert(offsetof(UW_BanListEntry_C, PlayerInfo) == 0x0280);
static_assert(offsetof(UW_BanListEntry_C, ServerManagementWidgetRef) == 0x02A0);
static_assert(offsetof(UW_ChatEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ChatEntry_C, FadeOut) == 0x0268);
static_assert(offsetof(UW_ChatEntry_C, RichTextBlock) == 0x0270);
static_assert(offsetof(UW_ChatEntry_C, UserName) == 0x0278);
static_assert(offsetof(UW_ChatEntry_C, Message) == 0x0290);
static_assert(offsetof(UW_ChatEntry_C, Team) == 0x02A9);
static_assert(offsetof(UW_IngameChat_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_IngameChat_C, CanvasPanel) == 0x0268);
static_assert(offsetof(UW_IngameChat_C, EditableTextBox) == 0x0270);
static_assert(offsetof(UW_IngameChat_C, SizeBox) == 0x0278);
static_assert(offsetof(UW_IngameChat_C, VerticalBox) == 0x0280);
static_assert(offsetof(UW_IngameChat_C, WidgetSwitcher) == 0x0288);
static_assert(offsetof(UW_ServerManagement_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ServerManagement_C, ScrollBox_BanList) == 0x0268);
static_assert(offsetof(UW_ServerManagement_C, ScrollBox_PlayerList) == 0x0270);
static_assert(offsetof(UW_ServerManagement_C, TextBlock) == 0x0278);
static_assert(offsetof(UW_ServerManagement_C, W_CloseButton) == 0x0280);
static_assert(offsetof(UW_ServerManagement_C, W_KickBanEntry) == 0x0288);
static_assert(offsetof(UW_ServerManagement_C, W_KickBanEntry0) == 0x0290);
static_assert(offsetof(UW_ServerManagement_C, W_Tab_Banlist) == 0x0298);
static_assert(offsetof(UW_ServerManagement_C, W_Tab_GameSettings) == 0x02A0);
static_assert(offsetof(UW_ServerManagement_C, W_Tab_KickBan) == 0x02A8);
static_assert(offsetof(UW_ServerManagement_C, W_Tab_VoteKick) == 0x02B0);
static_assert(offsetof(UW_ServerManagement_C, WidgetSwitcher) == 0x02B8);
static_assert(offsetof(UW_ScoreboardSpectatorEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ScoreboardSpectatorEntry_C, TextBlock) == 0x0268);
static_assert(offsetof(UW_ScoreboardSpectatorEntry_C, SpectatorName) == 0x0270);
static_assert(offsetof(UW_ScoreboardSpectatorEntry_C, CachedFontStyle) == 0x0288);
static_assert(offsetof(UW_ScoreboardEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ScoreboardEntry_C, Border) == 0x0268);
static_assert(offsetof(UW_ScoreboardEntry_C, Image) == 0x0270);
static_assert(offsetof(UW_ScoreboardEntry_C, Image0) == 0x0278);
static_assert(offsetof(UW_ScoreboardEntry_C, TextBlock) == 0x0280);
static_assert(offsetof(UW_ScoreboardEntry_C, TextBlock1) == 0x0288);
static_assert(offsetof(UW_ScoreboardEntry_C, TextBlock2) == 0x0290);
static_assert(offsetof(UW_ScoreboardEntry_C, TextBlock3) == 0x0298);
static_assert(offsetof(UW_ScoreboardEntry_C, TextBlock4) == 0x02A0);
static_assert(offsetof(UW_ScoreboardEntry_C, TextBlock5) == 0x02A8);
static_assert(offsetof(UW_ScoreboardEntry_C, TextBlock6) == 0x02B0);
static_assert(offsetof(UW_ScoreboardEntry_C, UserName) == 0x02C8);
static_assert(offsetof(UW_ScoreboardEntry_C, PlayerClass) == 0x02E0);
static_assert(offsetof(UW_ScoreboardEntry_C, CachedFontStyle) == 0x02F0);
static_assert(offsetof(UW_ScoreboardEntry_C, PrestigeRank) == 0x0348);
static_assert(offsetof(UW_TeamSelect_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_TeamSelect_C, Button) == 0x0268);
static_assert(offsetof(UW_TeamSelect_C, Button0) == 0x0270);
static_assert(offsetof(UW_TeamSelect_C, HorizontalBox) == 0x0278);
static_assert(offsetof(UW_TeamSelect_C, HorizontalBox1) == 0x0280);
static_assert(offsetof(UW_TeamSelect_C, Image) == 0x0288);
static_assert(offsetof(UW_TeamSelect_C, Image2) == 0x0290);
static_assert(offsetof(UW_TeamSelect_C, Image3) == 0x0298);
static_assert(offsetof(UW_TeamSelect_C, Image4) == 0x02A0);
static_assert(offsetof(UW_TeamSelect_C, Image5) == 0x02A8);
static_assert(offsetof(UW_TeamSelect_C, RichTextBlock) == 0x02B0);
static_assert(offsetof(UW_TeamSelect_C, TextBlock) == 0x02B8);
static_assert(offsetof(UW_TeamSelect_C, TextBlock6) == 0x02C0);
static_assert(offsetof(UW_TeamSelect_C, TextBlock7) == 0x02C8);
static_assert(offsetof(UW_TeamSelect_C, W_Button) == 0x02D0);
static_assert(offsetof(UW_TeamSelect_C, WidgetSwitcher) == 0x02D8);
static_assert(offsetof(UW_ScoreBoard_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ScoreBoard_C, SlideDown) == 0x0268);
static_assert(offsetof(UW_ScoreBoard_C, Image) == 0x0270);
static_assert(offsetof(UW_ScoreBoard_C, Image0) == 0x0278);
static_assert(offsetof(UW_ScoreBoard_C, Image1) == 0x0280);
static_assert(offsetof(UW_ScoreBoard_C, Image2) == 0x0288);
static_assert(offsetof(UW_ScoreBoard_C, Image3) == 0x0290);
static_assert(offsetof(UW_ScoreBoard_C, Image4) == 0x0298);
static_assert(offsetof(UW_ScoreBoard_C, Image5) == 0x02A0);
static_assert(offsetof(UW_ScoreBoard_C, Image6) == 0x02A8);
static_assert(offsetof(UW_ScoreBoard_C, Image7) == 0x02B0);
static_assert(offsetof(UW_ScoreBoard_C, Image8) == 0x02B8);
static_assert(offsetof(UW_ScoreBoard_C, Image9) == 0x02C0);
static_assert(offsetof(UW_ScoreBoard_C, Image10) == 0x02C8);
static_assert(offsetof(UW_ScoreBoard_C, Image11) == 0x02D0);
static_assert(offsetof(UW_ScoreBoard_C, Image12) == 0x02D8);
static_assert(offsetof(UW_ScoreBoard_C, Image13) == 0x02E0);
static_assert(offsetof(UW_ScoreBoard_C, Image14) == 0x02E8);
static_assert(offsetof(UW_ScoreBoard_C, Image15) == 0x02F0);
static_assert(offsetof(UW_ScoreBoard_C, Image16) == 0x02F8);
static_assert(offsetof(UW_ScoreBoard_C, Image17) == 0x0300);
static_assert(offsetof(UW_ScoreBoard_C, Image18) == 0x0308);
static_assert(offsetof(UW_ScoreBoard_C, Image19) == 0x0310);
static_assert(offsetof(UW_ScoreBoard_C, ScrollBox_Allies) == 0x0318);
static_assert(offsetof(UW_ScoreBoard_C, ScrollBox_Axis) == 0x0320);
static_assert(offsetof(UW_ScoreBoard_C, TextBlock) == 0x0328);
static_assert(offsetof(UW_ScoreBoard_C, TextBlock20) == 0x0330);
static_assert(offsetof(UW_ScoreBoard_C, TextBlock21) == 0x0338);
static_assert(offsetof(UW_ScoreBoard_C, W_ScoreboardEntry) == 0x0340);
static_assert(offsetof(UW_ScoreBoard_C, W_ScoreboardEntry22) == 0x0348);
static_assert(offsetof(UW_ScoreBoard_C, W_ScoreboardEntry23) == 0x0350);
static_assert(offsetof(UW_ScoreBoard_C, W_ScoreboardEntry24) == 0x0358);
static_assert(offsetof(UW_ScoreBoard_C, W_ScoreboardSpectatorEntry) == 0x0360);
static_assert(offsetof(UW_ScoreBoard_C, W_ScoreboardSpectatorEntry25) == 0x0368);
static_assert(offsetof(UW_ScoreBoard_C, W_ScoreboardSpectatorEntry26) == 0x0370);
static_assert(offsetof(UW_ScoreBoard_C, W_ScoreboardSpectatorEntry27) == 0x0378);
static_assert(offsetof(UW_ScoreBoard_C, W_ScoreboardSpectatorEntry28) == 0x0380);
static_assert(offsetof(UW_ScoreBoard_C, WrapBox_Spectators) == 0x0388);
static_assert(offsetof(UW_IngameMenu_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_IngameMenu_C, Appear) == 0x0268);
static_assert(offsetof(UW_IngameMenu_C, Image) == 0x0270);
static_assert(offsetof(UW_IngameMenu_C, W_Button_C) == 0x0278);
static_assert(offsetof(UW_IngameMenu_C, W_Button_C0) == 0x0280);
static_assert(offsetof(UW_IngameMenu_C, W_Button_C1) == 0x0288);
static_assert(offsetof(UW_IngameMenu_C, W_Button_C2) == 0x0290);
static_assert(offsetof(UW_IngameMenu_C, W_Button_C3) == 0x0298);
static_assert(offsetof(UW_IngameMenu_C, OptionsMenu) == 0x02A0);
static_assert(offsetof(UW_IngameMenu_C, ServerManagementMenu) == 0x02A8);
static_assert(offsetof(UW_DamageNumberNew_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_DamageNumberNew_C, Animation) == 0x0268);
static_assert(offsetof(UW_DamageNumberNew_C, TextBlock) == 0x0270);
static_assert(offsetof(UW_DamageNumberNew_C, DamageInfo) == 0x0278);
static_assert(offsetof(UW_DamageNumberNew_C, EquipableClass) == 0x0298);
static_assert(offsetof(UW_ChatOverlay_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ChatOverlay_C, CanvasPanel) == 0x0268);
static_assert(offsetof(UW_ChatOverlay_C, SizeBox) == 0x0270);
static_assert(offsetof(UW_ChatOverlay_C, W_IngameChat) == 0x0278);
static_assert(offsetof(UW_FlagUI_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_FlagUI_C, Border) == 0x0268);
static_assert(offsetof(UW_FlagUI_C, CanvasPanel) == 0x0270);
static_assert(offsetof(UW_FlagUI_C, Image) == 0x0278);
static_assert(offsetof(UW_FlagUI_C, Image0) == 0x0280);
static_assert(offsetof(UW_FlagUI_C, ProgressBar) == 0x0288);
static_assert(offsetof(UW_FlagUI_C, ProgressBar1) == 0x0290);
static_assert(offsetof(UW_FlagUI_C, VerticalBox) == 0x0298);
static_assert(offsetof(UW_FlagUI_C, Flag) == 0x02A0);
static_assert(offsetof(UW_SteamItemListForChest_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_SteamItemListForChest_C, Button) == 0x0268);
static_assert(offsetof(UW_SteamItemListForChest_C, EditableTextBox_Legendary) == 0x0270);
static_assert(offsetof(UW_SteamItemListForChest_C, EditableTextBox_Rare) == 0x0278);
static_assert(offsetof(UW_SteamItemListForChest_C, EditableTextBox_Uncommon) == 0x0280);
static_assert(offsetof(UW_SteamItemListForChest_C, Chest) == 0x0288);
static_assert(offsetof(UW_PotentialChestItems_hover_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_PotentialChestItems_hover_C, Border) == 0x0268);
static_assert(offsetof(UW_PotentialChestItems_hover_C, Image) == 0x0270);
static_assert(offsetof(UW_PotentialChestItems_hover_C, TextBlock) == 0x0278);
static_assert(offsetof(UW_PotentialChestItems_hover_C, TextBlock0) == 0x0280);
static_assert(offsetof(UW_PotentialChestItems_hover_C, TextBlock1) == 0x0288);
static_assert(offsetof(UW_PotentialChestItems_hover_C, WrapBox) == 0x0290);
static_assert(offsetof(UW_PotentialChestItems_hover_C, ChestType) == 0x0298);
static_assert(offsetof(UW_PotentialChestItems_hover_C, ExtraMessage) == 0x02A0);
static_assert(offsetof(UW_BattleChest_Entry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_BattleChest_Entry_C, Button) == 0x0268);
static_assert(offsetof(UW_BattleChest_Entry_C, Image) == 0x0270);
static_assert(offsetof(UW_BattleChest_Entry_C, Image0) == 0x0278);
static_assert(offsetof(UW_BattleChest_Entry_C, TextBlock) == 0x0280);
static_assert(offsetof(UW_BattleChest_Entry_C, W_Button) == 0x0288);
static_assert(offsetof(UW_BattleChest_Entry_C, ChestItem) == 0x0290);
static_assert(offsetof(UW_CheatMenu_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_CheatMenu_C, WrongPassword) == 0x0268);
static_assert(offsetof(UW_CheatMenu_C, W_Button) == 0x0270);
static_assert(offsetof(UW_CheatMenu_C, W_CloseButton_C) == 0x0278);
static_assert(offsetof(UW_CheatMenu_C, W_TextBox) == 0x0280);
static_assert(offsetof(UW_CheatMenu_C, Session) == 0x0288);
static_assert(offsetof(UW_CheatMenu_C, ServerBrowserEntry) == 0x0390);
static_assert(offsetof(UW_UnOpenedChest_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_UnOpenedChest_C, Open) == 0x0268);
static_assert(offsetof(UW_UnOpenedChest_C, hover) == 0x0270);
static_assert(offsetof(UW_UnOpenedChest_C, NewAnimation) == 0x0278);
static_assert(offsetof(UW_UnOpenedChest_C, Button) == 0x0280);
static_assert(offsetof(UW_UnOpenedChest_C, Image) == 0x0288);
static_assert(offsetof(UW_UnOpenedChest_C, Image0) == 0x0290);
static_assert(offsetof(UW_UnOpenedChest_C, TextBlock) == 0x0298);
static_assert(offsetof(UW_UnOpenedChest_C, ChestItem) == 0x02A0);
static_assert(offsetof(UW_ChestSeasonSlot_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ChestSeasonSlot_C, HorizontalBox) == 0x0268);
static_assert(offsetof(UW_ChestSeasonSlot_C, Image) == 0x0270);
static_assert(offsetof(UW_ChestSeasonSlot_C, Image0) == 0x0278);
static_assert(offsetof(UW_ChestSeasonSlot_C, Image1) == 0x0280);
static_assert(offsetof(UW_ChestSeasonSlot_C, TextBlock) == 0x0288);
static_assert(offsetof(UW_ChestSeasonSlot_C, TextBlock2) == 0x0290);
static_assert(offsetof(UW_ChestSeasonSlot_C, W_BattleChest_Entry) == 0x0298);
static_assert(offsetof(UW_ChestSeasonSlot_C, W_BattleChest_Entry3) == 0x02A0);
static_assert(offsetof(UW_ChestSeasonSlot_C, Chest1) == 0x02B0);
static_assert(offsetof(UW_ChestSeasonSlot_C, Chest2) == 0x0438);
static_assert(offsetof(UW_ChestSeasonSlot_C, Chests) == 0x05C0);
static_assert(offsetof(UW_BattleChests_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_BattleChests_C, LuckyChestCraft) == 0x0268);
static_assert(offsetof(UW_BattleChests_C, BasicChestCraft) == 0x0270);
static_assert(offsetof(UW_BattleChests_C, HorizontalBox) == 0x0278);
static_assert(offsetof(UW_BattleChests_C, Image) == 0x0280);
static_assert(offsetof(UW_BattleChests_C, TextBlock) == 0x0288);
static_assert(offsetof(UW_BattleChests_C, WrapBox) == 0x0290);
static_assert(offsetof(UW_BattleChests_C, MainMenuRef) == 0x0298);
static_assert(offsetof(UW_BattleChests_C, SteamProcessingWidgetRef) == 0x02A8);
static_assert(offsetof(UW_BattleChests_C, LastChestSlot) == 0x02B8);
static_assert(offsetof(UW_BattleChests_C, CachedItemRowNames) == 0x02D0);
static_assert(offsetof(UW_BattleChests_C, ChestSeasons) == 0x02E0);
static_assert(offsetof(UW_EventRewardsEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_EventRewardsEntry_C, PopIn) == 0x0268);
static_assert(offsetof(UW_EventRewardsEntry_C, Border) == 0x0270);
static_assert(offsetof(UW_EventRewardsEntry_C, HorizontalBox) == 0x0278);
static_assert(offsetof(UW_EventRewardsEntry_C, Image) == 0x0280);
static_assert(offsetof(UW_EventRewardsEntry_C, Image0) == 0x0288);
static_assert(offsetof(UW_EventRewardsEntry_C, Image1) == 0x0290);
static_assert(offsetof(UW_EventRewardsEntry_C, ProgressBar_left) == 0x0298);
static_assert(offsetof(UW_EventRewardsEntry_C, ProgressBar_Right) == 0x02A0);
static_assert(offsetof(UW_EventRewardsEntry_C, TextBlock) == 0x02A8);
static_assert(offsetof(UW_EventRewardsEntry_C, TextBlock2) == 0x02B0);
static_assert(offsetof(UW_EventRewardsEntry_C, TextBlock3) == 0x02B8);
static_assert(offsetof(UW_EventRewardsEntry_C, VerticalBox) == 0x02C0);
static_assert(offsetof(UW_EventRewardsEntry_C, W_CosmeticItem) == 0x02C8);
static_assert(offsetof(UW_EventRewardsEntry_C, WidgetSwitcher) == 0x02D0);
static_assert(offsetof(UW_EventRewardsEntry_C, Item) == 0x02D8);
static_assert(offsetof(UW_EventRewardsEntry_C, NextItem) == 0x0460);
static_assert(offsetof(UW_EventRewardsEntry_C, PreviousItem) == 0x05E8);
static_assert(offsetof(UW_KeybindEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_KeybindEntry_C, InputKeySelector) == 0x0268);
static_assert(offsetof(UW_KeybindEntry_C, TextBlock) == 0x0270);
static_assert(offsetof(UW_KeybindEntry_C, ActionName) == 0x0278);
static_assert(offsetof(UW_LeaderboardCard_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_LeaderboardCard_C, ShowSteamID) == 0x0268);
static_assert(offsetof(UW_LeaderboardCard_C, Border) == 0x0270);
static_assert(offsetof(UW_LeaderboardCard_C, Border0) == 0x0278);
static_assert(offsetof(UW_LeaderboardCard_C, Border1) == 0x0280);
static_assert(offsetof(UW_LeaderboardCard_C, Image) == 0x0288);
static_assert(offsetof(UW_LeaderboardCard_C, Image2) == 0x0290);
static_assert(offsetof(UW_LeaderboardCard_C, Image3) == 0x0298);
static_assert(offsetof(UW_LeaderboardCard_C, TextBlock) == 0x02A0);
static_assert(offsetof(UW_LeaderboardCard_C, TextBlock4) == 0x02A8);
static_assert(offsetof(UW_LeaderboardCard_C, TextBlock5) == 0x02B0);
static_assert(offsetof(UW_LeaderboardCard_C, TextBlock6) == 0x02B8);
static_assert(offsetof(UW_LeaderboardCard_C, TextBlock7) == 0x02C0);
static_assert(offsetof(UW_LeaderboardCard_C, TextBlock8) == 0x02C8);
static_assert(offsetof(UW_LeaderboardCard_C, Throbber) == 0x02D0);
static_assert(offsetof(UW_LeaderboardCard_C, W_Button) == 0x02D8);
static_assert(offsetof(UW_LeaderboardCard_C, W_CloseButton_C) == 0x02E0);
static_assert(offsetof(UW_LeaderboardCard_C, W_TextBox) == 0x02E8);
static_assert(offsetof(UW_LeaderboardCard_C, WidgetSwitcher) == 0x02F0);
static_assert(offsetof(UW_LeaderboardCard_C, WidgetSwitcher9) == 0x02F8);
static_assert(offsetof(UW_LeaderboardCard_C, SteamID) == 0x0300);
static_assert(offsetof(UW_LeaderboardCard_C, LargeAvatar) == 0x0310);
static_assert(offsetof(UW_LeaderboardCard_C, PlayerName) == 0x0318);
static_assert(offsetof(UW_LeaderboardCard_C, UserUnitProgress) == 0x0330);
static_assert(offsetof(UW_LeaderboardCard_C, RankTitle) == 0x0348);
static_assert(offsetof(UW_LeaderboardCard_C, Steam_ID) == 0x0358);
static_assert(offsetof(UW_LeaderboardCard_C, UserData) == 0x0360);
static_assert(offsetof(UW_LeaderboardsEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_LeaderboardsEntry_C, SwitchToGold) == 0x0268);
static_assert(offsetof(UW_LeaderboardsEntry_C, Border) == 0x0270);
static_assert(offsetof(UW_LeaderboardsEntry_C, Button) == 0x0278);
static_assert(offsetof(UW_LeaderboardsEntry_C, Image) == 0x0280);
static_assert(offsetof(UW_LeaderboardsEntry_C, TextBlock) == 0x0288);
static_assert(offsetof(UW_LeaderboardsEntry_C, TextBlock0) == 0x0290);
static_assert(offsetof(UW_LeaderboardsEntry_C, TextBlock1) == 0x0298);
static_assert(offsetof(UW_LeaderboardsEntry_C, TextBlock2) == 0x02A0);
static_assert(offsetof(UW_LeaderboardsEntry_C, UserName) == 0x02A8);
static_assert(offsetof(UW_LeaderboardsEntry_C, CachedFontStyle) == 0x02C8);
static_assert(offsetof(UW_LeaderboardsEntry_C, SteamID) == 0x0320);
static_assert(offsetof(UW_LeaderboardsEntry_C, Avatar) == 0x0328);
static_assert(offsetof(UW_LeaderboardsEntry_C, LargeAvatar) == 0x0338);
static_assert(offsetof(UW_LeaderboardsEntry_C, UserData) == 0x0340);
static_assert(offsetof(UW_LeaderboardsEntry_C, UserUnitProgress) == 0x0358);
static_assert(offsetof(UW_LeaderboardsEntry_C, RankTitle) == 0x0370);
static_assert(offsetof(UW_LeaderboardsEntry_C, Data) == 0x0380);
static_assert(offsetof(UW_Tab_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_Tab_C, Button) == 0x0268);
static_assert(offsetof(UW_Tab_C, SizeBox) == 0x0270);
static_assert(offsetof(UW_Tab_C, TextBlock) == 0x0278);
static_assert(offsetof(UW_Tab_C, TabText) == 0x0280);
static_assert(offsetof(UW_Tab_C, TabGroupTag) == 0x02B8);
static_assert(offsetof(UW_KeyBinds_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_KeyBinds_C, ScrollBox) == 0x0268);
static_assert(offsetof(UW_KeyBinds_C, W_Button) == 0x0270);
static_assert(offsetof(UW_KeyBinds_C, W_Button0) == 0x0278);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry) == 0x0280);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry1) == 0x0288);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry2) == 0x0290);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry3) == 0x0298);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry4) == 0x02A0);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry5) == 0x02A8);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry6) == 0x02B0);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry7) == 0x02B8);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry8) == 0x02C0);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry9) == 0x02C8);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry10) == 0x02D0);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry11) == 0x02D8);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry12) == 0x02E0);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry13) == 0x02E8);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry14) == 0x02F0);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry15) == 0x02F8);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry16) == 0x0300);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry17) == 0x0308);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry18) == 0x0310);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry19) == 0x0318);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry20) == 0x0320);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry21) == 0x0328);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry22) == 0x0330);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry23) == 0x0338);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry24) == 0x0340);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry25) == 0x0348);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry26) == 0x0350);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry27) == 0x0358);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry28) == 0x0360);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry29) == 0x0368);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry30) == 0x0370);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry31) == 0x0378);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry32) == 0x0380);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry33) == 0x0388);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry34) == 0x0390);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry35) == 0x0398);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry36) == 0x03A0);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry37) == 0x03A8);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry38) == 0x03B0);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry39) == 0x03B8);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry40) == 0x03C0);
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry41) == 0x03C8);
static_assert(offsetof(UW_KeyBinds_C, W_SmallHeader_C) == 0x03D0);
static_assert(offsetof(UW_KeyBinds_C, W_SmallHeader_C42) == 0x03D8);
static_assert(offsetof(UW_KeyBinds_C, W_SmallHeader_C43) == 0x03E0);
static_assert(offsetof(UW_KeyBinds_C, W_SmallHeader_C44) == 0x03E8);
static_assert(offsetof(UW_KeyBinds_C, W_SmallHeader_C45) == 0x03F0);
static_assert(offsetof(UW_KeyBinds_C, W_SmallHeader_C46) == 0x03F8);
static_assert(offsetof(UW_PasswordPrompt_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_PasswordPrompt_C, WrongPassword) == 0x0268);
static_assert(offsetof(UW_PasswordPrompt_C, W_Button) == 0x0270);
static_assert(offsetof(UW_PasswordPrompt_C, W_CloseButton_C) == 0x0278);
static_assert(offsetof(UW_PasswordPrompt_C, W_TextBox) == 0x0280);
static_assert(offsetof(UW_PasswordPrompt_C, ServerBrowserEntry) == 0x0288);
static_assert(offsetof(UW_PasswordPrompt_C, ServerBrowserEntry2) == 0x0290);
static_assert(offsetof(UW_PasswordPrompt_C, Session) == 0x0298);
static_assert(offsetof(UW_DisconnectErrorMessage_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_DisconnectErrorMessage_C, TextBlock) == 0x0268);
static_assert(offsetof(UW_DisconnectErrorMessage_C, W_Button) == 0x0270);
static_assert(offsetof(UW_DisconnectErrorMessage_C, ErrorCode) == 0x0278);
static_assert(offsetof(UW_TokenPouchHeader_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_TokenPouchHeader_C, Image) == 0x0268);
static_assert(offsetof(UW_TokenPouchHeader_C, TextBlock) == 0x0270);
static_assert(offsetof(UW_TokenPouchHeader_C, TextBlock0) == 0x0278);
static_assert(offsetof(UW_TokenPouchHeader_C, Title) == 0x0288);
static_assert(offsetof(UW_TokenPouchEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_TokenPouchEntry_C, LiveAnimation) == 0x0268);
static_assert(offsetof(UW_TokenPouchEntry_C, Border) == 0x0270);
static_assert(offsetof(UW_TokenPouchEntry_C, Border0) == 0x0278);
static_assert(offsetof(UW_TokenPouchEntry_C, Border1) == 0x0280);
static_assert(offsetof(UW_TokenPouchEntry_C, Border2) == 0x0288);
static_assert(offsetof(UW_TokenPouchEntry_C, Border3) == 0x0290);
static_assert(offsetof(UW_TokenPouchEntry_C, Button) == 0x0298);
static_assert(offsetof(UW_TokenPouchEntry_C, CanvasPanel) == 0x02A0);
static_assert(offsetof(UW_TokenPouchEntry_C, CanvasPanel4) == 0x02A8);
static_assert(offsetof(UW_TokenPouchEntry_C, Image) == 0x02B0);
static_assert(offsetof(UW_TokenPouchEntry_C, Image5) == 0x02B8);
static_assert(offsetof(UW_TokenPouchEntry_C, Image6) == 0x02C0);
static_assert(offsetof(UW_TokenPouchEntry_C, Image7) == 0x02C8);
static_assert(offsetof(UW_TokenPouchEntry_C, ProgressBar) == 0x02D0);
static_assert(offsetof(UW_TokenPouchEntry_C, TextBlock) == 0x02D8);
static_assert(offsetof(UW_TokenPouchEntry_C, TextBlock8) == 0x02E0);
static_assert(offsetof(UW_TokenPouchEntry_C, TextBlock_EventName) == 0x02E8);
static_assert(offsetof(UW_TokenPouchEntry_C, TextBlock_Year) == 0x02F0);
static_assert(offsetof(UW_TokenPouchEntry_C, TextBlock_Year9) == 0x02F8);
static_assert(offsetof(UW_TokenPouchEntry_C, VerticalBox) == 0x0300);
static_assert(offsetof(UW_TokenPouchEntry_C, WidgetSwitcher) == 0x0308);
static_assert(offsetof(UW_TokenPouchEntry_C, EventTokenName) == 0x0310);
static_assert(offsetof(UW_TokenPouchEntry_C, Year) == 0x0328);
static_assert(offsetof(UW_TokenPouchEntry_C, EventTokenIcon) == 0x0348);
static_assert(offsetof(UW_TokenPouchEntry_C, EventTokenIconBg) == 0x0350);
static_assert(offsetof(UW_TokenPouchEntry_C, EventID) == 0x0360);
static_assert(offsetof(UW_TokenPouchEntry_C, EventCategory) == 0x0370);
static_assert(offsetof(UW_TokenPouchEntry_C, BgColorBottom) == 0x0374);
static_assert(offsetof(UW_TokenPouchEntry_C, BgColorTop) == 0x0384);
static_assert(offsetof(UW_TokenPouchEntry_C, SelectedColor) == 0x0398);
static_assert(offsetof(UW_TokenPouch_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_TokenPouch_C, Image) == 0x0268);
static_assert(offsetof(UW_TokenPouch_C, VerticalBox) == 0x0270);
static_assert(offsetof(UW_TokenPouch_C, W_CloseButton) == 0x0278);
static_assert(offsetof(UW_TokenPouch_C, W_CoinPouchEntry) == 0x0280);
static_assert(offsetof(UW_TokenPouch_C, W_CoinPouchEntry0) == 0x0288);
static_assert(offsetof(UW_TokenPouch_C, W_SmallHeader_C) == 0x0290);
static_assert(offsetof(UW_TokenPouch_C, W_SmallHeader_C1) == 0x0298);
static_assert(offsetof(UW_TextBox_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_TextBox_C, EditableTextBox) == 0x0268);
static_assert(offsetof(UW_TextBox_C, HintText) == 0x0270);
static_assert(offsetof(UW_TextBox_C, PreText) == 0x0288);
static_assert(offsetof(UW_SmallHeader_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_SmallHeader_C, Border) == 0x0268);
static_assert(offsetof(UW_SmallHeader_C, TextBlock) == 0x0270);
static_assert(offsetof(UW_SmallHeader_C, Title) == 0x0278);
static_assert(offsetof(UW_SmallHeader_C, BgColor) == 0x0290);
static_assert(offsetof(UW_SmallHeader_C, TextColor) == 0x02A0);
static_assert(offsetof(UW_Slider_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_Slider_C, Slider) == 0x0268);
static_assert(offsetof(UW_ServerBrowserEntry2_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ServerBrowserEntry2_C, Image) == 0x0268);
static_assert(offsetof(UW_ServerBrowserEntry2_C, Image0) == 0x0270);
static_assert(offsetof(UW_ServerBrowserEntry2_C, Image1) == 0x0278);
static_assert(offsetof(UW_ServerBrowserEntry2_C, Image_Lock) == 0x0280);
static_assert(offsetof(UW_ServerBrowserEntry2_C, TextBlock_Players) == 0x0288);
static_assert(offsetof(UW_ServerBrowserEntry2_C, TextBlock_Servername) == 0x0290);
static_assert(offsetof(UW_ServerBrowserEntry2_C, W_Button) == 0x0298);
static_assert(offsetof(UW_ServerBrowserEntry2_C, MapName) == 0x02B0);
static_assert(offsetof(UW_ServerBrowserEntry2_C, ServerName) == 0x02C8);
static_assert(offsetof(UW_ServerBrowserEntry2_C, ProSession) == 0x02E0);
static_assert(offsetof(UW_ServerbrowserEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ServerbrowserEntry_C, Border) == 0x0268);
static_assert(offsetof(UW_ServerbrowserEntry_C, Image) == 0x0270);
static_assert(offsetof(UW_ServerbrowserEntry_C, Image0) == 0x0278);
static_assert(offsetof(UW_ServerbrowserEntry_C, Image1) == 0x0280);
static_assert(offsetof(UW_ServerbrowserEntry_C, SizeBox) == 0x0288);
static_assert(offsetof(UW_ServerbrowserEntry_C, TextBlock_Map) == 0x0290);
static_assert(offsetof(UW_ServerbrowserEntry_C, TextBlock_Players) == 0x0298);
static_assert(offsetof(UW_ServerbrowserEntry_C, TextBlock_Servername) == 0x02A0);
static_assert(offsetof(UW_ServerbrowserEntry_C, W_Button) == 0x02A8);
static_assert(offsetof(UW_ServerbrowserEntry_C, MapNameWithScenario) == 0x02B8);
static_assert(offsetof(UW_ServerbrowserEntry_C, MapName) == 0x02D0);
static_assert(offsetof(UW_ServerbrowserEntry_C, ServerName) == 0x02F0);
static_assert(offsetof(UW_ServerbrowserEntry_C, Extra_Settings) == 0x0308);
static_assert(offsetof(UW_ServerbrowserEntry_C, BlueprintSession) == 0x0318);
static_assert(offsetof(UW_QuickPlay_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_QuickPlay_C, Image) == 0x0268);
static_assert(offsetof(UW_QuickPlay_C, TextBlock) == 0x0270);
static_assert(offsetof(UW_QuickPlay_C, Throbber) == 0x0278);
static_assert(offsetof(UW_QuickPlay_C, W_CloseButton_C) == 0x0280);
static_assert(offsetof(UW_QuickPlay_C, FoundSessionsTemp) == 0x0288);
static_assert(offsetof(UW_QuickPlay_C, BestSessionSoFar) == 0x0298);
static_assert(offsetof(UW_QuickPlay_C, Status) == 0x03A0);
static_assert(offsetof(UW_QuickPlay_C, FoundProSessions) == 0x03B0);
static_assert(offsetof(UW_QuickPlay_C, BestProSessionSoFar) == 0x03C0);
static_assert(offsetof(UW_OptionsMenu_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_OptionsMenu_C, HorizontalBox) == 0x0268);
static_assert(offsetof(UW_OptionsMenu_C, HorizontalBox0) == 0x0270);
static_assert(offsetof(UW_OptionsMenu_C, HorizontalBox1) == 0x0278);
static_assert(offsetof(UW_OptionsMenu_C, HorizontalBox2) == 0x0280);
static_assert(offsetof(UW_OptionsMenu_C, HorizontalBox3) == 0x0288);
static_assert(offsetof(UW_OptionsMenu_C, HorizontalBox4) == 0x0290);
static_assert(offsetof(UW_OptionsMenu_C, Image) == 0x0298);
static_assert(offsetof(UW_OptionsMenu_C, ScaleBox) == 0x02A0);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock) == 0x02A8);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock5) == 0x02B0);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock6) == 0x02B8);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock7) == 0x02C0);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock8) == 0x02C8);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock9) == 0x02D0);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock10) == 0x02D8);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock11) == 0x02E0);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock12) == 0x02E8);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock13) == 0x02F0);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock14) == 0x02F8);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock15) == 0x0300);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock16) == 0x0308);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock17) == 0x0310);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock18) == 0x0318);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock19) == 0x0320);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock_AnnouncerVolume) == 0x0328);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock_CameraDistance) == 0x0330);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock_CameraHeight) == 0x0338);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock_CameraHorOffset) == 0x0340);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock_EffectsVolume) == 0x0348);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock_HitmarkerSize) == 0x0350);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock_MasterVolume) == 0x0358);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock_MotionBlur) == 0x0360);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock_MusicVolume) == 0x0368);
static_assert(offsetof(UW_OptionsMenu_C, TextBlock_Title) == 0x0370);
static_assert(offsetof(UW_OptionsMenu_C, VerticalBox_Crosshair) == 0x0378);
static_assert(offsetof(UW_OptionsMenu_C, W_Button_C) == 0x0380);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox) == 0x0388);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox20) == 0x0390);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox21) == 0x0398);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox22) == 0x03A0);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox23) == 0x03A8);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox_AmbientOcclusion) == 0x03B0);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox_CamShake) == 0x03B8);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox_CenterDot) == 0x03C0);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox_CenterDot24) == 0x03C8);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox_CharHitFlash) == 0x03D0);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox_CharTesselation) == 0x03D8);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox_InvertedMouseY) == 0x03E0);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox_Shadow) == 0x03E8);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox_StaticCrosshair) == 0x03F0);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox_ToggleAim) == 0x03F8);
static_assert(offsetof(UW_OptionsMenu_C, W_CheckBox_ToggleSprint) == 0x0400);
static_assert(offsetof(UW_OptionsMenu_C, W_CloseButton) == 0x0408);
static_assert(offsetof(UW_OptionsMenu_C, W_Combobox) == 0x0410);
static_assert(offsetof(UW_OptionsMenu_C, W_Combobox_AAQuality) == 0x0418);
static_assert(offsetof(UW_OptionsMenu_C, W_Combobox_MaxFPS) == 0x0420);
static_assert(offsetof(UW_OptionsMenu_C, W_Combobox_Resolutions) == 0x0428);
static_assert(offsetof(UW_OptionsMenu_C, W_Combobox_ScreenMode) == 0x0430);
static_assert(offsetof(UW_OptionsMenu_C, W_Combobox_ScreenMode25) == 0x0438);
static_assert(offsetof(UW_OptionsMenu_C, W_Combobox_ShadowQuality) == 0x0440);
static_assert(offsetof(UW_OptionsMenu_C, W_Combobox_Sharpen) == 0x0448);
static_assert(offsetof(UW_OptionsMenu_C, W_Combobox_VSync) == 0x0450);
static_assert(offsetof(UW_OptionsMenu_C, W_DynamicCrosshair) == 0x0458);
static_assert(offsetof(UW_OptionsMenu_C, W_KeyBinds) == 0x0460);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_AnnouncerVolume) == 0x0468);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_Blue) == 0x0470);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_C) == 0x0478);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_C26) == 0x0480);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_C27) == 0x0488);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_C28) == 0x0490);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_CameraDistance) == 0x0498);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_CameraHeight) == 0x04A0);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_CameraHorOffset) == 0x04A8);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_CrosshairSize) == 0x04B0);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_CrossSize) == 0x04B8);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_EffectsVolume) == 0x04C0);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_Green) == 0x04C8);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_LineLength) == 0x04D0);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_Linewidth) == 0x04D8);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_MasterVolume) == 0x04E0);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_MotionBlur) == 0x04E8);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_MusicVolume) == 0x04F0);
static_assert(offsetof(UW_OptionsMenu_C, W_SliderNoStep_Red) == 0x04F8);
static_assert(offsetof(UW_OptionsMenu_C, W_SmallHeader_C) == 0x0500);
static_assert(offsetof(UW_OptionsMenu_C, W_SmallHeader_C29) == 0x0508);
static_assert(offsetof(UW_OptionsMenu_C, W_SmallHeader_C30) == 0x0510);
static_assert(offsetof(UW_OptionsMenu_C, W_SmallHeader_C31) == 0x0518);
static_assert(offsetof(UW_OptionsMenu_C, W_SmallHeader_C32) == 0x0520);
static_assert(offsetof(UW_OptionsMenu_C, W_SmallHeader_C33) == 0x0528);
static_assert(offsetof(UW_OptionsMenu_C, W_SmallHeader_C34) == 0x0530);
static_assert(offsetof(UW_OptionsMenu_C, W_Tab_Audio) == 0x0538);
static_assert(offsetof(UW_OptionsMenu_C, W_Tab_Gameplay) == 0x0540);
static_assert(offsetof(UW_OptionsMenu_C, W_Tab_Keybinds) == 0x0548);
static_assert(offsetof(UW_OptionsMenu_C, W_Tab_Keybinds35) == 0x0550);
static_assert(offsetof(UW_OptionsMenu_C, W_Tab_Video) == 0x0558);
static_assert(offsetof(UW_OptionsMenu_C, WidgetSwitcher) == 0x0560);
static_assert(offsetof(UW_OptionsMenu_C, CrosshairType) == 0x0580);
static_assert(offsetof(UW_OptionsMenu_C, CrosshairSettingTemp) == 0x0584);
static_assert(offsetof(UW_OptionsMenu_C, AllCrosshairsTemp) == 0x05A8);
static_assert(offsetof(UW_Leaderboards_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_Leaderboards_C, CircularThrobber) == 0x0268);
static_assert(offsetof(UW_Leaderboards_C, Image) == 0x0270);
static_assert(offsetof(UW_Leaderboards_C, TextBlock) == 0x0278);
static_assert(offsetof(UW_Leaderboards_C, TextBlock0) == 0x0280);
static_assert(offsetof(UW_Leaderboards_C, TextBlock1) == 0x0288);
static_assert(offsetof(UW_Leaderboards_C, TextBlock_Title) == 0x0290);
static_assert(offsetof(UW_Leaderboards_C, VerticalBox) == 0x0298);
static_assert(offsetof(UW_Leaderboards_C, W_Button_C) == 0x02A0);
static_assert(offsetof(UW_Leaderboards_C, W_Button_C2) == 0x02A8);
static_assert(offsetof(UW_Leaderboards_C, W_Button_C3) == 0x02B0);
static_assert(offsetof(UW_Leaderboards_C, W_Button_C4) == 0x02B8);
static_assert(offsetof(UW_Leaderboards_C, W_CloseButton) == 0x02C0);
static_assert(offsetof(UW_Leaderboards_C, W_Combobox_ScreenMode) == 0x02C8);
static_assert(offsetof(UW_Leaderboards_C, W_LeaderboardsEntry) == 0x02D0);
static_assert(offsetof(UW_Leaderboards_C, W_LeaderboardsEntry5) == 0x02D8);
static_assert(offsetof(UW_Leaderboards_C, W_LeaderboardsEntry6) == 0x02E0);
static_assert(offsetof(UW_Leaderboards_C, W_LeaderboardsEntry7) == 0x02E8);
static_assert(offsetof(UW_Leaderboards_C, W_LeaderboardsEntry8) == 0x02F0);
static_assert(offsetof(UW_Leaderboards_C, W_LeaderboardsEntry9) == 0x02F8);
static_assert(offsetof(UW_Leaderboards_C, W_LeaderboardsEntry10) == 0x0300);
static_assert(offsetof(UW_Leaderboards_C, W_LeaderboardsEntry11) == 0x0308);
static_assert(offsetof(UW_Leaderboards_C, W_LeaderboardsEntry12) == 0x0310);
static_assert(offsetof(UW_Leaderboards_C, W_LeaderboardsEntry13) == 0x0318);
static_assert(offsetof(UW_Leaderboards_C, WidgetSwitcher) == 0x0320);
static_assert(offsetof(UW_Leaderboards_C, MainMenuRef) == 0x0328);
static_assert(offsetof(UW_Leaderboards_C, DownloadedLeaderboard) == 0x0340);
static_assert(offsetof(UW_Leaderboards_C, SelectedLeaderBoard) == 0x0358);
static_assert(offsetof(UW_EventRewardPass_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_EventRewardPass_C, PopUp) == 0x0268);
static_assert(offsetof(UW_EventRewardPass_C, Border) == 0x0270);
static_assert(offsetof(UW_EventRewardPass_C, Border0) == 0x0278);
static_assert(offsetof(UW_EventRewardPass_C, Border1) == 0x0280);
static_assert(offsetof(UW_EventRewardPass_C, HorizontalBox) == 0x0288);
static_assert(offsetof(UW_EventRewardPass_C, Image) == 0x0290);
static_assert(offsetof(UW_EventRewardPass_C, Image2) == 0x0298);
static_assert(offsetof(UW_EventRewardPass_C, Image3) == 0x02A0);
static_assert(offsetof(UW_EventRewardPass_C, Image_BgColor) == 0x02A8);
static_assert(offsetof(UW_EventRewardPass_C, TextBlock) == 0x02B0);
static_assert(offsetof(UW_EventRewardPass_C, TextBlock4) == 0x02B8);
static_assert(offsetof(UW_EventRewardPass_C, TextBlock5) == 0x02C0);
static_assert(offsetof(UW_EventRewardPass_C, W_Button_C) == 0x02C8);
static_assert(offsetof(UW_EventRewardPass_C, W_Button_C6) == 0x02D0);
static_assert(offsetof(UW_EventRewardPass_C, Items) == 0x02D8);
static_assert(offsetof(UW_EventRewardPass_C, EventID) == 0x02F0);
static_assert(offsetof(UW_EventRewardPass_C, TitleBg) == 0x0300);
static_assert(offsetof(UW_EventRewardPass_C, PassBgColorFront) == 0x0310);
static_assert(offsetof(UW_EventRewardPass_C, PassBgColorBack) == 0x0320);
static_assert(offsetof(UW_EventRewardPass_C, Event_Pass_Header_Image) == 0x0330);
static_assert(offsetof(UW_EventRewardPass_C, BackgroundMID) == 0x0338);
static_assert(offsetof(UW_EventRewardPass_C, EventCategory) == 0x0342);
static_assert(offsetof(UW_EventRewardPass_C, TokenTexture) == 0x0348);
static_assert(offsetof(UW_Credits_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_Credits_C, Image) == 0x0268);
static_assert(offsetof(UW_Credits_C, Image0) == 0x0270);
static_assert(offsetof(UW_Credits_C, Image1) == 0x0278);
static_assert(offsetof(UW_Credits_C, Image2) == 0x0280);
static_assert(offsetof(UW_Credits_C, Image3) == 0x0288);
static_assert(offsetof(UW_Credits_C, Image4) == 0x0290);
static_assert(offsetof(UW_Credits_C, Image5) == 0x0298);
static_assert(offsetof(UW_Credits_C, Image6) == 0x02A0);
static_assert(offsetof(UW_Credits_C, Image7) == 0x02A8);
static_assert(offsetof(UW_Credits_C, Image8) == 0x02B0);
static_assert(offsetof(UW_Credits_C, Image9) == 0x02B8);
static_assert(offsetof(UW_Credits_C, Image10) == 0x02C0);
static_assert(offsetof(UW_Credits_C, TextBlock_Title) == 0x02C8);
static_assert(offsetof(UW_Credits_C, W_CloseButton) == 0x02D0);
static_assert(offsetof(UW_BattleShop_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_BattleShop_C, Image) == 0x0268);
static_assert(offsetof(UW_BattleShop_C, TextBlock) == 0x0270);
static_assert(offsetof(UW_BattleShop_C, TextBlock_Title) == 0x0278);
static_assert(offsetof(UW_BattleShop_C, W_BattleCrafting) == 0x0280);
static_assert(offsetof(UW_BattleShop_C, W_CloseButton_C) == 0x0288);
static_assert(offsetof(UW_BattleShop_C, W_Tab_BattleChests) == 0x0290);
static_assert(offsetof(UW_BattleShop_C, W_Tab_BattleChests0) == 0x0298);
static_assert(offsetof(UW_BattleShop_C, W_Tab_BattleChests1) == 0x02A0);
static_assert(offsetof(UW_BattleShop_C, WidgetSwitcher) == 0x02A8);
static_assert(offsetof(UW_BattleShop_C, MainMenuRef) == 0x02B0);
static_assert(offsetof(UW_TitleComboBoxEntry_C, Image) == 0x0260);
static_assert(offsetof(UW_TitleComboBoxEntry_C, TextBlock) == 0x0268);
static_assert(offsetof(UW_TitleComboBoxEntry_C, Text) == 0x0270);
static_assert(offsetof(UW_TitleComboBoxEntry_C, Icon) == 0x0280);
static_assert(offsetof(UW_SliderNoStep_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_SliderNoStep_C, Slider) == 0x0268);
static_assert(offsetof(UW_MainMenu_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_MainMenu_C, NewVersion) == 0x0268);
static_assert(offsetof(UW_MainMenu_C, BattleShop) == 0x0270);
static_assert(offsetof(UW_MainMenu_C, PendingRewards) == 0x0278);
static_assert(offsetof(UW_MainMenu_C, HideMenu) == 0x0280);
static_assert(offsetof(UW_MainMenu_C, MenuLoad) == 0x0288);
static_assert(offsetof(UW_MainMenu_C, Border) == 0x0290);
static_assert(offsetof(UW_MainMenu_C, Border_Banner) == 0x0298);
static_assert(offsetof(UW_MainMenu_C, Border_LevelInfo) == 0x02A0);
static_assert(offsetof(UW_MainMenu_C, Button) == 0x02A8);
static_assert(offsetof(UW_MainMenu_C, Button0) == 0x02B0);
static_assert(offsetof(UW_MainMenu_C, Button1) == 0x02B8);
static_assert(offsetof(UW_MainMenu_C, Button2) == 0x02C0);
static_assert(offsetof(UW_MainMenu_C, Button3) == 0x02C8);
static_assert(offsetof(UW_MainMenu_C, Button4) == 0x02D0);
static_assert(offsetof(UW_MainMenu_C, CanvasPanel) == 0x02D8);
static_assert(offsetof(UW_MainMenu_C, CanvasPanel5) == 0x02E0);
static_assert(offsetof(UW_MainMenu_C, CanvasPanel6) == 0x02E8);
static_assert(offsetof(UW_MainMenu_C, CircularThrobber) == 0x02F0);
static_assert(offsetof(UW_MainMenu_C, HorizontalBox) == 0x02F8);
static_assert(offsetof(UW_MainMenu_C, Image) == 0x0300);
static_assert(offsetof(UW_MainMenu_C, Image7) == 0x0308);
static_assert(offsetof(UW_MainMenu_C, Image8) == 0x0310);
static_assert(offsetof(UW_MainMenu_C, Image9) == 0x0318);
static_assert(offsetof(UW_MainMenu_C, Image10) == 0x0320);
static_assert(offsetof(UW_MainMenu_C, Image11) == 0x0328);
static_assert(offsetof(UW_MainMenu_C, Image12) == 0x0330);
static_assert(offsetof(UW_MainMenu_C, Image13) == 0x0338);
static_assert(offsetof(UW_MainMenu_C, Image14) == 0x0340);
static_assert(offsetof(UW_MainMenu_C, Image15) == 0x0348);
static_assert(offsetof(UW_MainMenu_C, Image16) == 0x0350);
static_assert(offsetof(UW_MainMenu_C, Image17) == 0x0358);
static_assert(offsetof(UW_MainMenu_C, Image18) == 0x0360);
static_assert(offsetof(UW_MainMenu_C, Image19) == 0x0368);
static_assert(offsetof(UW_MainMenu_C, Image20) == 0x0370);
static_assert(offsetof(UW_MainMenu_C, Image21) == 0x0378);
static_assert(offsetof(UW_MainMenu_C, Image22) == 0x0380);
static_assert(offsetof(UW_MainMenu_C, Image23) == 0x0388);
static_assert(offsetof(UW_MainMenu_C, Image24) == 0x0390);
static_assert(offsetof(UW_MainMenu_C, Image25) == 0x0398);
static_assert(offsetof(UW_MainMenu_C, Image26) == 0x03A0);
static_assert(offsetof(UW_MainMenu_C, Image27) == 0x03A8);
static_assert(offsetof(UW_MainMenu_C, Image28) == 0x03B0);
static_assert(offsetof(UW_MainMenu_C, Image29) == 0x03B8);
static_assert(offsetof(UW_MainMenu_C, Image_CurrentEventTokenIcon) == 0x03C0);
static_assert(offsetof(UW_MainMenu_C, Image_Logo) == 0x03C8);
static_assert(offsetof(UW_MainMenu_C, MultiLineEditableText) == 0x03D0);
static_assert(offsetof(UW_MainMenu_C, RichTextBlock) == 0x03D8);
static_assert(offsetof(UW_MainMenu_C, ScrollBox) == 0x03E0);
static_assert(offsetof(UW_MainMenu_C, ScrollBox_ServerList) == 0x03E8);
static_assert(offsetof(UW_MainMenu_C, SizeBox) == 0x03F0);
static_assert(offsetof(UW_MainMenu_C, SizeBox30) == 0x03F8);
static_assert(offsetof(UW_MainMenu_C, SizeBox31) == 0x0400);
static_assert(offsetof(UW_MainMenu_C, SizeBox32) == 0x0408);
static_assert(offsetof(UW_MainMenu_C, SizeBox33) == 0x0410);
static_assert(offsetof(UW_MainMenu_C, SizeBox_MaxHeavies) == 0x0418);
static_assert(offsetof(UW_MainMenu_C, SizeBox_MaxRecons) == 0x0420);
static_assert(offsetof(UW_MainMenu_C, SizeBox_MaxTroopers) == 0x0428);
static_assert(offsetof(UW_MainMenu_C, TextBlock) == 0x0430);
static_assert(offsetof(UW_MainMenu_C, TextBlock34) == 0x0438);
static_assert(offsetof(UW_MainMenu_C, TextBlock35) == 0x0440);
static_assert(offsetof(UW_MainMenu_C, TextBlock36) == 0x0448);
static_assert(offsetof(UW_MainMenu_C, TextBlock37) == 0x0450);
static_assert(offsetof(UW_MainMenu_C, TextBlock38) == 0x0458);
static_assert(offsetof(UW_MainMenu_C, TextBlock_Bots) == 0x0460);
static_assert(offsetof(UW_MainMenu_C, TextBlock_Bots39) == 0x0468);
static_assert(offsetof(UW_MainMenu_C, TextBlock_CurrentEventTokenAmount) == 0x0470);
static_assert(offsetof(UW_MainMenu_C, TextBlock_Difficulty) == 0x0478);
static_assert(offsetof(UW_MainMenu_C, TextBlock_MaxHeavies) == 0x0480);
static_assert(offsetof(UW_MainMenu_C, TextBlock_MaxPlayers) == 0x0488);
static_assert(offsetof(UW_MainMenu_C, TextBlock_MaxRecons) == 0x0490);
static_assert(offsetof(UW_MainMenu_C, TextBlock_MaxTroopers) == 0x0498);
static_assert(offsetof(UW_MainMenu_C, TextBlock_Tickets) == 0x04A0);
static_assert(offsetof(UW_MainMenu_C, TextBlock_Title) == 0x04A8);
static_assert(offsetof(UW_MainMenu_C, TextBlock_Title40) == 0x04B0);
static_assert(offsetof(UW_MainMenu_C, TextBlock_Title41) == 0x04B8);
static_assert(offsetof(UW_MainMenu_C, TextBlock_Title42) == 0x04C0);
static_assert(offsetof(UW_MainMenu_C, TextBlock_Title43) == 0x04C8);
static_assert(offsetof(UW_MainMenu_C, TextBlock_Title44) == 0x04D0);
static_assert(offsetof(UW_MainMenu_C, TextBlock_Tokens) == 0x04D8);
static_assert(offsetof(UW_MainMenu_C, Throbber) == 0x04E0);
static_assert(offsetof(UW_MainMenu_C, VerticalBox) == 0x04E8);
static_assert(offsetof(UW_MainMenu_C, VerticalBox_LookingForServers) == 0x04F0);
static_assert(offsetof(UW_MainMenu_C, VerticalBox_Servers) == 0x04F8);
static_assert(offsetof(UW_MainMenu_C, W_BattleShop) == 0x0500);
static_assert(offsetof(UW_MainMenu_C, W_Button_C) == 0x0508);
static_assert(offsetof(UW_MainMenu_C, W_Button_C45) == 0x0510);
static_assert(offsetof(UW_MainMenu_C, W_Button_C46) == 0x0518);
static_assert(offsetof(UW_MainMenu_C, W_Button_C47) == 0x0520);
static_assert(offsetof(UW_MainMenu_C, W_Button_C48) == 0x0528);
static_assert(offsetof(UW_MainMenu_C, W_Button_C49) == 0x0530);
static_assert(offsetof(UW_MainMenu_C, W_Button_C50) == 0x0538);
static_assert(offsetof(UW_MainMenu_C, W_Button_C51) == 0x0540);
static_assert(offsetof(UW_MainMenu_C, W_Button_C52) == 0x0548);
static_assert(offsetof(UW_MainMenu_C, W_Button_C53) == 0x0550);
static_assert(offsetof(UW_MainMenu_C, W_Button_C54) == 0x0558);
static_assert(offsetof(UW_MainMenu_C, W_Button_C55) == 0x0560);
static_assert(offsetof(UW_MainMenu_C, W_Button_C56) == 0x0568);
static_assert(offsetof(UW_MainMenu_C, W_Button_Quickplay) == 0x0570);
static_assert(offsetof(UW_MainMenu_C, W_CheckBox) == 0x0578);
static_assert(offsetof(UW_MainMenu_C, W_CheckBox_ClassLimits) == 0x0580);
static_assert(offsetof(UW_MainMenu_C, W_CheckBox_TeamBalance) == 0x0588);
static_assert(offsetof(UW_MainMenu_C, W_CloseButton_C) == 0x0590);
static_assert(offsetof(UW_MainMenu_C, W_CloseButton_C57) == 0x0598);
static_assert(offsetof(UW_MainMenu_C, W_Combobox_Map) == 0x05A0);
static_assert(offsetof(UW_MainMenu_C, W_EquipScreen) == 0x05A8);
static_assert(offsetof(UW_MainMenu_C, W_Leaderboards) == 0x05B0);
static_assert(offsetof(UW_MainMenu_C, W_OptionsMenu) == 0x05B8);
static_assert(offsetof(UW_MainMenu_C, W_ServerbrowserEntry) == 0x05C0);
static_assert(offsetof(UW_MainMenu_C, W_ServerbrowserEntry58) == 0x05C8);
static_assert(offsetof(UW_MainMenu_C, W_ServerBrowserEntry2) == 0x05D0);
static_assert(offsetof(UW_MainMenu_C, W_ServerBrowserEntry259) == 0x05D8);
static_assert(offsetof(UW_MainMenu_C, W_Slider_BotsPerTeam) == 0x05E0);
static_assert(offsetof(UW_MainMenu_C, W_Slider_Difficulty) == 0x05E8);
static_assert(offsetof(UW_MainMenu_C, W_Slider_MaxHeavies) == 0x05F0);
static_assert(offsetof(UW_MainMenu_C, W_Slider_MaxPlayers) == 0x05F8);
static_assert(offsetof(UW_MainMenu_C, W_Slider_MaxRecons) == 0x0600);
static_assert(offsetof(UW_MainMenu_C, W_Slider_MaxTroopers) == 0x0608);
static_assert(offsetof(UW_MainMenu_C, W_Slider_Tickets) == 0x0610);
static_assert(offsetof(UW_MainMenu_C, W_SmallHeader_C) == 0x0618);
static_assert(offsetof(UW_MainMenu_C, W_SmallHeader_C60) == 0x0620);
static_assert(offsetof(UW_MainMenu_C, W_TextBox_Password) == 0x0628);
static_assert(offsetof(UW_MainMenu_C, W_TextBox_Servername) == 0x0630);
static_assert(offsetof(UW_MainMenu_C, WidgetSwitcher) == 0x0638);
static_assert(offsetof(UW_MainMenu_C, WidgetSwitcher61) == 0x0640);
static_assert(offsetof(UW_MainMenu_C, WidgetSwitcher62) == 0x0648);
static_assert(offsetof(UW_MainMenu_C, WidgetSwitcher_HostMenu) == 0x0650);
static_assert(offsetof(UW_MainMenu_C, MapToLoad) == 0x0660);
static_assert(offsetof(UW_MainMenu_C, Scenario) == 0x0670);
static_assert(offsetof(UW_MainMenu_C, RandomMaps) == 0x0678);
static_assert(offsetof(UW_MainMenu_C, EquipCam) == 0x0690);
static_assert(offsetof(UW_MainMenu_C, MainCam) == 0x0698);
static_assert(offsetof(UW_MainMenu_C, ServerRuleCached) == 0x06B0);
static_assert(offsetof(UW_MainMenu_C, OriginalMapNames) == 0x06D8);
static_assert(offsetof(UW_MainMenu_C, PrestigeRank) == 0x06F0);
static_assert(offsetof(UW_MainMenu_C, Rank) == 0x06F8);
static_assert(offsetof(UW_CustomizationScreenMouseWheelZone_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_Combobox_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_Combobox_C, ComboBoxString) == 0x0268);
static_assert(offsetof(UW_Combobox_C, OPTIONS) == 0x0270);
static_assert(offsetof(UW_Combobox_C, SelectedOption) == 0x0290);
static_assert(offsetof(UW_ShopToolTipPreview_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ShopToolTipPreview_C, Image) == 0x0268);
static_assert(offsetof(UW_ShopToolTipPreview_C, CosmeticPreviewActorRef) == 0x0270);
static_assert(offsetof(UW_ShopToolTipPreview_C, Item) == 0x0278);
static_assert(offsetof(UW_HeroCustomizationScreen_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_HeroCustomizationScreen_C, EventIconPulsate) == 0x0268);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Menu) == 0x0270);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Border) == 0x0278);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Button) == 0x0280);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Button0) == 0x0288);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Button1) == 0x0290);
static_assert(offsetof(UW_HeroCustomizationScreen_C, CanvasPanel) == 0x0298);
static_assert(offsetof(UW_HeroCustomizationScreen_C, ComboBoxString) == 0x02A0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image) == 0x02A8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image2) == 0x02B0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image3) == 0x02B8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image4) == 0x02C0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image5) == 0x02C8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image6) == 0x02D0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image7) == 0x02D8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image8) == 0x02E0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image9) == 0x02E8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image10) == 0x02F0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image11) == 0x02F8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, Image12) == 0x0300);
static_assert(offsetof(UW_HeroCustomizationScreen_C, ProgressBar) == 0x0308);
static_assert(offsetof(UW_HeroCustomizationScreen_C, ScrollBox) == 0x0310);
static_assert(offsetof(UW_HeroCustomizationScreen_C, TextBlock) == 0x0318);
static_assert(offsetof(UW_HeroCustomizationScreen_C, TextBlock13) == 0x0320);
static_assert(offsetof(UW_HeroCustomizationScreen_C, TextBlock_Level) == 0x0328);
static_assert(offsetof(UW_HeroCustomizationScreen_C, TextBlock_TeamAndUnitType) == 0x0330);
static_assert(offsetof(UW_HeroCustomizationScreen_C, TextBlock_XP) == 0x0338);
static_assert(offsetof(UW_HeroCustomizationScreen_C, VerticalBox) == 0x0340);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_Button_C) == 0x0348);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_Button_Commando) == 0x0350);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_Button_Commando14) == 0x0358);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_Button_Gunner) == 0x0360);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_Button_Soldier) == 0x0368);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_Combobox) == 0x0370);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_Combobox15) == 0x0378);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_Combobox16) == 0x0380);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_Combobox17) == 0x0388);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_CustomizationScreenMouseWheelZone) == 0x0390);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_Back) == 0x0398);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_Event) == 0x03A0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_Feet) == 0x03A8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_Hands) == 0x03B0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_Hats) == 0x03B8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_Legs) == 0x03C0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_LowerFace) == 0x03C8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_Shirts) == 0x03D0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_Steam) == 0x03D8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_Tattoos) == 0x03E0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_Torso) == 0x03E8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_UpperFace) == 0x03F0);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_Waist) == 0x03F8);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_WeaponSkins) == 0x0400);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_IconTab_XP) == 0x0408);
static_assert(offsetof(UW_HeroCustomizationScreen_C, W_SliderNoStep) == 0x0410);
static_assert(offsetof(UW_HeroCustomizationScreen_C, WidgetSwitcher) == 0x0418);
static_assert(offsetof(UW_HeroCustomizationScreen_C, WrapBox) == 0x0420);
static_assert(offsetof(UW_HeroCustomizationScreen_C, EquipPreviewActorRef) == 0x0428);
static_assert(offsetof(UW_HeroCustomizationScreen_C, MainMenuRef) == 0x0430);
static_assert(offsetof(UW_HeroCustomizationScreen_C, SelectedTeam) == 0x0439);
static_assert(offsetof(UW_HeroCustomizationScreen_C, SelectedClass) == 0x043A);
static_assert(offsetof(UW_HeroCustomizationScreen_C, SelectedCategory) == 0x043B);
static_assert(offsetof(UW_HeroCustomizationScreen_C, CurrencyType) == 0x043D);
static_assert(offsetof(UW_HeroCustomizationScreen_C, UnOwnedTitles) == 0x0440);
static_assert(offsetof(UW_HeroCustomizationScreen_C, LastSelectedTitle) == 0x0450);
static_assert(offsetof(UW_CosmeticItem_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_CosmeticItem_C, Border) == 0x0268);
static_assert(offsetof(UW_CosmeticItem_C, Border0) == 0x0270);
static_assert(offsetof(UW_CosmeticItem_C, Button) == 0x0278);
static_assert(offsetof(UW_CosmeticItem_C, CanvasPanel) == 0x0280);
static_assert(offsetof(UW_CosmeticItem_C, HorizontalBox) == 0x0288);
static_assert(offsetof(UW_CosmeticItem_C, Image) == 0x0290);
static_assert(offsetof(UW_CosmeticItem_C, Image1) == 0x0298);
static_assert(offsetof(UW_CosmeticItem_C, Image2) == 0x02A0);
static_assert(offsetof(UW_CosmeticItem_C, Image3) == 0x02A8);
static_assert(offsetof(UW_CosmeticItem_C, TextBlock) == 0x02B0);
static_assert(offsetof(UW_CosmeticItem_C, TextBlock4) == 0x02B8);
static_assert(offsetof(UW_CosmeticItem_C, Item) == 0x02C0);
static_assert(offsetof(UW_CosmeticItem_C, WeaponSkinTexture) == 0x0448);
static_assert(offsetof(UW_CosmeticItem_C, EquipScreenRef) == 0x0450);
static_assert(offsetof(UW_CosmeticItem_C, ToolTipRef) == 0x0460);
static_assert(offsetof(UW_CosmeticItem_C, CurrencyType) == 0x0468);
static_assert(offsetof(UW_CloseButton_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_CloseButton_C, Button) == 0x0268);
static_assert(offsetof(UW_CloseButton_C, ButtonText) == 0x0280);
static_assert(offsetof(UW_SteamProcessingPopup_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_SteamProcessingPopup_C, TextBlock) == 0x0268);
static_assert(offsetof(UW_SteamProcessingPopup_C, Throbber) == 0x0270);
static_assert(offsetof(UW_SteamProcessingPopup_C, W_CloseButton_C) == 0x0278);
static_assert(offsetof(UW_SteamProcessingPopup_C, InfoText) == 0x0280);
static_assert(offsetof(UW_NewItemPopup_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_NewItemPopup_C, HorizontalBox) == 0x0268);
static_assert(offsetof(UW_NewItemPopup_C, W_Button_C) == 0x0270);
static_assert(offsetof(UW_NewItemPopup_C, NewItemsPro) == 0x0278);
static_assert(offsetof(UW_IconTab_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_IconTab_C, HighlightedAnim) == 0x0268);
static_assert(offsetof(UW_IconTab_C, Button) == 0x0270);
static_assert(offsetof(UW_IconTab_C, CanvasPanel) == 0x0278);
static_assert(offsetof(UW_IconTab_C, Image) == 0x0280);
static_assert(offsetof(UW_IconTab_C, Icon) == 0x0288);
static_assert(offsetof(UW_IconTab_C, CategoryTag) == 0x02AC);
static_assert(offsetof(UW_Tooltip_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_Tooltip_C, Image) == 0x0268);
static_assert(offsetof(UW_Tooltip_C, TextBlock_Text) == 0x0270);
static_assert(offsetof(UW_Tooltip_C, TextBlock_Title) == 0x0278);
static_assert(offsetof(UW_Tooltip_C, TipText) == 0x0280);
static_assert(offsetof(UW_Tooltip_C, Title) == 0x0298);
static_assert(offsetof(UW_Tooltip_C, Icon) == 0x02B8);
static_assert(offsetof(UW_SelectionDropDownEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_SelectionDropDownEntry_C, Border) == 0x0268);
static_assert(offsetof(UW_SelectionDropDownEntry_C, Button) == 0x0270);
static_assert(offsetof(UW_SelectionDropDownEntry_C, Image) == 0x0278);
static_assert(offsetof(UW_SelectionDropDownEntry_C, Image0) == 0x0280);
static_assert(offsetof(UW_SelectionDropDownEntry_C, TextBlock) == 0x0288);
static_assert(offsetof(UW_SelectionDropDownEntry_C, TextBlock1) == 0x0290);
static_assert(offsetof(UW_SelectionDropDownEntry_C, DropDown) == 0x02A0);
static_assert(offsetof(UW_SelectionDropDownEntry_C, Selectable) == 0x02B0);
static_assert(offsetof(FST_DropDownItem, Icon_12_6380223C4895FD4A2D120B96273BF23E) == 0x0008);
static_assert(offsetof(FST_DropDownItem, ItemName_8_67D62A024DB96B7111E90AA857E3B18A) == 0x0090);
static_assert(offsetof(FST_DropDownItem, Description_11_43FBC27548EAA1F955E881B99A5F6B46) == 0x00A0);
static_assert(offsetof(FST_DropDownItem, Selectable_15_19D6D9BC4596D7AFFF7F0EBB895213E6) == 0x00B8);
static_assert(offsetof(UW_SelectionDropDown_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_SelectionDropDown_C, Border) == 0x0268);
static_assert(offsetof(UW_SelectionDropDown_C, Button) == 0x0270);
static_assert(offsetof(UW_SelectionDropDown_C, Image) == 0x0278);
static_assert(offsetof(UW_SelectionDropDown_C, Image0) == 0x0280);
static_assert(offsetof(UW_SelectionDropDown_C, ScaleBox) == 0x0288);
static_assert(offsetof(UW_SelectionDropDown_C, ScrollBox) == 0x0290);
static_assert(offsetof(UW_SelectionDropDown_C, TextBlock) == 0x0298);
static_assert(offsetof(UW_SelectionDropDown_C, ButtonSize) == 0x02A0);
static_assert(offsetof(UW_SelectionDropDown_C, Icon) == 0x02A8);
static_assert(offsetof(UW_SelectionDropDown_C, TipText) == 0x0330);
static_assert(offsetof(UW_SelectionDropDown_C, ItemsToList) == 0x0350);
static_assert(offsetof(UW_SelectionDropDown_C, ItemName) == 0x0368);
static_assert(offsetof(UW_SelectionDropDown_C, SpawnSelectMenu) == 0x0380);
static_assert(offsetof(UW_SelectionDropDown_C, DT) == 0x0388);
static_assert(offsetof(UW_SelectionDropDown_C, Selectable) == 0x0391);
static_assert(offsetof(UW_SelectionDropDown_C, Description) == 0x03A0);
static_assert(offsetof(UW_SelectionDropDown_C, SelectedItem) == 0x03B8);
static_assert(offsetof(UW_FadeToBlack_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_FadeToBlack_C, Fade) == 0x0268);
static_assert(offsetof(UW_FadeToBlack_C, Image) == 0x0270);
static_assert(offsetof(UW_Button_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_Button_C, Button) == 0x0268);
static_assert(offsetof(UW_Button_C, CanvasPanel) == 0x0270);
static_assert(offsetof(UW_Button_C, HorizontalBox) == 0x0278);
static_assert(offsetof(UW_Button_C, Image) == 0x0280);
static_assert(offsetof(UW_Button_C, Image0) == 0x0288);
static_assert(offsetof(UW_Button_C, Image_Icon) == 0x0290);
static_assert(offsetof(UW_Button_C, TextBlock) == 0x0298);
static_assert(offsetof(UW_Button_C, ButtonText) == 0x02B0);
static_assert(offsetof(UW_Button_C, Icon) == 0x02D0);
static_assert(offsetof(UW_Button_C, Category_Tag) == 0x02E4);
static_assert(offsetof(UW_Button_C, BackgroundColor) == 0x02EC);
static_assert(offsetof(UW_StealthMeter_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_StealthMeter_C, Image) == 0x0268);
static_assert(offsetof(UW_StealthMeter_C, Image0) == 0x0270);
static_assert(offsetof(UW_StealthMeter_C, Image1) == 0x0278);
static_assert(offsetof(UW_StealthMeter_C, Image2) == 0x0280);
static_assert(offsetof(UW_StealthMeter_C, Image3) == 0x0288);
static_assert(offsetof(UW_StealthMeter_C, Image4) == 0x0290);
static_assert(offsetof(UW_StealthMeter_C, InvisibilitySkillRef) == 0x0298);
static_assert(offsetof(UM_PiercingShotScreenEffect_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UM_PiercingShotScreenEffect_C, AimScope) == 0x0268);
static_assert(offsetof(UM_PiercingShotScreenEffect_C, Image) == 0x0270);
static_assert(offsetof(UM_PiercingShotScreenEffect_C, Image0) == 0x0278);
static_assert(offsetof(UW_ActionbarSlot_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ActionbarSlot_C, RechargedAngled) == 0x0268);
static_assert(offsetof(UW_ActionbarSlot_C, Recharged) == 0x0270);
static_assert(offsetof(UW_ActionbarSlot_C, CanvasPanel) == 0x0278);
static_assert(offsetof(UW_ActionbarSlot_C, HorizontalBox_Ammo) == 0x0280);
static_assert(offsetof(UW_ActionbarSlot_C, Image) == 0x0288);
static_assert(offsetof(UW_ActionbarSlot_C, Image_BulletIcon) == 0x0290);
static_assert(offsetof(UW_ActionbarSlot_C, Image_Icon) == 0x0298);
static_assert(offsetof(UW_ActionbarSlot_C, Image_Icon0) == 0x02A0);
static_assert(offsetof(UW_ActionbarSlot_C, ProgressBar_Square) == 0x02A8);
static_assert(offsetof(UW_ActionbarSlot_C, ProgressBar_Wide) == 0x02B0);
static_assert(offsetof(UW_ActionbarSlot_C, TextBlock_AmmoAmount) == 0x02B8);
static_assert(offsetof(UW_ActionbarSlot_C, TextBlock_Hotkey) == 0x02C0);
static_assert(offsetof(UW_ActionbarSlot_C, WidgetSwitcher_Bg) == 0x02C8);
static_assert(offsetof(UW_ActionbarSlot_C, SlotType) == 0x02D0);
static_assert(offsetof(UW_ActionbarSlot_C, BgColor) == 0x02D4);
static_assert(offsetof(UW_EliminationPlaque_C, Image) == 0x0260);
static_assert(offsetof(UW_EliminationPlaque_C, Team) == 0x0268);
static_assert(offsetof(UW_SpecialActionNotification_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_SpecialActionNotification_C, KillAnim) == 0x0268);
static_assert(offsetof(UW_SpecialActionNotification_C, PopUp) == 0x0270);
static_assert(offsetof(UW_SpecialActionNotification_C, Image) == 0x0278);
static_assert(offsetof(UW_SpecialActionNotification_C, Image0) == 0x0280);
static_assert(offsetof(UW_SpecialActionNotification_C, TextBlock) == 0x0288);
static_assert(offsetof(UW_SpecialActionNotification_C, TextBlock1) == 0x0290);
static_assert(offsetof(UW_SpecialActionNotification_C, TextBlock2) == 0x0298);
static_assert(offsetof(UW_SpecialActionNotification_C, Message) == 0x02A0);
static_assert(offsetof(UW_SpecialActionNotification_C, Color) == 0x02B8);
static_assert(offsetof(UW_SpecialActionNotification_C, Tag) == 0x02C8);
static_assert(offsetof(UW_SpecialActionNotification_C, KilledPlayerUsername) == 0x02D0);
static_assert(offsetof(UW_VehiclePassengers_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_VehiclePassengers_C, VerticalBox) == 0x0268);
static_assert(offsetof(UW_VehiclePassengers_C, Vehicle) == 0x0270);
static_assert(offsetof(UW_VehiclePassengers_C, Seats) == 0x0278);
static_assert(offsetof(UW_VehiclePassengerEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_VehiclePassengerEntry_C, TextBlock) == 0x0268);
static_assert(offsetof(UW_VehiclePassengerEntry_C, VehicleRef) == 0x0270);
static_assert(offsetof(UW_VehiclePassengerEntry_C, Seat) == 0x0280);
static_assert(offsetof(UW_PassengerSeatDot_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_PassengerSeatDot_C, Image) == 0x0268);
static_assert(offsetof(UW_PassengerSeatDot_C, VehicleBaseRef) == 0x0270);
static_assert(offsetof(UW_PassengerSeatDot_C, SeatRef) == 0x0280);
static_assert(offsetof(UW_PassengerSeatDot_C, VehicleRef) == 0x0288);
static_assert(offsetof(UW_VehicleBaseUI_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_VehicleBaseUI_C, Warning) == 0x0268);
static_assert(offsetof(UW_VehicleBaseUI_C, CanvasPanel) == 0x0270);
static_assert(offsetof(UW_VehicleBaseUI_C, CanvasPanel_Dots) == 0x0278);
static_assert(offsetof(UW_VehicleBaseUI_C, Image) == 0x0280);
static_assert(offsetof(UW_VehicleBaseUI_C, Image0) == 0x0288);
static_assert(offsetof(UW_VehicleBaseUI_C, ProgressBar) == 0x0290);
static_assert(offsetof(UW_VehicleBaseUI_C, SizeBox) == 0x0298);
static_assert(offsetof(UW_VehicleBaseUI_C, TextBlock) == 0x02A0);
static_assert(offsetof(UW_VehicleBaseUI_C, VerticalBox) == 0x02A8);
static_assert(offsetof(UW_VehicleBaseUI_C, W_VehiclePassengers) == 0x02B0);
static_assert(offsetof(UW_VehicleBaseUI_C, VehicleRef) == 0x02B8);
static_assert(offsetof(UW_VehicleBaseUI_C, VehicleSeatDotLocations) == 0x02C8);
static_assert(offsetof(UW_VehicleBaseUI_C, VehicleTopViewImage) == 0x02D8);
static_assert(offsetof(UW_VotekickVotePopup_C, Border) == 0x0260);
static_assert(offsetof(UW_VotekickVotePopup_C, Border0) == 0x0268);
static_assert(offsetof(UW_VotekickVotePopup_C, Image) == 0x0270);
static_assert(offsetof(UW_VotekickVotePopup_C, Image1) == 0x0278);
static_assert(offsetof(UW_VotekickVotePopup_C, TextBlock) == 0x0280);
static_assert(offsetof(UW_VotekickVotePopup_C, TextBlock2) == 0x0288);
static_assert(offsetof(UW_VotekickVotePopup_C, TextBlock3) == 0x0290);
static_assert(offsetof(UW_VotekickVotePopup_C, TextBlock4) == 0x0298);
static_assert(offsetof(UW_VotekickVotePopup_C, TextBlock5) == 0x02A0);
static_assert(offsetof(UW_TankHUD_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_TankHUD_C, HorizontalBox) == 0x0268);
static_assert(offsetof(UW_TankHUD_C, Image_Skill1) == 0x0270);
static_assert(offsetof(UW_TankHUD_C, Image_Skill10) == 0x0278);
static_assert(offsetof(UW_TankHUD_C, Image_Skill2) == 0x0280);
static_assert(offsetof(UW_TankHUD_C, Image_Skill21) == 0x0288);
static_assert(offsetof(UW_TankHUD_C, Image_Skill22) == 0x0290);
static_assert(offsetof(UW_TankHUD_C, ProgressBar_Skill2) == 0x0298);
static_assert(offsetof(UW_TankHUD_C, ProgressBar_Skill23) == 0x02A0);
static_assert(offsetof(UW_TankHUD_C, ProgressBar_Skill24) == 0x02A8);
static_assert(offsetof(UW_TankHUD_C, TextBlock_Skill1) == 0x02B0);
static_assert(offsetof(UW_TankHUD_C, Textblock_Skill2) == 0x02B8);
static_assert(offsetof(UW_TankHUD_C, TextBlock_Skill3) == 0x02C0);
static_assert(offsetof(UW_TankHUD_C, VerticalBox) == 0x02C8);
static_assert(offsetof(UW_TankHUD_C, W_VehicleBaseUI) == 0x02D0);
static_assert(offsetof(UW_TankHUD_C, WidgetSwitcher_Skill2) == 0x02D8);
static_assert(offsetof(UW_TankHUD_C, WidgetSwitcher_Skill25) == 0x02E0);
static_assert(offsetof(UW_TankHUD_C, WidgetSwitcher_Skill26) == 0x02E8);
static_assert(offsetof(UW_TankHUD_C, TankRef) == 0x02F0);
static_assert(offsetof(UW_SpecialActionStack_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_SpecialActionStack_C, HorizontalBox_KillConfirms) == 0x0268);
static_assert(offsetof(UW_SpecialActionStack_C, HorizontalBox_SpecialKills) == 0x0270);
static_assert(offsetof(UW_SpecialActionStack_C, WidgetSwitcher) == 0x0278);
static_assert(offsetof(UW_PlaneHUD_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_PlaneHUD_C, HorizontalBox) == 0x0268);
static_assert(offsetof(UW_PlaneHUD_C, Image) == 0x0270);
static_assert(offsetof(UW_PlaneHUD_C, Image0) == 0x0278);
static_assert(offsetof(UW_PlaneHUD_C, Image1) == 0x0280);
static_assert(offsetof(UW_PlaneHUD_C, Image_Skill1) == 0x0288);
static_assert(offsetof(UW_PlaneHUD_C, Image_Skill12) == 0x0290);
static_assert(offsetof(UW_PlaneHUD_C, Image_Skill2) == 0x0298);
static_assert(offsetof(UW_PlaneHUD_C, Image_Skill23) == 0x02A0);
static_assert(offsetof(UW_PlaneHUD_C, Image_Skill24) == 0x02A8);
static_assert(offsetof(UW_PlaneHUD_C, Image_Skill25) == 0x02B0);
static_assert(offsetof(UW_PlaneHUD_C, ProgressBar_Skill2) == 0x02B8);
static_assert(offsetof(UW_PlaneHUD_C, ProgressBar_Skill26) == 0x02C0);
static_assert(offsetof(UW_PlaneHUD_C, ProgressBar_Skill27) == 0x02C8);
static_assert(offsetof(UW_PlaneHUD_C, TextBlock) == 0x02D0);
static_assert(offsetof(UW_PlaneHUD_C, TextBlock_Skill1) == 0x02D8);
static_assert(offsetof(UW_PlaneHUD_C, Textblock_Skill2) == 0x02E0);
static_assert(offsetof(UW_PlaneHUD_C, TextBlock_Skill3) == 0x02E8);
static_assert(offsetof(UW_PlaneHUD_C, W_VehicleBaseUI) == 0x02F0);
static_assert(offsetof(UW_PlaneHUD_C, WidgetSwitcher) == 0x02F8);
static_assert(offsetof(UW_PlaneHUD_C, WidgetSwitcher_Skill2) == 0x0300);
static_assert(offsetof(UW_PlaneHUD_C, WidgetSwitcher_Skill28) == 0x0308);
static_assert(offsetof(UW_PlaneHUD_C, WidgetSwitcher_Skill29) == 0x0310);
static_assert(offsetof(UW_PlaneHUD_C, CockpitWarningSound) == 0x0318);
static_assert(offsetof(UW_PlaneHUD_C, LatestPlaneRef) == 0x0320);
static_assert(offsetof(UW_PlaneHUD_C, OldPlaneRef) == 0x0328);
static_assert(offsetof(UW_NewKillConfirmEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_NewKillConfirmEntry_C, PopUp) == 0x0268);
static_assert(offsetof(UW_NewKillConfirmEntry_C, Image) == 0x0270);
static_assert(offsetof(UW_NewKillConfirmEntry_C, TextBlock) == 0x0278);
static_assert(offsetof(UW_NewKillConfirmEntry_C, TextBlock0) == 0x0280);
static_assert(offsetof(UW_NewKillConfirmEntry_C, VictimName) == 0x0288);
static_assert(offsetof(UW_HeroProgressWidget_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_HeroProgressWidget_C, Border) == 0x0268);
static_assert(offsetof(UW_HeroProgressWidget_C, Image) == 0x0270);
static_assert(offsetof(UW_HeroProgressWidget_C, Image0) == 0x0278);
static_assert(offsetof(UW_HeroProgressWidget_C, Image1) == 0x0280);
static_assert(offsetof(UW_HeroProgressWidget_C, Image2) == 0x0288);
static_assert(offsetof(UW_HeroProgressWidget_C, Image_BaseXP) == 0x0290);
static_assert(offsetof(UW_HeroProgressWidget_C, Image_MatchXP) == 0x0298);
static_assert(offsetof(UW_HeroProgressWidget_C, ProgressBar_BaseXP) == 0x02A0);
static_assert(offsetof(UW_HeroProgressWidget_C, ProgressBar_MatchXP) == 0x02A8);
static_assert(offsetof(UW_HeroProgressWidget_C, TextBlock) == 0x02B0);
static_assert(offsetof(UW_HeroProgressWidget_C, TextBlock3) == 0x02B8);
static_assert(offsetof(UW_HeroProgressWidget_C, TextBlock4) == 0x02C0);
static_assert(offsetof(UW_HeroProgressWidget_C, TextBlock5) == 0x02C8);
static_assert(offsetof(UW_HeroProgressWidget_C, HeroXPPercentageBarMatRef) == 0x02D8);
static_assert(offsetof(UW_HeroProgressWidget_C, HeroMatchXPMatRef) == 0x02E0);
static_assert(offsetof(UW_EliminationHUD_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_EliminationHUD_C, HorizontalBox_Players_Allied) == 0x0268);
static_assert(offsetof(UW_EliminationHUD_C, HorizontalBox_Players_Axis) == 0x0270);
static_assert(offsetof(UW_EliminationHUD_C, Image) == 0x0278);
static_assert(offsetof(UW_EliminationHUD_C, Image0) == 0x0280);
static_assert(offsetof(UW_EliminationHUD_C, Image1) == 0x0288);
static_assert(offsetof(UW_EliminationHUD_C, Image2) == 0x0290);
static_assert(offsetof(UW_EliminationHUD_C, Image3) == 0x0298);
static_assert(offsetof(UW_EliminationHUD_C, Image4) == 0x02A0);
static_assert(offsetof(UW_EliminationHUD_C, Image5) == 0x02A8);
static_assert(offsetof(UW_EliminationHUD_C, Image6) == 0x02B0);
static_assert(offsetof(UW_EliminationHUD_C, Image7) == 0x02B8);
static_assert(offsetof(UW_EliminationHUD_C, Image8) == 0x02C0);
static_assert(offsetof(UW_EliminationHUD_C, Image9) == 0x02C8);
static_assert(offsetof(UW_EliminationHUD_C, Image10) == 0x02D0);
static_assert(offsetof(UW_EliminationHUD_C, Image11) == 0x02D8);
static_assert(offsetof(UW_EliminationHUD_C, Image12) == 0x02E0);
static_assert(offsetof(UW_EliminationHUD_C, Image13) == 0x02E8);
static_assert(offsetof(UW_EliminationHUD_C, Image14) == 0x02F0);
static_assert(offsetof(UW_EliminationHUD_C, Image15) == 0x02F8);
static_assert(offsetof(UW_EliminationHUD_C, Image16) == 0x0300);
static_assert(offsetof(UW_EliminationHUD_C, Image17) == 0x0308);
static_assert(offsetof(UW_EliminationHUD_C, Image18) == 0x0310);
static_assert(offsetof(UW_EliminationHUD_C, Image19) == 0x0318);
static_assert(offsetof(UW_EliminationHUD_C, Image20) == 0x0320);
static_assert(offsetof(UW_EliminationHUD_C, Image21) == 0x0328);
static_assert(offsetof(UW_EliminationHUD_C, Image22) == 0x0330);
static_assert(offsetof(UW_DynamicCrosshair_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_DynamicCrosshair_C, Hit) == 0x0268);
static_assert(offsetof(UW_DynamicCrosshair_C, Appear) == 0x0270);
static_assert(offsetof(UW_DynamicCrosshair_C, CanvasPanel) == 0x0278);
static_assert(offsetof(UW_DynamicCrosshair_C, Image_bottom) == 0x0280);
static_assert(offsetof(UW_DynamicCrosshair_C, Image_centerdot) == 0x0288);
static_assert(offsetof(UW_DynamicCrosshair_C, Image_Hit) == 0x0290);
static_assert(offsetof(UW_DynamicCrosshair_C, Image_left) == 0x0298);
static_assert(offsetof(UW_DynamicCrosshair_C, Image_right) == 0x02A0);
static_assert(offsetof(UW_DynamicCrosshair_C, Image_top) == 0x02A8);
static_assert(offsetof(UW_DynamicCrosshair_C, CrosshairType) == 0x02B4);
static_assert(offsetof(UW_DynamicCrosshair_C, MIDCrosshair) == 0x02B8);
static_assert(offsetof(UW_DualRocketHUD_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_DualRocketHUD_C, Image) == 0x0268);
static_assert(offsetof(UW_DualRocketHUD_C, Image0) == 0x0270);
static_assert(offsetof(UW_DualRocketHUD_C, Image1) == 0x0278);
static_assert(offsetof(UW_DualRocketHUD_C, Image2) == 0x0280);
static_assert(offsetof(UW_DualRocketHUD_C, ProgressBar) == 0x0288);
static_assert(offsetof(UW_DualRocketHUD_C, ProgressBar3) == 0x0290);
static_assert(offsetof(UW_DualRocketHUD_C, TextBlock) == 0x0298);
static_assert(offsetof(UW_DualRocketHUD_C, TextBlock4) == 0x02A0);
static_assert(offsetof(UW_DeathScreen_C, Image) == 0x0260);
static_assert(offsetof(UW_ConquestHUD_C, Image) == 0x0260);
static_assert(offsetof(UW_ConquestHUD_C, Image0) == 0x0268);
static_assert(offsetof(UW_ConquestHUD_C, ProgressBar) == 0x0270);
static_assert(offsetof(UW_ConquestHUD_C, ProgressBar1) == 0x0278);
static_assert(offsetof(UW_ConquestHUD_C, TextBlock) == 0x0280);
static_assert(offsetof(UW_ConquestHUD_C, TextBlock2) == 0x0288);
static_assert(offsetof(UW_ConquestHUD_C, TextBlock3) == 0x0290);
static_assert(offsetof(UW_ConquestHUD_C, TextBlock4) == 0x0298);
static_assert(offsetof(UW_CaptureAndHoldHUD_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_CaptureAndHoldHUD_C, Image) == 0x0268);
static_assert(offsetof(UW_CaptureAndHoldHUD_C, Image0) == 0x0270);
static_assert(offsetof(UW_CaptureAndHoldHUD_C, Image1) == 0x0278);
static_assert(offsetof(UW_CaptureAndHoldHUD_C, ProgressBar) == 0x0280);
static_assert(offsetof(UW_CaptureAndHoldHUD_C, ProgressBar2) == 0x0288);
static_assert(offsetof(UW_CaptureAndHoldHUD_C, TextBlock) == 0x0290);
static_assert(offsetof(UW_CaptureAndHoldHUD_C, TextBlock3) == 0x0298);
static_assert(offsetof(UW_ActiveSkill_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_ActiveSkill_C, SkillActivate) == 0x0268);
static_assert(offsetof(UW_ActiveSkill_C, Image) == 0x0270);
static_assert(offsetof(UW_ActiveSkill_C, ProgressBar) == 0x0278);
static_assert(offsetof(UW_ActiveSkill_C, VerticalBox_ActiveSkill) == 0x0280);
static_assert(offsetof(UW_ActiveSkill_C, SkillIcon) == 0x0288);
static_assert(offsetof(UW_Actionbar_C, W_ActionbarSlot) == 0x0260);
static_assert(offsetof(UW_Actionbar_C, W_ActionbarSlot0) == 0x0268);
static_assert(offsetof(UW_Actionbar_C, W_ActionbarSlot1) == 0x0270);
static_assert(offsetof(UW_Actionbar_C, W_ActionbarWeaponSlot) == 0x0278);
static_assert(offsetof(UW_Actionbar_C, W_ActionbarWeaponSlot2) == 0x0280);
static_assert(offsetof(UW_Actionbar_C, W_ActionbarWeaponSlot3) == 0x0288);
static_assert(offsetof(UM_MotorBikeHUD_C, W_VehicleHP) == 0x0260);
static_assert(offsetof(UM_AAHUD_C, W_VehicleHP) == 0x0260);
static_assert(offsetof(UW_SpawnSelect_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_SpawnSelect_C, SpacebarAnim) == 0x0268);
static_assert(offsetof(UW_SpawnSelect_C, Swap) == 0x0270);
static_assert(offsetof(UW_SpawnSelect_C, DropDown) == 0x0278);
static_assert(offsetof(UW_SpawnSelect_C, Border) == 0x0280);
static_assert(offsetof(UW_SpawnSelect_C, Button_Commando) == 0x0288);
static_assert(offsetof(UW_SpawnSelect_C, Button_Gunner) == 0x0290);
static_assert(offsetof(UW_SpawnSelect_C, Button_Soldier) == 0x0298);
static_assert(offsetof(UW_SpawnSelect_C, Image) == 0x02A0);
static_assert(offsetof(UW_SpawnSelect_C, Image_CommandoIcon) == 0x02A8);
static_assert(offsetof(UW_SpawnSelect_C, Image_GunnerIcon) == 0x02B0);
static_assert(offsetof(UW_SpawnSelect_C, Image_SoldierIcon) == 0x02B8);
static_assert(offsetof(UW_SpawnSelect_C, Image_TeamColorBackgroundFade) == 0x02C0);
static_assert(offsetof(UW_SpawnSelect_C, Image_TeamFlag) == 0x02C8);
static_assert(offsetof(UW_SpawnSelect_C, SizeBox) == 0x02D0);
static_assert(offsetof(UW_SpawnSelect_C, SizeBox_Commando) == 0x02D8);
static_assert(offsetof(UW_SpawnSelect_C, SizeBox_CommandoOverlay) == 0x02E0);
static_assert(offsetof(UW_SpawnSelect_C, SizeBox_Gunner) == 0x02E8);
static_assert(offsetof(UW_SpawnSelect_C, SizeBox_GunnerOverlay) == 0x02F0);
static_assert(offsetof(UW_SpawnSelect_C, SizeBox_Soldier) == 0x02F8);
static_assert(offsetof(UW_SpawnSelect_C, SizeBox_SoldierOverlay) == 0x0300);
static_assert(offsetof(UW_SpawnSelect_C, TextBlock_ClassInfo) == 0x0308);
static_assert(offsetof(UW_SpawnSelect_C, TextBlock_ClassName) == 0x0310);
static_assert(offsetof(UW_SpawnSelect_C, W_Button_C) == 0x0318);
static_assert(offsetof(UW_SpawnSelect_C, W_Button_ChangeTeam) == 0x0320);
static_assert(offsetof(UW_SpawnSelect_C, W_Button_Spawn) == 0x0328);
static_assert(offsetof(UW_SpawnSelect_C, W_SelectionDropDown_CoreWeapon) == 0x0330);
static_assert(offsetof(UW_SpawnSelect_C, W_SelectionDropDown_Explosive) == 0x0338);
static_assert(offsetof(UW_SpawnSelect_C, W_SelectionDropDown_Skill1) == 0x0340);
static_assert(offsetof(UW_SpawnSelect_C, W_SelectionDropDown_Skill2) == 0x0348);
static_assert(offsetof(UW_SpawnSelect_C, W_SelectionDropDown_Weapon1) == 0x0350);
static_assert(offsetof(UW_SpawnSelect_C, W_SelectionDropDown_Weapon2) == 0x0358);
static_assert(offsetof(UW_SpawnSelect_C, SelectedClass) == 0x0360);
static_assert(offsetof(UW_SpawnSelect_C, Team) == 0x0361);
static_assert(offsetof(UW_SpawnSelect_C, LoadoutBgColor) == 0x0374);
static_assert(offsetof(UW_SpawnSelect_C, PreSwapSelectable) == 0x0384);
static_assert(offsetof(UW_SpawnSelectPoint_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_SpawnSelectPoint_C, NewAnimation) == 0x0268);
static_assert(offsetof(UW_SpawnSelectPoint_C, Button) == 0x0270);
static_assert(offsetof(UW_SpawnSelectPoint_C, CanvasPanel) == 0x0278);
static_assert(offsetof(UW_SpawnSelectPoint_C, Image) == 0x0280);
static_assert(offsetof(UW_SpawnSelectPoint_C, Image0) == 0x0288);
static_assert(offsetof(UW_SpawnSelectPoint_C, TextBlock) == 0x0290);
static_assert(offsetof(UW_SpawnSelectPoint_C, TextBlock1) == 0x0298);
static_assert(offsetof(UW_SpawnSelectPoint_C, SpawnPointName) == 0x02A0);
static_assert(offsetof(UW_SpawnSelectPoint_C, SpawnableRef) == 0x02B8);
static_assert(offsetof(UW_Notification_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_Notification_C, PopupAnimation) == 0x0268);
static_assert(offsetof(UW_Notification_C, Border) == 0x0270);
static_assert(offsetof(UW_Notification_C, TextBlock_Message) == 0x0278);
static_assert(offsetof(UW_Notification_C, VerticalBox) == 0x0280);
static_assert(offsetof(UW_Notification_C, NotificationMessage) == 0x0288);
static_assert(offsetof(UW_Notification_C, NotificationIcon) == 0x02A0);
static_assert(offsetof(UW_Notification_C, Color) == 0x02A8);
static_assert(offsetof(UW_LoadingScreen_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_LoadingScreen_C, Init) == 0x0268);
static_assert(offsetof(UW_LoadingScreen_C, CircularThrobber) == 0x0270);
static_assert(offsetof(UW_LoadingScreen_C, Image) == 0x0278);
static_assert(offsetof(UW_LoadingScreen_C, Image0) == 0x0280);
static_assert(offsetof(UW_LoadingScreen_C, Image1) == 0x0288);
static_assert(offsetof(UW_LoadingScreen_C, Image2) == 0x0290);
static_assert(offsetof(UW_LoadingScreen_C, TextBlock) == 0x0298);
static_assert(offsetof(UW_LoadingScreen_C, TextBlock3) == 0x02A0);
static_assert(offsetof(UW_LoadingScreen_C, TextBlock4) == 0x02A8);
static_assert(offsetof(UW_LoadingScreen_C, TextBlock5) == 0x02B0);
static_assert(offsetof(UW_LoadingScreen_C, Loading_Text) == 0x02B8);
static_assert(offsetof(UW_LoadingScreen_C, MapName) == 0x02D0);
static_assert(offsetof(UW_LoadingScreen_C, ServerName) == 0x02E8);
static_assert(offsetof(UW_LoadingScreen_C, Music) == 0x0310);
static_assert(offsetof(UW_LoadingScreen_C, RandomTips) == 0x0318);
static_assert(offsetof(UW_HUD_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_HUD_C, SniperShot) == 0x0268);
static_assert(offsetof(UW_HUD_C, SkillEnding) == 0x0270);
static_assert(offsetof(UW_HUD_C, LowHealth) == 0x0278);
static_assert(offsetof(UW_HUD_C, Hit) == 0x0280);
static_assert(offsetof(UW_HUD_C, WeaponSwap) == 0x0288);
static_assert(offsetof(UW_HUD_C, DamageDirectionIndicator) == 0x0290);
static_assert(offsetof(UW_HUD_C, Skill2Ready) == 0x0298);
static_assert(offsetof(UW_HUD_C, Skill1Ready) == 0x02A0);
static_assert(offsetof(UW_HUD_C, Killed) == 0x02A8);
static_assert(offsetof(UW_HUD_C, ScopeFocus) == 0x02B0);
static_assert(offsetof(UW_HUD_C, CrosshairAnimation) == 0x02B8);
static_assert(offsetof(UW_HUD_C, FInteract) == 0x02C0);
static_assert(offsetof(UW_HUD_C, DamageRecieved) == 0x02C8);
static_assert(offsetof(UW_HUD_C, Border) == 0x02D0);
static_assert(offsetof(UW_HUD_C, Border0) == 0x02D8);
static_assert(offsetof(UW_HUD_C, Border1) == 0x02E0);
static_assert(offsetof(UW_HUD_C, Border2) == 0x02E8);
static_assert(offsetof(UW_HUD_C, Border3) == 0x02F0);
static_assert(offsetof(UW_HUD_C, Border4) == 0x02F8);
static_assert(offsetof(UW_HUD_C, Border5) == 0x0300);
static_assert(offsetof(UW_HUD_C, Border6) == 0x0308);
static_assert(offsetof(UW_HUD_C, CanvasPanel) == 0x0310);
static_assert(offsetof(UW_HUD_C, CanvasPanel_Crosshair) == 0x0318);
static_assert(offsetof(UW_HUD_C, CanvasPanel_DeathScreen) == 0x0320);
static_assert(offsetof(UW_HUD_C, CanvasPanel_Health) == 0x0328);
static_assert(offsetof(UW_HUD_C, CanvasPanel_SniperScope) == 0x0330);
static_assert(offsetof(UW_HUD_C, HorizontalBox) == 0x0338);
static_assert(offsetof(UW_HUD_C, HorizontalBox7) == 0x0340);
static_assert(offsetof(UW_HUD_C, HorizontalBox_ActiveSkills) == 0x0348);
static_assert(offsetof(UW_HUD_C, Image) == 0x0350);
static_assert(offsetof(UW_HUD_C, Image8) == 0x0358);
static_assert(offsetof(UW_HUD_C, Image9) == 0x0360);
static_assert(offsetof(UW_HUD_C, Image10) == 0x0368);
static_assert(offsetof(UW_HUD_C, Image11) == 0x0370);
static_assert(offsetof(UW_HUD_C, Image12) == 0x0378);
static_assert(offsetof(UW_HUD_C, Image13) == 0x0380);
static_assert(offsetof(UW_HUD_C, Image14) == 0x0388);
static_assert(offsetof(UW_HUD_C, Image15) == 0x0390);
static_assert(offsetof(UW_HUD_C, Image16) == 0x0398);
static_assert(offsetof(UW_HUD_C, Image17) == 0x03A0);
static_assert(offsetof(UW_HUD_C, Image_Burning) == 0x03A8);
static_assert(offsetof(UW_HUD_C, Image_ClassicCrosshair) == 0x03B0);
static_assert(offsetof(UW_HUD_C, Image_CoreWeapon) == 0x03B8);
static_assert(offsetof(UW_HUD_C, Image_Crosshair) == 0x03C0);
static_assert(offsetof(UW_HUD_C, Image_Crosshair_Aim) == 0x03C8);
static_assert(offsetof(UW_HUD_C, Image_Crosshair_Hit) == 0x03D0);
static_assert(offsetof(UW_HUD_C, Image_DamageBlood) == 0x03D8);
static_assert(offsetof(UW_HUD_C, Image_DamageIndicator) == 0x03E0);
static_assert(offsetof(UW_HUD_C, Image_Explosive) == 0x03E8);
static_assert(offsetof(UW_HUD_C, Image_Hit) == 0x03F0);
static_assert(offsetof(UW_HUD_C, Image_Poison) == 0x03F8);
static_assert(offsetof(UW_HUD_C, Image_ReloadBar) == 0x0400);
static_assert(offsetof(UW_HUD_C, Image_Scope) == 0x0408);
static_assert(offsetof(UW_HUD_C, Image_Skill1) == 0x0410);
static_assert(offsetof(UW_HUD_C, Image_Skill118) == 0x0418);
static_assert(offsetof(UW_HUD_C, Image_Skill119) == 0x0420);
static_assert(offsetof(UW_HUD_C, Image_Skill1ReadyIcon) == 0x0428);
static_assert(offsetof(UW_HUD_C, Image_Skill2) == 0x0430);
static_assert(offsetof(UW_HUD_C, Image_Skill2ReadyIcon) == 0x0438);
static_assert(offsetof(UW_HUD_C, Image_TankLookIndicator) == 0x0440);
static_assert(offsetof(UW_HUD_C, Image_Weapon1) == 0x0448);
static_assert(offsetof(UW_HUD_C, Image_Weapon2) == 0x0450);
static_assert(offsetof(UW_HUD_C, Img_SubCrosshairBar) == 0x0458);
static_assert(offsetof(UW_HUD_C, Img_SubcrosshairBarFill) == 0x0460);
static_assert(offsetof(UW_HUD_C, M_AAHUD) == 0x0468);
static_assert(offsetof(UW_HUD_C, M_MotorBikeHUD) == 0x0470);
static_assert(offsetof(UW_HUD_C, ProgressBar) == 0x0478);
static_assert(offsetof(UW_HUD_C, ProgressBar20) == 0x0480);
static_assert(offsetof(UW_HUD_C, ProgressBar_Ammo) == 0x0488);
static_assert(offsetof(UW_HUD_C, ProgressBar_Explosive) == 0x0490);
static_assert(offsetof(UW_HUD_C, ProgressBar_Skill1) == 0x0498);
static_assert(offsetof(UW_HUD_C, ProgressBar_Skill2) == 0x04A0);
static_assert(offsetof(UW_HUD_C, ProgressBar_Weapon1) == 0x04A8);
static_assert(offsetof(UW_HUD_C, ProgressBar_Weapon121) == 0x04B0);
static_assert(offsetof(UW_HUD_C, ProgressBar_Weapon2) == 0x04B8);
static_assert(offsetof(UW_HUD_C, ScaleBox) == 0x04C0);
static_assert(offsetof(UW_HUD_C, Text_Playername) == 0x04C8);
static_assert(offsetof(UW_HUD_C, Text_SteamID) == 0x04D0);
static_assert(offsetof(UW_HUD_C, TextBlock) == 0x04D8);
static_assert(offsetof(UW_HUD_C, TextBlock22) == 0x04E0);
static_assert(offsetof(UW_HUD_C, TextBlock23) == 0x04E8);
static_assert(offsetof(UW_HUD_C, TextBlock24) == 0x04F0);
static_assert(offsetof(UW_HUD_C, TextBlock25) == 0x04F8);
static_assert(offsetof(UW_HUD_C, TextBlock26) == 0x0500);
static_assert(offsetof(UW_HUD_C, TextBlock27) == 0x0508);
static_assert(offsetof(UW_HUD_C, TextBlock28) == 0x0510);
static_assert(offsetof(UW_HUD_C, TextBlock29) == 0x0518);
static_assert(offsetof(UW_HUD_C, TextBlock30) == 0x0520);
static_assert(offsetof(UW_HUD_C, TextBlock_ActionSlot0_CoreWeapon) == 0x0528);
static_assert(offsetof(UW_HUD_C, TextBlock_ActionSlot1Key) == 0x0530);
static_assert(offsetof(UW_HUD_C, TextBlock_ActionSlot2Key) == 0x0538);
static_assert(offsetof(UW_HUD_C, TextBlock_ActionSlot3Key) == 0x0540);
static_assert(offsetof(UW_HUD_C, TextBlock_Ammo) == 0x0548);
static_assert(offsetof(UW_HUD_C, TextBlock_Ammo31) == 0x0550);
static_assert(offsetof(UW_HUD_C, TextBlock_Skill1Key) == 0x0558);
static_assert(offsetof(UW_HUD_C, TextBlock_Skill2Key) == 0x0560);
static_assert(offsetof(UW_HUD_C, VerticalBox_Kills) == 0x0568);
static_assert(offsetof(UW_HUD_C, W_Actionbar) == 0x0570);
static_assert(offsetof(UW_HUD_C, W_ActiveSkill) == 0x0578);
static_assert(offsetof(UW_HUD_C, W_ActiveSkill32) == 0x0580);
static_assert(offsetof(UW_HUD_C, W_ConquestHUD) == 0x0588);
static_assert(offsetof(UW_HUD_C, W_DeathScreen) == 0x0590);
static_assert(offsetof(UW_HUD_C, W_DualRocket) == 0x0598);
static_assert(offsetof(UW_HUD_C, W_DynamicCrosshair) == 0x05A0);
static_assert(offsetof(UW_HUD_C, W_EliminationHUD) == 0x05A8);
static_assert(offsetof(UW_HUD_C, W_HeroProgressWidget) == 0x05B0);
static_assert(offsetof(UW_HUD_C, W_PlaneHUD) == 0x05B8);
static_assert(offsetof(UW_HUD_C, W_RocketHUD) == 0x05C0);
static_assert(offsetof(UW_HUD_C, W_SpecialActionStack) == 0x05C8);
static_assert(offsetof(UW_HUD_C, W_TankHUD) == 0x05D0);
static_assert(offsetof(UW_HUD_C, W_VotekickVotePopup) == 0x05D8);
static_assert(offsetof(UW_HUD_C, WidgetSwitcher_CoreWeapon) == 0x05E0);
static_assert(offsetof(UW_HUD_C, WidgetSwitcher_Explosive) == 0x05E8);
static_assert(offsetof(UW_HUD_C, WidgetSwitcher_GameModeHUD) == 0x05F0);
static_assert(offsetof(UW_HUD_C, WidgetSwitcher_Skill1) == 0x05F8);
static_assert(offsetof(UW_HUD_C, WidgetSwitcher_Skill2) == 0x0600);
static_assert(offsetof(UW_HUD_C, WidgetSwitcher_Weapon1) == 0x0608);
static_assert(offsetof(UW_HUD_C, WidgetSwitcher_Weapon2) == 0x0610);
static_assert(offsetof(UW_HUD_C, CharacterRef) == 0x0618);
static_assert(offsetof(UW_HUD_C, ReloadbarMaterial) == 0x0620);
static_assert(offsetof(UW_HUD_C, CurrentlyControlledPawn) == 0x0630);
static_assert(offsetof(UW_HUD_C, LastControlledVehicle) == 0x0638);
static_assert(offsetof(UW_HUD_C, TankCrosshairLocation) == 0x064C);
static_assert(offsetof(UW_HUD_C, LastAttackerLocation) == 0x0664);
static_assert(offsetof(UW_HUD_C, CurrentEquipedItem) == 0x0670);
static_assert(offsetof(UW_HUD_C, SubCrosshairBarMaterial) == 0x07F0);
static_assert(offsetof(UW_BlackFadeInAndOut_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_BlackFadeInAndOut_C, NewAnimation) == 0x0268);
static_assert(offsetof(UW_BlackFadeInAndOut_C, Image) == 0x0270);
static_assert(offsetof(UW_StatsSaving_C, Image) == 0x0260);
static_assert(offsetof(UW_StatsSaving_C, TextBlock) == 0x0268);
static_assert(offsetof(UW_StatsSaving_C, Throbber) == 0x0270);
static_assert(offsetof(UW_CheckBox_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_CheckBox_C, CheckBox) == 0x0268);
static_assert(offsetof(UW_CheckBox_C, Image) == 0x0270);
static_assert(offsetof(UW_GainedXPEntry_C, Image) == 0x0260);
static_assert(offsetof(UW_GainedXPEntry_C, TextBlock) == 0x0268);
static_assert(offsetof(UW_GainedXPEntry_C, TextBlock0) == 0x0270);
static_assert(offsetof(UW_GainedXPEntry_C, Team) == 0x0278);
static_assert(offsetof(UW_GainedXPEntry_C, UnitType) == 0x0279);
static_assert(offsetof(UW_EndGameMapVote_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_EndGameMapVote_C, Border) == 0x0268);
static_assert(offsetof(UW_EndGameMapVote_C, Button) == 0x0270);
static_assert(offsetof(UW_EndGameMapVote_C, Image) == 0x0278);
static_assert(offsetof(UW_EndGameMapVote_C, TextBlock) == 0x0280);
static_assert(offsetof(UW_EndGameMapVote_C, TextBlock0) == 0x0288);
static_assert(offsetof(UW_EndGameMapVote_C, W_CheckBox_C) == 0x0290);
static_assert(offsetof(UW_EndGameMapVote_C, MapName) == 0x02A0);
static_assert(offsetof(UW_KillFeedEntry_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_KillFeedEntry_C, PopIn) == 0x0268);
static_assert(offsetof(UW_KillFeedEntry_C, TextBlock) == 0x0270);
static_assert(offsetof(UW_KillFeedEntry_C, TextBlock_Killer) == 0x0278);
static_assert(offsetof(UW_KillFeedEntry_C, TextBlock_Victim) == 0x0280);
static_assert(offsetof(UW_KillFeedEntry_C, Killer) == 0x0288);
static_assert(offsetof(UW_KillFeedEntry_C, Victim) == 0x02F0);
static_assert(offsetof(UW_KillFeedEntry_C, KillerTeam) == 0x0358);
static_assert(offsetof(UW_KillFeed_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_KillFeed_C, CanvasPanel) == 0x0268);
static_assert(offsetof(UW_KillFeed_C, VerticalBox) == 0x0270);
static_assert(offsetof(UW_EndGameScreen_C, UberGraphFrame) == 0x0260);
static_assert(offsetof(UW_EndGameScreen_C, Rewards) == 0x0268);
static_assert(offsetof(UW_EndGameScreen_C, ClockTick) == 0x0270);
static_assert(offsetof(UW_EndGameScreen_C, DropDown) == 0x0278);
static_assert(offsetof(UW_EndGameScreen_C, Border) == 0x0280);
static_assert(offsetof(UW_EndGameScreen_C, Image) == 0x0288);
static_assert(offsetof(UW_EndGameScreen_C, Image0) == 0x0290);
static_assert(offsetof(UW_EndGameScreen_C, Image1) == 0x0298);
static_assert(offsetof(UW_EndGameScreen_C, Image2) == 0x02A0);
static_assert(offsetof(UW_EndGameScreen_C, Image3) == 0x02A8);
static_assert(offsetof(UW_EndGameScreen_C, Image4) == 0x02B0);
static_assert(offsetof(UW_EndGameScreen_C, Image5) == 0x02B8);
static_assert(offsetof(UW_EndGameScreen_C, TextBlock) == 0x02C0);
static_assert(offsetof(UW_EndGameScreen_C, TextBlock6) == 0x02C8);
static_assert(offsetof(UW_EndGameScreen_C, TextBlock7) == 0x02D0);
static_assert(offsetof(UW_EndGameScreen_C, TextBlock8) == 0x02D8);
static_assert(offsetof(UW_EndGameScreen_C, TextBlock9) == 0x02E0);
static_assert(offsetof(UW_EndGameScreen_C, TextBlock_BestPlane) == 0x02E8);
static_assert(offsetof(UW_EndGameScreen_C, TextBlock_BestTank) == 0x02F0);
static_assert(offsetof(UW_EndGameScreen_C, TextBlock_HighestScorePlayer) == 0x02F8);
static_assert(offsetof(UW_EndGameScreen_C, TextBlock_MosthealingScore) == 0x0300);
static_assert(offsetof(UW_EndGameScreen_C, TextBlock_MostKillsPlayer) == 0x0308);
static_assert(offsetof(UW_EndGameScreen_C, TextBlock_WinningTeam) == 0x0310);
static_assert(offsetof(UW_EndGameScreen_C, VerticalBox_Allies) == 0x0318);
static_assert(offsetof(UW_EndGameScreen_C, VerticalBox_Axis) == 0x0320);
static_assert(offsetof(UW_EndGameScreen_C, VerticalBox_MapVoteList) == 0x0328);
static_assert(offsetof(UW_EndGameScreen_C, W_GainedXPEntry) == 0x0330);
static_assert(offsetof(UW_EndGameScreen_C, W_GainedXPEntry10) == 0x0338);
static_assert(offsetof(UW_EndGameScreen_C, W_GainedXPEntry11) == 0x0340);
static_assert(offsetof(UW_EndGameScreen_C, W_GainedXPEntry12) == 0x0348);
static_assert(offsetof(UW_EndGameScreen_C, W_GainedXPEntry13) == 0x0350);
static_assert(offsetof(UW_EndGameScreen_C, W_GainedXPEntry14) == 0x0358);
static_assert(offsetof(UW_EndGameScreen_C, WinningTeam) == 0x0360);
static_assert(offsetof(UW_EndGameScreen_C, CountDownMatRef) == 0x0368);
static_assert(offsetof(FST_Notification, Message_4_A82664224E5F6F83357B259BE824B43C) == 0x0000);
static_assert(offsetof(FST_Notification, Color_6_D02481614EEBD5B9E75269A421E86A40) == 0x0018);
static_assert(offsetof(FST_Notification, Tag_8_74CC42D64A8F1DD9F0D0239DBC45E017) == 0x0028);
static_assert(offsetof(FST_Notification, KilledPlayerUsername_11_9BEB2BE44AC4BE509CC2859E3507A50C) == 0x0030);
